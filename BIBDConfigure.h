/**
 * Neighbor Discovery Scheduling Algorithm Configuration
 * @author woosik lee
 *
 * Algorithm List
 * BIBD
 * Disco
 * Birthday
 * Quorum
 * Combinatoric
 *
 * BIBD List
 * 7 3 1
 * 13 4 1
 * 
 * */
#include <string.h>
enum SC{SABIBD, BIBD,QUORUM,DISCO,BIRTHDAY,COMBINATORIAL,UCONNECT,ABIBD,AUCONNECT,ABIBDWS, ADISCO, BIBDXOR, BIBDDIV, AQUORUM,SEARCHLIGHT, HEDIS,TODIS,DIFFCODE,RBIBD};
enum STYPE{FIX,RANDOM,SEPERATE};

// #define algorithmNum 7
#define algorithmNum 18
// The number of sensor nodes
#define nodeNum 50
// The number of experimental cycle
#define exCycle 2
// #define algorithmDC 10
#define algorithmDC 2
#define algorithm RBIBD
#define randomSeed 119
#define selection FIX
/*
 * BIBD = 1
 * Combinatorial = 2
 * Disco = 3
 * Uconnect = 4
 * Quorum = 5
 * SA(Optimal+Prime) = 6
 * Asymmetric BIBD (ABIBD) = 7
 * Asymmetric U-CONNECT = 8
 * Asymmetric DISCO = 9
 * Asymmetric ABIBD (Vertical-Horizontal Version) = 10
 * Asymmetric ABIBD (Optimal XOR Version) = 11
 * Asymmetric ABIBD (divided long slots from short slots, after that, OR-based SAME algorithm) = 12
 * Asymmetric Quorum = 13
 * SearchLight = 14
 * Hedis = 15
 * Todis = 16
 * DiffCode = 17
 * RBIBD = 18 (Rotation-based NDP)
 */


/********************************** Asymmetric BIBD Divided Version Simulation ******************************/
// 10% and 2% duty cycle
#if ((algorithmNum==12) && (algorithmDC==10))
#define va  91
#define ka  10
#define vb  2451
#define kb  56
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[56]={
17, 78, 155, 174, 210, 220, 234, 245, 260, 261,
267, 309, 430, 483, 527, 603, 608, 642, 751, 768,
948, 1010, 1088, 1146, 1154, 1237, 1246, 1249, 1365, 1383,
1405, 1412, 1417, 1433, 1437, 1447, 1448, 1450, 1560, 1564,
1616, 1821, 1894, 1976, 2005, 2007, 2035, 2109, 2129, 2152,
2197, 2260, 2281, 2361, 2399, 2431};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA  10
	uint32_t TotalSlotsB =2451;
	#define ActiveSlotsB  56
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 1% duty cycle
#elif ((algorithmNum==12) && (algorithmDC==1))
#define va  91
#define ka  10
#define vb  9507
#define kb  98
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[98]={1,13,68,97,137,360,568,611,657,670,696,717,833,889,963,1070,1071,1073,1107,1122,
                  1261,1378,1402,1503,1984,1989,2054,2163,2225,2301,2308,2670,2748,2793,2802,2825,
                  2843,2896,3000,3008,3169,3186,3211,3527,3782,3929,4128,4257,4536,4594,4725,4745,
	                4818,5209,5215,5253,5367,5371,5588,5598,5670,5790,5847,6034,6113,6124,6246,6338,
	                6399,6426,6566,6596,6671,6687,6921,7221,7243,7561,7609,7829,7848,7862,7948,8091,
		              8233,8296,8360,8560,8720,8817,8930,9011,9098,9126,9224,9374,9409,9440
		               };
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA  10
	uint32_t TotalSlotsB =9507;
	#define ActiveSlotsB  98
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 5% duty cycle
#elif ((algorithmNum==12) && (algorithmDC==2))
#define va  91
#define ka  10
#define vb  381
#define kb  26
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[26]={
1, 11, 17, 21, 28, 31, 32, 34, 40, 58,
80, 82, 87, 90, 102, 103, 121, 130, 198, 220,
253, 255, 278, 304, 342, 356};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA  10
	uint32_t TotalSlotsB =381;
	#define ActiveSlotsB  26
#define ActiveSlots 1
uint32_t TotalSlots =1;

#endif

/********************************** Asymmetric BIBD XOR Version Simulation ******************************/
// 10% and 2% duty cycle
#if ((algorithmNum==11) && (algorithmDC==10))
#define va  91
#define ka  10
#define vb  2451
#define kb  67
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[67]={
0, 1, 3, 7, 9, 27, 49, 56, 61, 77,
81, 91, 92, 94, 100, 118, 140, 147, 152, 168,
170, 172, 223, 267, 343, 348, 382, 491, 508, 688,
750, 828, 886, 894, 977, 986, 989, 1105, 1123, 1177,
1190, 1300, 1304, 1356, 1561, 1634, 1716, 1745, 1747, 1775,
1849, 1869, 1892, 1937, 2000, 2021, 2101, 2139, 2171, 2208,
2269, 2346, 2365, 2401, 2411, 2425, 2436};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA  10
	uint32_t TotalSlotsB =2451;
	#define ActiveSlotsB  67
#define ActiveSlots 1
uint32_t TotalSlots =1;
// 10% and 1% duty cycle
#elif ((algorithmNum==11) && (algorithmDC==5))
#define va  91
#define ka  10
#define vb  9507
#define kb  117
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[117]={
0, 1, 3, 9, 13, 27, 49, 56, 61, 68,
77, 81, 91, 92, 94, 97, 100, 118, 137, 140,
147, 152, 168, 172, 360, 568, 611, 657, 670, 696,
717, 833, 889, 963, 1070, 1071, 1073, 1107, 1122, 1261,
1378, 1402, 1503, 1984, 1989, 2054, 2163, 2225, 2301, 2308,
2670, 2748, 2793, 2802, 2825, 2843, 2896, 3000, 3008, 3169,
3186, 3211, 3527, 3782, 3929, 4128, 4257, 4536, 4594, 4725,
4745, 4818, 5209, 5215, 5253, 5367, 5371, 5588, 5598, 5670,
5790, 5847, 6034, 6113, 6124, 6246, 6338, 6399, 6426, 6566,
6596, 6671, 6687, 6921, 7221, 7243, 7561, 7609, 7829, 7848,
7862, 7948, 8091, 8233, 8296, 8360, 8560, 8720, 8817, 8930,
9011, 9098, 9126, 9224, 9374, 9409, 9440};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA  10
	uint32_t TotalSlotsB =9507;
	#define ActiveSlotsB  117
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 5% duty cycle
#elif ((algorithmNum==11) && (algorithmDC==2))
#define va  91
#define ka  10
#define vb  381
#define kb  37
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[37]={
0, 1, 3, 9, 19, 27, 28, 49, 56, 61,
77, 81, 91, 92, 94, 96, 100, 118, 140, 147,
151, 152, 153, 168, 172, 176, 202, 240, 254, 290,
296, 300, 307, 337, 361, 366, 369};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA  10
	uint32_t TotalSlotsB =381;
	#define ActiveSlotsB  37
#define ActiveSlots 1
uint32_t TotalSlots =1;
// 10% and 10% duty cycle
#elif ((algorithmNum==11) && (algorithmDC==1))
#define va  91
#define ka  10
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA  10
	uint32_t TotalSlotsB =91;
	#define ActiveSlotsB  10
#define ActiveSlots 1
uint32_t TotalSlots =1;

#endif
/********************************** Asymmetric DISCO Simulation ******************************/
// 10% and 2% duty cycle
#if ((algorithmNum==9) && (algorithmDC==10))
// 10% Duty Cycle
#define pi 17
#define pj 23
// 2% Duty Cycle
#define pi2 97
#define pj2 67
uint32_t TotalSlotsA = 391;
#define ActiveSlotsA 39
uint32_t TotalSlotsB = 9991;
#define ActiveSlotsB 201
uint32_t BDISCO[1] = {0};
//#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 1% duty cycle
#elif ((algorithmNum==9) && (algorithmDC==5))
// 10% Duty Cycle
#define pi 17
#define pj 23
// 1% Duty Cycle
#define pi2 197
#define pj2 199
uint32_t TotalSlotsA = 391;
#define ActiveSlotsA 39
uint32_t TotalSlotsB= 39203;
#define ActiveSlotsB 395
uint32_t BDISCO[1] = {0};
//#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 5% duty cycle
#elif ((algorithmNum==9) && (algorithmDC==2))
// 10% Duty Cycle
#define pi 17
#define pj 23
// 5% Duty cycle
#define pi2 37
#define pj2 43

uint32_t TotalSlotsA = 391;
#define ActiveSlotsA 39
uint16_t TotalSlotsB = 1591;
#define ActiveSlotsB 79
uint32_t BDISCO[1] = {0};
//#define ActiveSlots 1
uint32_t TotalSlots =1;
// 10% and 10% duty cycle
#elif ((algorithmNum==9) && (algorithmDC==1))
// 10% Duty Cycle
#define pi 17
#define pj 23
// 10% Duty Cycle
#define pi 17
#define pj 23

uint32_t TotalSlotsA = 391;
#define ActiveSlotsA 39
uint16_t TotalSlotsB = 391;
#define ActiveSlotsB 39
uint32_t BDISCO[1] = {0};
//#define ActiveSlots 1
uint32_t TotalSlots =1;

#endif

/********************************** Asymmetric WS version - BIBD Simulation *****************************************/

#if ((algorithmNum==10) && (algorithmDC==10))
#define va  8281
#define ka  910
#define vb  446082
#define kb  9100
#define lamda 1
uint32_t BA[910]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81,
91, 93, 183, 273, 351, 352, 353, 421, 422, 423,
424, 441, 459, 460, 461, 462, 463, 511, 549, 596,
597, 598, 599, 600, 601, 639, 686, 729, 819, 901,
902, 903, 904, 905, 906, 907, 908, 909, 991, 992,
993, 994, 995, 996, 997, 998, 999, 1000, 1051, 1052,
1053, 1054, 1055, 1056, 1082, 1141, 1174, 1175, 1176, 1177,
1178, 1179, 1180, 1181, 1182, 1261, 1262, 1263, 1264, 1351,
1352, 1353, 1354, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1517,
1534, 1535, 1536, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
1624, 1647, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
1728, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
1800, 1801, 1802, 1803, 1804, 1805, 1810, 1877, 1878, 1879,
1880, 1881, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
1957, 1958, 1959, 1967, 2029, 2080, 2081, 2082, 2097, 2098,
2099, 2100, 2101, 2170, 2187, 2241, 2242, 2243, 2244, 2277,
2331, 2367, 2457, 2507, 2508, 2509, 2510, 2511, 2512, 2576,
2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
2597, 2666, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
2709, 2710, 2711, 2712, 2713, 2714, 2715, 2791, 2792, 2793,
2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
2804, 2805, 2806, 2871, 2872, 2873, 2874, 2875, 2876, 2882,
2961, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982,
2983, 2984, 2985, 2986, 2987, 2988, 3031, 3032, 3033, 3034,
3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044,
3045, 3046, 3047, 3048, 3049, 3050, 3051, 3064, 3121, 3151,
3152, 3153, 3154, 3241, 3242, 3243, 3244, 3245, 3332, 3358,
3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3424, 3425,
3426, 3427, 3448, 3514, 3520, 3521, 3522, 3523, 3524, 3525,
3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3559,
3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569,
3570, 3571, 3572, 3573, 3574, 3575, 3610, 3649, 3718, 3719,
3720, 3781, 3782, 3783, 3784, 3785, 3786, 3808, 3871, 3872,
3873, 3874, 3875, 3876, 3877, 3962, 3970, 3971, 3972, 3973,
4054, 4055, 4056, 4057, 4058, 4059, 4060, 4099, 4100, 4101,
4102, 4103, 4144, 4189, 4196, 4197, 4198, 4199, 4200, 4201,
4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211,
4212, 4279, 4286, 4369, 4459, 4487, 4488, 4489, 4490, 4491,
4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501,
4502, 4503, 4504, 4505, 4506, 4507, 4577, 4600, 4601, 4602,
4603, 4604, 4605, 4651, 4652, 4653, 4654, 4655, 4656, 4657,
4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667,
4690, 4736, 4737, 4738, 4739, 4740, 4741, 4826, 4851, 4852,
4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862,
4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4916,
4941, 5006, 5096, 5158, 5159, 5160, 5161, 5162, 5163, 5164,
5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5191, 5192,
5193, 5194, 5195, 5248, 5281, 5360, 5361, 5362, 5363, 5364,
5365, 5366, 5367, 5368, 5371, 5450, 5461, 5551, 5608, 5609,
5610, 5611, 5698, 5720, 5721, 5722, 5761, 5762, 5763, 5764,
5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774,
5775, 5776, 5777, 5778, 5779, 5780, 5781, 5810, 5851, 5852,
5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862,
5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872,
5942, 5997, 5998, 5999, 6000, 6001, 6002, 6003, 6004, 6005,
6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043,
6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053,
6054, 6087, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114,
6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124,
6197, 6238, 6239, 6240, 6241, 6242, 6243, 6328, 6357, 6358,
6359, 6447, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459,
6460, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479,
6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6542, 6561,
6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589,
6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599,
6600, 6647, 6648, 6649, 6650, 6651, 6670, 6737, 6812, 6813,
6814, 6827, 6902, 6917, 7007, 7011, 7012, 7013, 7014, 7015,
7101, 7160, 7161, 7162, 7163, 7164, 7165, 7166, 7167, 7168,
7169, 7170, 7171, 7172, 7173, 7174, 7191, 7250, 7281, 7371,
7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390,
7391, 7392, 7393, 7394, 7395, 7396, 7397, 7471, 7472, 7473,
7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483,
7484, 7485, 7486, 7487, 7488, 7562, 7610, 7611, 7612, 7613,
7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663,
7664, 7665, 7666, 7667, 7668, 7669, 7670, 7700, 7744, 7797,
7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807,
7808, 7809, 7810, 7811, 7887, 7908, 7909, 7910, 7911, 7912,
7913, 7914, 7915, 7916, 7921, 7922, 7923, 7924, 7925, 7998,
8011, 8012, 8013, 8014, 8015, 8016, 8101, 8102, 8191, 8192,
8194, 8195, 8196, 8197, 8198, 8200, 8201, 8202, 8203, 8204,
8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214,
8215, 8216, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225,
8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235,
8236, 8237, 8238, 8240, 8241, 8242, 8243, 8244, 8245, 8247,
8248, 8249, 8250, 8252, 8253, 8254, 8255, 8256, 8257, 8258,
8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8268, 8269,
8270, 8272, 8273, 8274, 8275, 8276, 8277, 8278, 8279, 8280};
uint32_t BB[9100]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81,
91, 92, 94, 100, 118, 140, 147, 152, 168, 172,
182, 183, 537, 538, 539, 540, 541, 542, 543, 544,
545, 718, 790, 791, 792, 793, 794, 795, 796, 797,
798, 799, 800, 801, 802, 803, 804, 912, 971, 1274,
1275, 1422, 1423, 1424, 1425, 1603, 1625, 1626, 1627, 1806,
2171, 2172, 2173, 2352, 3005, 3185, 3186, 6084, 6085, 6086,
6265, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986,
6987, 6988, 6989, 6990, 6991, 6992, 7159, 7466, 7467, 7468,
7469, 7470, 7647, 7876, 7877, 7878, 7879, 7880, 7881, 8057,
8556, 8918, 8919, 9492, 9493, 9494, 9495, 9496, 9497, 9498,
9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508,
9509, 9510, 9511, 9512, 9673, 10515, 10516, 10517, 10518, 10519,
10520, 10696, 11203, 11204, 11205, 11206, 11207, 11208, 11209, 11210,
11211, 11212, 11213, 11214, 11215, 11216, 11217, 11218, 11219, 11384,
11971, 11972, 11973, 11974, 11975, 11976, 12152, 13707, 13708, 13709,
13710, 13888, 14133, 14134, 14135, 14136, 14137, 14138, 14139, 14140,
14141, 14142, 14143, 14144, 14145, 14146, 14147, 14148, 14149, 14150,
14151, 14152, 14153, 14314, 14617, 14618, 14619, 14620, 14798, 15077,
15078, 15079, 15080, 15081, 15082, 15083, 15084, 15085, 15086, 15087,
15088, 15089, 15090, 15091, 15258, 16528, 16529, 16530, 16531, 16709,
16715, 16716, 16717, 16718, 16719, 16720, 16721, 16722, 16723, 16724,
16725, 16726, 16727, 16728, 16729, 16896, 17261, 17262, 17263, 17264,
17265, 17266, 17267, 17268, 17269, 17270, 17271, 17272, 17273, 17274,
17275, 17442, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17507,
17508, 17509, 17510, 17511, 17512, 17513, 17514, 17515, 17516, 17517,
17518, 17519, 17520, 17681, 18166, 18167, 18168, 18169, 18347, 18712,
18713, 18714, 18715, 18893, 19738, 19739, 19740, 19741, 19742, 19743,
19744, 19745, 19746, 19919, 20805, 20806, 20807, 20808, 20986, 21649,
21650, 21651, 21652, 21653, 21654, 21655, 21656, 21657, 21708, 21709,
21710, 21711, 21712, 21713, 21830, 21850, 21851, 21852, 21853, 21854,
21855, 21856, 21857, 21858, 21859, 21860, 21861, 21862, 21863, 21864,
21865, 21866, 21889, 22031, 22618, 22619, 22620, 22621, 22622, 22623,
22799, 22832, 22833, 22834, 22835, 22836, 22837, 22838, 22839, 22840,
23013, 23283, 23284, 23285, 23464, 24689, 24690, 24691, 24692, 24693,
24694, 24695, 24696, 24697, 24698, 24699, 24700, 24701, 24702, 24703,
24704, 24705, 24706, 24707, 24708, 24709, 24870, 24925, 24926, 24927,
24928, 24929, 24930, 24931, 24932, 24933, 25106, 25399, 25400, 25401,
25402, 25403, 25404, 25405, 25406, 25407, 25408, 25409, 25410, 25411,
25412, 25413, 25414, 25415, 25580, 25922, 25923, 25924, 26103, 26145,
26146, 26147, 26148, 26149, 26150, 26151, 26152, 26153, 26154, 26155,
26156, 26157, 26158, 26159, 26160, 26161, 26162, 26163, 26164, 26165,
26326, 26559, 26560, 26561, 26740, 26816, 26817, 26818, 26819, 26820,
26821, 26822, 26823, 26824, 26825, 26826, 26827, 26828, 26829, 26830,
26997, 27077, 27078, 27079, 27080, 27081, 27082, 27258, 28715, 28716,
28717, 28718, 28719, 28720, 28806, 28807, 28808, 28809, 28810, 28811,
28896, 28987, 29016, 29017, 29018, 29197, 29261, 29262, 29263, 29264,
29265, 29266, 29442, 29488, 29489, 29490, 29491, 29492, 29669, 29910,
29911, 29912, 29913, 29914, 29915, 29916, 29917, 29918, 29919, 29920,
29921, 29922, 29923, 29924, 30091, 30578, 30940, 30941, 31332, 31333,
31334, 31335, 31336, 31337, 31338, 31339, 31340, 31341, 31342, 31343,
31344, 31345, 31346, 31347, 31348, 31349, 31350, 31351, 31352, 31496,
31497, 31498, 31499, 31500, 31501, 31502, 31503, 31504, 31505, 31506,
31507, 31508, 31509, 31510, 31511, 31512, 31513, 31677, 32242, 32243,
32244, 32245, 32246, 32247, 32248, 32249, 32250, 32251, 32252, 32253,
32254, 32255, 32256, 32257, 32258, 32259, 32260, 32261, 32262, 32423,
32673, 32674, 32675, 32676, 32677, 32854, 34753, 34754, 34755, 34756,
34757, 34758, 34759, 34760, 34761, 34934, 35765, 35945, 35946, 35955,
35956, 35957, 35958, 35959, 35960, 35961, 35962, 35963, 35964, 35965,
35966, 35967, 35968, 35969, 35970, 35971, 36136, 36387, 36388, 36389,
36568, 37119, 37120, 37121, 37122, 37123, 37124, 37125, 37126, 37127,
37300, 37411, 37412, 37413, 37414, 37415, 37416, 37417, 37418, 37419,
37420, 37421, 37422, 37423, 37424, 37425, 37426, 37427, 37592, 38373,
38374, 38375, 38376, 38377, 38378, 38379, 38380, 38381, 38382, 38383,
38384, 38385, 38386, 38387, 38430, 38431, 38432, 38433, 38434, 38435,
38436, 38437, 38438, 38439, 38440, 38441, 38442, 38443, 38444, 38445,
38446, 38447, 38448, 38449, 38450, 38554, 38611, 38753, 38754, 38755,
38934, 39134, 39135, 39136, 39137, 39138, 39315, 39504, 39505, 39506,
39507, 39508, 39509, 39510, 39511, 39512, 39513, 39514, 39515, 39516,
39517, 39518, 39519, 39520, 39685, 39824, 39825, 39826, 39827, 40005,
40224, 40586, 40587, 40643, 40644, 40645, 40646, 40824, 41251, 41252,
41253, 41254, 41255, 41256, 41257, 41258, 41259, 41260, 41261, 41262,
41263, 41264, 41265, 41266, 41267, 41268, 41269, 41270, 41271, 41432,
41649, 41650, 41651, 41652, 41653, 41654, 41655, 41656, 41657, 41658,
41659, 41660, 41661, 41662, 41663, 41830, 42889, 42890, 42891, 42892,
42893, 42894, 42895, 42896, 42897, 42898, 42899, 42900, 42901, 42902,
42903, 42904, 42905, 42906, 42907, 42908, 42909, 43070, 43100, 43101,
43102, 43103, 43281, 43435, 43436, 43437, 43438, 43439, 43440, 43441,
43442, 43443, 43444, 43445, 43446, 43447, 43448, 43449, 43450, 43451,
43452, 43453, 43454, 43455, 43616, 43737, 43738, 43739, 43740, 43918,
43957, 43958, 43959, 43960, 43961, 44138, 47049, 47142, 47143, 47144,
47145, 47146, 47229, 47230, 47323, 48232, 48594, 48595, 48644, 48645,
48646, 48647, 48648, 48649, 48825, 50373, 50374, 50375, 50376, 50377,
50378, 50554, 51477, 51478, 51479, 51480, 51481, 51482, 51483, 51484,
51485, 51486, 51487, 51488, 51489, 51490, 51491, 51658, 51738, 51739,
51740, 51741, 51742, 51743, 51919, 52517, 52518, 52519, 52520, 52521,
52522, 52523, 52524, 52525, 52526, 52527, 52528, 52529, 52530, 52531,
52532, 52533, 52698, 52928, 52929, 52930, 52931, 53109, 53336, 53337,
53338, 53339, 53340, 53341, 53342, 53343, 53344, 53345, 53346, 53347,
53348, 53349, 53350, 53351, 53352, 53517, 53649, 53650, 53651, 53652,
53653, 53654, 53830, 53843, 53844, 53845, 53846, 53847, 53848, 53849,
53850, 53851, 53852, 53853, 53854, 53855, 53856, 53857, 54024, 54155,
54156, 54157, 54158, 54159, 54160, 54161, 54162, 54163, 54164, 54165,
54166, 54167, 54168, 54169, 54170, 54171, 54246, 54247, 54248, 54249,
54250, 54251, 54252, 54253, 54254, 54255, 54256, 54257, 54258, 54259,
54260, 54261, 54262, 54336, 54427, 54701, 54702, 54703, 54704, 54705,
54706, 54707, 54708, 54709, 54710, 54711, 54712, 54713, 54714, 54715,
54716, 54717, 54882, 55294, 55295, 55296, 55297, 55475, 55592, 55593,
55594, 55595, 55596, 55597, 55598, 55599, 55600, 55773, 57139, 57140,
57141, 57142, 57143, 57144, 57145, 57146, 57147, 57320, 57867, 57868,
57869, 57870, 57871, 57872, 57873, 57874, 57875, 58048, 58153, 58154,
58155, 58156, 58157, 58268, 58269, 58270, 58271, 58272, 58273, 58274,
58275, 58276, 58277, 58278, 58279, 58280, 58281, 58282, 58283, 58284,
58285, 58286, 58287, 58288, 58334, 58449, 58773, 58774, 58775, 58954,
59501, 59502, 59503, 59682, 60434, 60435, 60436, 60437, 60438, 60439,
60440, 60441, 60442, 60443, 60444, 60445, 60446, 60447, 60448, 60449,
60450, 60615, 60974, 60975, 60976, 60977, 60978, 61155, 61245, 61362,
61363, 61364, 61365, 61366, 61367, 61368, 61369, 61370, 61371, 61372,
61373, 61374, 61375, 61376, 61377, 61378, 61379, 61380, 61381, 61382,
61425, 61426, 61543, 61776, 61777, 61778, 61884, 61885, 61886, 61887,
61888, 61957, 62064, 62065, 62426, 62427, 62670, 62671, 62672, 62673,
62674, 62675, 62676, 62677, 62678, 62679, 62680, 62681, 62682, 62683,
62684, 62851, 62974, 63336, 63337, 63477, 63478, 63479, 63480, 63481,
63482, 63658, 64547, 64548, 64549, 64550, 64551, 64552, 64553, 64554,
64555, 64556, 64557, 64558, 64559, 64560, 64561, 64562, 64563, 64564,
64565, 64566, 64567, 64728, 65843, 65844, 65845, 65846, 65847, 65848,
66024, 66876, 66877, 66878, 66879, 66880, 66881, 66882, 66883, 66884,
67057, 67331, 67332, 67333, 67334, 67335, 67336, 67337, 67338, 67339,
67512, 67823, 67824, 67825, 67826, 67827, 67828, 67829, 67830, 67831,
67832, 67833, 67834, 67835, 67836, 67837, 67838, 67839, 67840, 67841,
67842, 67843, 68004, 68072, 68073, 68074, 68075, 68076, 68253, 68709,
68710, 68711, 68712, 68713, 68890, 68965, 68966, 68967, 69146, 69162,
69524, 69525, 70165, 70166, 70167, 70168, 70169, 70346, 71801, 71981,
71982, 73060, 73061, 73062, 73241, 73257, 73437, 73438, 73863, 73864,
73865, 73866, 73867, 73868, 73869, 73870, 73871, 73872, 73873, 73874,
73875, 73876, 73877, 73954, 73955, 73956, 73957, 73958, 73959, 73960,
73961, 73962, 73963, 73964, 73965, 73966, 73967, 73968, 74044, 74135,
74591, 74592, 74593, 74594, 74595, 74596, 74597, 74598, 74599, 74600,
74601, 74602, 74603, 74604, 74605, 74772, 75314, 75315, 75316, 75317,
75495, 75813, 75814, 75815, 75816, 75817, 75818, 75819, 75820, 75821,
75822, 75823, 75824, 75825, 75826, 75827, 75828, 75829, 75994, 76042,
76043, 76044, 76045, 76223, 76497, 76498, 76499, 76500, 76678, 77651,
77652, 77653, 77654, 77655, 77656, 77657, 77658, 77659, 77660, 77661,
77662, 77663, 77664, 77665, 77666, 77667, 77668, 77669, 77670, 77671,
77832, 79089, 79090, 79091, 79092, 79093, 79094, 79095, 79096, 79097,
79098, 79099, 79100, 79101, 79102, 79103, 79104, 79105, 79270, 80017,
80018, 80019, 80020, 80021, 80022, 80023, 80024, 80025, 80026, 80027,
80028, 80029, 80030, 80031, 80032, 80033, 80034, 80035, 80036, 80037,
80198, 80272, 80273, 80274, 80275, 80276, 80277, 80278, 80279, 80280,
80281, 80282, 80283, 80284, 80285, 80286, 80287, 80288, 80453, 81072,
81073, 81074, 81075, 81076, 81077, 81078, 81079, 81080, 81253, 83366,
83367, 83368, 83369, 83370, 83371, 83372, 83373, 83374, 83375, 83376,
83377, 83378, 83379, 83380, 83381, 83382, 83547, 84055, 84056, 84057,
84058, 84059, 84060, 84061, 84062, 84063, 84064, 84065, 84066, 84067,
84068, 84069, 84236, 84498, 84499, 84500, 84501, 84502, 84503, 84679,
85271, 85272, 85273, 85274, 85275, 85452, 85506, 85507, 85508, 85509,
85687, 85863, 85864, 85865, 85866, 85867, 85868, 86044, 86591, 86592,
86593, 86594, 86595, 86596, 86772, 86909, 86910, 86911, 86912, 86913,
87090, 87256, 87257, 87258, 87437, 87455, 87456, 87457, 87458, 87459,
87636, 87781, 87782, 87783, 87784, 87910, 87911, 87912, 87913, 87914,
87962, 88091, 88150, 88151, 88152, 88153, 88154, 88155, 88156, 88157,
88158, 88159, 88160, 88161, 88162, 88163, 88164, 88331, 88363, 88543,
88544, 88917, 88918, 88919, 88920, 88921, 88922, 88923, 88924, 88925,
88926, 88927, 88928, 88929, 88930, 88931, 88932, 88933, 89000, 89098,
89362, 89363, 90001, 90181, 90182, 90547, 90727, 90728, 91004, 91005,
91006, 91007, 91008, 91185, 91283, 91284, 91285, 91286, 91287, 91288,
91289, 91290, 91291, 91292, 91293, 91294, 91295, 91296, 91297, 91298,
91299, 91464, 91628, 91629, 91630, 91631, 91632, 91633, 91634, 91635,
91636, 91809, 92094, 92456, 92457, 93084, 93085, 93086, 93087, 93088,
93089, 93090, 93091, 93092, 93265, 94122, 94123, 94124, 94125, 94126,
94127, 94128, 94129, 94130, 94131, 94132, 94133, 94134, 94135, 94136,
94137, 94138, 94139, 94140, 94141, 94142, 94303, 95782, 95783, 95784,
95785, 95786, 95787, 95963, 96055, 96056, 96057, 96058, 96059, 96060,
96236, 97812, 97813, 97814, 97993, 98706, 98707, 98708, 98709, 98710,
98711, 98712, 98713, 98714, 98715, 98716, 98717, 98718, 98719, 98720,
98887, 99268, 99269, 99270, 99449, 100037, 100038, 100039, 100040, 100041,
100042, 100043, 100044, 100045, 100046, 100047, 100048, 100049, 100050, 100051,
100052, 100053, 100054, 100055, 100056, 100057, 100162, 100163, 100164, 100165,
100166, 100167, 100168, 100169, 100170, 100171, 100172, 100173, 100174, 100175,
100176, 100218, 100343, 100765, 100766, 100767, 100768, 100769, 100770, 100771,
100772, 100773, 100774, 100775, 100776, 100777, 100778, 100779, 100780, 100781,
100782, 100783, 100784, 100785, 100946, 101977, 101978, 101979, 101980, 102158,
104641, 104642, 104643, 104644, 104645, 104646, 104647, 104648, 104649, 104822,
105406, 105407, 105408, 105409, 105410, 105411, 105412, 105413, 105414, 105415,
105416, 105417, 105418, 105419, 105420, 105421, 105422, 105423, 105424, 105425,
105426, 105587, 106275, 106276, 106277, 106456, 108190, 108191, 108192, 108193,
108194, 108195, 108196, 108197, 108198, 108371, 108567, 108568, 108569, 108570,
108571, 108748, 109828, 109829, 109830, 109831, 109832, 109833, 109834, 109835,
109836, 109978, 109979, 109980, 109981, 109982, 109983, 110009, 110159, 110229,
110230, 110231, 110232, 110233, 110234, 110235, 110236, 110237, 110238, 110239,
110240, 110241, 110242, 110243, 110244, 110245, 110246, 110247, 110248, 110249,
110374, 110375, 110376, 110377, 110378, 110379, 110380, 110381, 110382, 110410,
110555, 111303, 111304, 111305, 111306, 111307, 111308, 111309, 111310, 111311,
111312, 111313, 111314, 111315, 111316, 111317, 111318, 111319, 111484, 111659,
111839, 111840, 111843, 111844, 111845, 111846, 111847, 112024, 112031, 112032,
112033, 112034, 112035, 112036, 112037, 112038, 112039, 112040, 112041, 112042,
112043, 112044, 112045, 112046, 112047, 112212, 112533, 112534, 112535, 112536,
112714, 113989, 113990, 113991, 113992, 114170, 114374, 114375, 114376, 114555,
114935, 115115, 115116, 115268, 115269, 115270, 115271, 115272, 115273, 115274,
115275, 115276, 115277, 115278, 115279, 115280, 115281, 115282, 115449, 116012,
116013, 116014, 116126, 116127, 116128, 116129, 116130, 116131, 116132, 116133,
116134, 116135, 116136, 116137, 116138, 116139, 116140, 116141, 116142, 116193,
116307, 116558, 116559, 116560, 116739, 116906, 116907, 116908, 116909, 116910,
116911, 116912, 116913, 116914, 116915, 116916, 116917, 116918, 116919, 116920,
117087, 117452, 117453, 117454, 117455, 117456, 117457, 117458, 117459, 117460,
117461, 117462, 117463, 117464, 117465, 117466, 117633, 117927, 117928, 117929,
117930, 117931, 117932, 117933, 117934, 117935, 118108, 119561, 119562, 119563,
119602, 119603, 119604, 119605, 119606, 119607, 119608, 119609, 119610, 119611,
119612, 119613, 119614, 119615, 119616, 119617, 119618, 119619, 119620, 119621,
119622, 119742, 119783, 120534, 120535, 120536, 120537, 120538, 120539, 120715,
121365, 121366, 121367, 121368, 121369, 121370, 121371, 121372, 121373, 121374,
121375, 121376, 121377, 121378, 121379, 121495, 121496, 121497, 121498, 121499,
121500, 121501, 121502, 121503, 121504, 121505, 121506, 121507, 121508, 121509,
121510, 121511, 121546, 121671, 121672, 121673, 121674, 121675, 121676, 121852,
121990, 121991, 121992, 121993, 121994, 121995, 122171, 122816, 122817, 122818,
122819, 122997, 123764, 123765, 123766, 123767, 123768, 123945, 124037, 124038,
124039, 124040, 124041, 124218, 124763, 124854, 124943, 124944, 125216, 125217,
127129, 127309, 127310, 127410, 127411, 127412, 127413, 127414, 127415, 127416,
127417, 127418, 127419, 127420, 127421, 127422, 127423, 127424, 127425, 127426,
127591, 129095, 129096, 129097, 129098, 129276, 130158, 130159, 130160, 130161,
130162, 130163, 130164, 130165, 130166, 130167, 130168, 130169, 130170, 130171,
130172, 130173, 130174, 130175, 130176, 130177, 130178, 130339, 130733, 130734,
130735, 130736, 130914, 131279, 131280, 131281, 131282, 131460, 131486, 131487,
131488, 131489, 131490, 131491, 131492, 131493, 131494, 131614, 131615, 131616,
131617, 131618, 131619, 131620, 131621, 131622, 131623, 131624, 131625, 131626,
131627, 131628, 131629, 131630, 131631, 131632, 131633, 131634, 131667, 131795,
132851, 132852, 132853, 132854, 132855, 132856, 132857, 132858, 132859, 133032,
133365, 133366, 133367, 133368, 133369, 133370, 133546, 134485, 134486, 134487,
134651, 134652, 134653, 134654, 134655, 134656, 134657, 134658, 134659, 134660,
134661, 134662, 134663, 134664, 134665, 134666, 134762, 134763, 134764, 134765,
134766, 134767, 134768, 134769, 134770, 134832, 134943, 135048, 135049, 135050,
135051, 135052, 135229, 136102, 136103, 136104, 136105, 136138, 136283, 136500,
136501, 137096, 137097, 137098, 137099, 137100, 137101, 137277, 137670, 137671,
137672, 137851, 138129, 138130, 138131, 138132, 138133, 138134, 138135, 138136,
138137, 138310, 138493, 138494, 138495, 138496, 138497, 138498, 138499, 138500,
138501, 138564, 138565, 138566, 138567, 138568, 138569, 138570, 138571, 138572,
138573, 138574, 138575, 138576, 138577, 138578, 138674, 138734, 138735, 138736,
138737, 138738, 138739, 138745, 138915, 139280, 139281, 139282, 139283, 139284,
139285, 139461, 139763, 139764, 139765, 139944, 140127, 140128, 140129, 140308,
140946, 140947, 140948, 141127, 141606, 141607, 141608, 141609, 141610, 141611,
141612, 141613, 141614, 141615, 141616, 141617, 141618, 141619, 141620, 141621,
141622, 141787, 141840, 141841, 141842, 141843, 141844, 141845, 141846, 141847,
141848, 141849, 141850, 141851, 141852, 141853, 141854, 142021, 143589, 143590,
143591, 143592, 143593, 143594, 143595, 143596, 143597, 143770, 144057, 144058,
144059, 144060, 144061, 144238, 144590, 144591, 144592, 144593, 144594, 144595,
144596, 144597, 144598, 144771, 144785, 144786, 144787, 144788, 144789, 144966,
145223, 145224, 145225, 145404, 146651, 146652, 146653, 146654, 146655, 146656,
146720, 146721, 146722, 146723, 146724, 146725, 146726, 146727, 146728, 146729,
146730, 146731, 146732, 146733, 146734, 146735, 146736, 146737, 146738, 146739,
146740, 146832, 146901, 146956, 146957, 146958, 146959, 146960, 146961, 146962,
146963, 146964, 147137, 147149, 147329, 147330, 147539, 147540, 147541, 147542,
147543, 147544, 147545, 147546, 147547, 147548, 147549, 147550, 147551, 147552,
147553, 147554, 147555, 147556, 147557, 147558, 147559, 147720, 147877, 148057,
148058, 148358, 148359, 148360, 148361, 148362, 148363, 148364, 148365, 148366,
148367, 148368, 148369, 148370, 148371, 148372, 148373, 148374, 148375, 148376,
148377, 148378, 148539, 148904, 148905, 148906, 148907, 148908, 148909, 148910,
148911, 148912, 148913, 148914, 148915, 148916, 148917, 148918, 148919, 148920,
148921, 148922, 148923, 148924, 149085, 149244, 149245, 149246, 149247, 149248,
149425, 149575, 149576, 149577, 149578, 149579, 149580, 149581, 149582, 149583,
149584, 149585, 149586, 149587, 149588, 149589, 149756, 150334, 150696, 150697,
150774, 150775, 150776, 150955, 151026, 151027, 151028, 151029, 151207, 151668,
151669, 151670, 151671, 151672, 151673, 151674, 151675, 151676, 151677, 151678,
151679, 151680, 151681, 151682, 151849, 152162, 152163, 152164, 152165, 152166,
152167, 152168, 152169, 152170, 152171, 152172, 152173, 152174, 152175, 152176,
152177, 152178, 152343, 152391, 152392, 152393, 152394, 152572, 153140, 153141,
153142, 153321, 153618, 153619, 153620, 153621, 153622, 153623, 153624, 153625,
153626, 153627, 153628, 153629, 153630, 153631, 153632, 153633, 153634, 153799,
154034, 154035, 154036, 154037, 154038, 154039, 154040, 154041, 154042, 154043,
154044, 154045, 154046, 154047, 154048, 154215, 154249, 154250, 154251, 154252,
154253, 154430, 154853, 154854, 154855, 154856, 154857, 154858, 154859, 154860,
154861, 154862, 154863, 154864, 154865, 154866, 154867, 155034, 155217, 155218,
155219, 155220, 155221, 155222, 155223, 155224, 155225, 155226, 155227, 155228,
155229, 155230, 155231, 155398, 155667, 155668, 155669, 155670, 155848, 156304,
156305, 156306, 156307, 156485, 156668, 156669, 156670, 156671, 156849, 157057,
157058, 157059, 157060, 157061, 157062, 157063, 157064, 157065, 157238, 157341,
157521, 157522, 158691, 158692, 158693, 158805, 158806, 158807, 158808, 158809,
158810, 158811, 158812, 158813, 158814, 158815, 158816, 158817, 158818, 158819,
158820, 158821, 158872, 158986, 159800, 159801, 159802, 159803, 159804, 159981,
160313, 160314, 160315, 160316, 160317, 160318, 160319, 160320, 160321, 160322,
160323, 160324, 160325, 160326, 160327, 160392, 160393, 160394, 160395, 160396,
160397, 160494, 160573, 160697, 160698, 160699, 160700, 160701, 160702, 160703,
160704, 160705, 160825, 160826, 160827, 160828, 160829, 160830, 160831, 160832,
160833, 160834, 160835, 160836, 160837, 160838, 160839, 160840, 160841, 160842,
160843, 160844, 160845, 160878, 160890, 161006, 161252, 161253, 161256, 161257,
161258, 161259, 161260, 161437, 161575, 161576, 161577, 161578, 161579, 161580,
161756, 161764, 161765, 161766, 161767, 161945, 162331, 162332, 162333, 162346,
162512, 162708, 162709, 163668, 163669, 163670, 163671, 163672, 163673, 163849,
164883, 164884, 164885, 164886, 164887, 164888, 164889, 164890, 164891, 165064,
165495, 165496, 165497, 165498, 165676, 166517, 166518, 166519, 166698, 166853,
166854, 166855, 166856, 166857, 166858, 166976, 166977, 166978, 166979, 166980,
166981, 166982, 166983, 166984, 167034, 167157, 167217, 167218, 167219, 167220,
167221, 167222, 167398, 167704, 167705, 167706, 167707, 167708, 167709, 167710,
167711, 167712, 167861, 167862, 167863, 167864, 167885, 168042, 168724, 168725,
168726, 168727, 168728, 168729, 168730, 168731, 168732, 168733, 168734, 168735,
168736, 168737, 168738, 168739, 168740, 168905, 170016, 170017, 170018, 170019,
170020, 170021, 170022, 170023, 170024, 170025, 170026, 170027, 170028, 170029,
170030, 170031, 170032, 170033, 170034, 170035, 170036, 170197, 170362, 170363,
170364, 170365, 170366, 170367, 170368, 170369, 170370, 170371, 170372, 170373,
170374, 170375, 170376, 170377, 170378, 170543, 170908, 170909, 170910, 170911,
170912, 170913, 170914, 170915, 170916, 170917, 170918, 170919, 170920, 170921,
170922, 170923, 170924, 171089, 172091, 172092, 172093, 172094, 172095, 172096,
172097, 172098, 172099, 172100, 172101, 172102, 172103, 172104, 172105, 172106,
172107, 172272, 172313, 172314, 172315, 172316, 172317, 172318, 172494, 173073,
173074, 173075, 173076, 173077, 173078, 173079, 173080, 173081, 173160, 173161,
173162, 173254, 173292, 173293, 173294, 173295, 173296, 173297, 173298, 173299,
173300, 173301, 173302, 173303, 173304, 173305, 173306, 173307, 173308, 173309,
173310, 173311, 173312, 173341, 173473, 173496, 173497, 173498, 173499, 173500,
173501, 173677, 173781, 173782, 173783, 173784, 173785, 173786, 173787, 173788,
173789, 173790, 173791, 173792, 173793, 173794, 173795, 173888, 173889, 173890,
173962, 174054, 174055, 174056, 174057, 174058, 174059, 174060, 174061, 174062,
174063, 174064, 174065, 174066, 174067, 174068, 174069, 174235, 174707, 174708,
174709, 174782, 174783, 174784, 174785, 174786, 174787, 174788, 174789, 174790,
174791, 174792, 174793, 174794, 174795, 174796, 174888, 174963, 175232, 175233,
175234, 175235, 175413, 175749, 175750, 175751, 175752, 175753, 175754, 175755,
175756, 175757, 175758, 175759, 175760, 175761, 175762, 175763, 175764, 175765,
175766, 175767, 175768, 175769, 175862, 175863, 175864, 175865, 175866, 175867,
175930, 176043, 176362, 176363, 176364, 176365, 176366, 176543, 177168, 177169,
177170, 177171, 177172, 177173, 177174, 177175, 177176, 177349, 177421, 177422,
177423, 177424, 177425, 177426, 177427, 177428, 177429, 177430, 177431, 177432,
177433, 177434, 177435, 177452, 177602, 177814, 177815, 178000, 178001, 178002,
178003, 178004, 178181, 178546, 178547, 178548, 178549, 178550, 178727, 178872,
178873, 178874, 178875, 179053, 179090, 179452, 179453, 179636, 179998, 179999,
181027, 181028, 181029, 181030, 181031, 181032, 181033, 181034, 181035, 181036,
181037, 181038, 181039, 181040, 181041, 181042, 181043, 181044, 181045, 181046,
181047, 181208, 181391, 181392, 181393, 181394, 181395, 181396, 181397, 181398,
181399, 181400, 181401, 181402, 181403, 181404, 181405, 181406, 181407, 181408,
181409, 181410, 181411, 181572, 181607, 181608, 181609, 181610, 181611, 181612,
181613, 181614, 181615, 181616, 181617, 181618, 181619, 181620, 181621, 181788,
183058, 183059, 183060, 183061, 183120, 183121, 183122, 183123, 183124, 183125,
183126, 183127, 183128, 183129, 183130, 183131, 183132, 183133, 183134, 183135,
183136, 183137, 183138, 183139, 183140, 183239, 183301, 183352, 183353, 183354,
183533, 184246, 184247, 184248, 184249, 184250, 184251, 184252, 184253, 184254,
184255, 184256, 184257, 184258, 184259, 184260, 184427, 184539, 184540, 184541,
184542, 184543, 184544, 184545, 184546, 184547, 184720, 185486, 185487, 185488,
185489, 185490, 185491, 185492, 185493, 185494, 185495, 185496, 185497, 185498,
185499, 185500, 185501, 185502, 185503, 185504, 185505, 185506, 185667, 185781,
185782, 185783, 185784, 185785, 185786, 185962, 186173, 186174, 186175, 186354,
186487, 186488, 186489, 186490, 186491, 186492, 186493, 186494, 186495, 186496,
186497, 186498, 186499, 186500, 186501, 186502, 186503, 186504, 186505, 186506,
186507, 186668, 187015, 187016, 187017, 187018, 187019, 187020, 187021, 187022,
187023, 187024, 187025, 187026, 187027, 187028, 187029, 187030, 187031, 187196,
187881, 187882, 187883, 187884, 188062, 188361, 188362, 188363, 188364, 188365,
188366, 188367, 188368, 188369, 188542, 188609, 188610, 188611, 188612, 188790,
189421, 189422, 189423, 189424, 189425, 189426, 189602, 189797, 189798, 189799,
189800, 189801, 189802, 189803, 189804, 189805, 189806, 189807, 189808, 189809,
189810, 189811, 189978, 189995, 189996, 189997, 190176, 191248, 191249, 191250,
191251, 191429, 191559, 191560, 191561, 191562, 191563, 191740, 192020, 192021,
192022, 192023, 192024, 192025, 192026, 192027, 192028, 192029, 192030, 192031,
192032, 192033, 192034, 192035, 192036, 192201, 192293, 192294, 192295, 192296,
192297, 192298, 192299, 192300, 192301, 192302, 192303, 192304, 192305, 192306,
192307, 192308, 192309, 192474, 192657, 192658, 192659, 192660, 192661, 192662,
192663, 192664, 192665, 192666, 192667, 192668, 192669, 192670, 192671, 192672,
192673, 192838, 193607, 193608, 193609, 193610, 193611, 193612, 193788, 194651,
194831, 194832, 195296, 195297, 195298, 195299, 195300, 195301, 195302, 195303,
195304, 195305, 195306, 195307, 195308, 195309, 195310, 195311, 195312, 195477,
195882, 195883, 195884, 195885, 195886, 195887, 196063, 196610, 196611, 196612,
196613, 196614, 196615, 196791, 197753, 197754, 197755, 197756, 197757, 197758,
197759, 197760, 197761, 197762, 197763, 197764, 197765, 197766, 197767, 197768,
197769, 197934, 198073, 198074, 198075, 198076, 198254, 199658, 199659, 199660,
199661, 199662, 199839, 199955, 199956, 199957, 199958, 199959, 199960, 199961,
199962, 199963, 199964, 199965, 199966, 199967, 199968, 199969, 199970, 199971,
199972, 199973, 199974, 199975, 200136, 200748, 201110, 201111, 201263, 201264,
201265, 201266, 201267, 201268, 201269, 201270, 201271, 201272, 201273, 201274,
201275, 201276, 201277, 201444, 201797, 201798, 201799, 201800, 201801, 201802,
201978, 202714, 202715, 202716, 202717, 202895, 202921, 202922, 202923, 202924,
202925, 202926, 202927, 202928, 202929, 202934, 202935, 202936, 202937, 202938,
203102, 203115, 203595, 203596, 203597, 203598, 203599, 203600, 203601, 203602,
203603, 203604, 203605, 203606, 203607, 203608, 203609, 203610, 203611, 203612,
203613, 203614, 203615, 203776, 204024, 204386, 204387, 204555, 204556, 204557,
204736, 204845, 204846, 204847, 204848, 204849, 205026, 205085, 205086, 205087,
205088, 205089, 205090, 205091, 205092, 205093, 205094, 205095, 205096, 205097,
205098, 205099, 205124, 205125, 205126, 205127, 205128, 205129, 205130, 205131,
205132, 205133, 205134, 205135, 205136, 205137, 205138, 205139, 205140, 205266,
205305, 205506, 205507, 205508, 205509, 205510, 205511, 205512, 205513, 205514,
205515, 205516, 205517, 205518, 205519, 205520, 205521, 205522, 205523, 205524,
205525, 205526, 205687, 206074, 206075, 206076, 206077, 206078, 206079, 206234,
206235, 206236, 206237, 206238, 206239, 206240, 206241, 206242, 206243, 206244,
206245, 206246, 206247, 206248, 206249, 206250, 206251, 206252, 206253, 206254,
206255, 206415, 206536, 206537, 206538, 206539, 206717, 207490, 207491, 207492,
207493, 207494, 207495, 207496, 207497, 207498, 207499, 207500, 207501, 207502,
207503, 207504, 207505, 207506, 207671, 207781, 207782, 207783, 207784, 207785,
207786, 207787, 207788, 207789, 207790, 207791, 207792, 207793, 207794, 207795,
207796, 207797, 207798, 207799, 207800, 207801, 207937, 207962, 208117, 208118,
209837, 209838, 209839, 209840, 209841, 209842, 209843, 209844, 209845, 210018,
211221, 211222, 211223, 211224, 211225, 211226, 211227, 211228, 211229, 211230,
211231, 211232, 211233, 211234, 211235, 211236, 211237, 211402, 211471, 211472,
211473, 211652, 212762, 212763, 212764, 212765, 212766, 212943, 213263, 213264,
213265, 213266, 213267, 213268, 213444, 213852, 214214, 214215, 214478, 214479,
214480, 214481, 214482, 214483, 214484, 214485, 214486, 214659, 214861, 214862,
214863, 214864, 214865, 214866, 214867, 214868, 214869, 214870, 214871, 214872,
214873, 214874, 214875, 214876, 214877, 215042, 215128, 215129, 215130, 215131,
215132, 215309, 215661, 215662, 215663, 215664, 215665, 215666, 215667, 215668,
215669, 215698, 215699, 215700, 215701, 215702, 215703, 215704, 215705, 215706,
215707, 215708, 215709, 215710, 215711, 215712, 215713, 215714, 215715, 215716,
215717, 215718, 215842, 215879, 215971, 215972, 215973, 215974, 215975, 215976,
215977, 215978, 215979, 215980, 215981, 215982, 215983, 215984, 215985, 215986,
215987, 215988, 215989, 215990, 215991, 216152, 216218, 216580, 216581, 217085,
217086, 217087, 217088, 217089, 217090, 217266, 217295, 217296, 217297, 217476,
219047, 219048, 219049, 219050, 219051, 219052, 219053, 219054, 219055, 219056,
219057, 219058, 219059, 219060, 219061, 219062, 219063, 219228, 219645, 219646,
219647, 219648, 219649, 219650, 219651, 219652, 219653, 219654, 219655, 219656,
219657, 219658, 219659, 219769, 219770, 219771, 219772, 219773, 219826, 219950,
220662, 220663, 220664, 220843, 221096, 221097, 221098, 221099, 221277, 221556,
221557, 221558, 221559, 221560, 221561, 221562, 221563, 221564, 221565, 221566,
221567, 221568, 221569, 221570, 221737, 222395, 222396, 222397, 222398, 222399,
222400, 222401, 222402, 222403, 222576, 222861, 223041, 223042, 224029, 224030,
224031, 224210, 225047, 225048, 225049, 225050, 225051, 225228, 225411, 225412,
225413, 225414, 225415, 225592, 226561, 226562, 226563, 226564, 226565, 226566,
226567, 226568, 226569, 226570, 226571, 226572, 226573, 226574, 226575, 226742,
227237, 227238, 227239, 227240, 227241, 227242, 227243, 227244, 227245, 227246,
227247, 227248, 227249, 227250, 227251, 227252, 227253, 227418, 227437, 227438,
227439, 227440, 227441, 227442, 227443, 227444, 227445, 227446, 227447, 227448,
227449, 227450, 227451, 227452, 227453, 227454, 227455, 227456, 227457, 227510,
227511, 227512, 227513, 227514, 227515, 227516, 227517, 227518, 227519, 227520,
227521, 227522, 227523, 227524, 227525, 227526, 227618, 227691, 227764, 227765,
227766, 227767, 227768, 227769, 227770, 227771, 227772, 227945, 228012, 228013,
228014, 228015, 228139, 228193, 228238, 228239, 228240, 228241, 228242, 228243,
228244, 228245, 228246, 228247, 228248, 228249, 228250, 228251, 228252, 228253,
228254, 228319, 228320, 228419, 228503, 228683, 228684, 230507, 230508, 230509,
230510, 230511, 230688, 231259, 231260, 231261, 231262, 231263, 231264, 231265,
231266, 231267, 231268, 231269, 231270, 231271, 231272, 231273, 231274, 231275,
231276, 231277, 231278, 231279, 231440, 231645, 231646, 231647, 231648, 231649,
231650, 231826, 232385, 232386, 232387, 232388, 232389, 232390, 232391, 232392,
232393, 232394, 232395, 232396, 232397, 232398, 232399, 232566, 233497, 233498,
233499, 233500, 233501, 233502, 233503, 233504, 233505, 233599, 233678, 233779,
233780, 233836, 233837, 233838, 233839, 233948, 233949, 233950, 234017, 234129,
234842, 234843, 234844, 234845, 234846, 234847, 234848, 234849, 234850, 234851,
234852, 234853, 234854, 234855, 234856, 235023, 235131, 235132, 235133, 235148,
235149, 235150, 235151, 235152, 235312, 235329, 235383, 235384, 235385, 235386,
235564, 235876, 235877, 235878, 235879, 235880, 236057, 236238, 236600, 236601,
236966, 237328, 237329, 237702, 237703, 237704, 237705, 237706, 237707, 237708,
237709, 237710, 237711, 237712, 237713, 237714, 237715, 237716, 237717, 237718,
237883, 238561, 238562, 238563, 238564, 238565, 238566, 238703, 238704, 238705,
238706, 238707, 238708, 238709, 238710, 238711, 238712, 238713, 238714, 238715,
238716, 238717, 238718, 238719, 238742, 238884, 239119, 239120, 239121, 239122,
239123, 239124, 239125, 239126, 239127, 239128, 239129, 239130, 239131, 239132,
239133, 239300, 240570, 240571, 240572, 240573, 240751, 242525, 242526, 242527,
242528, 242529, 242530, 242531, 242532, 242533, 242534, 242535, 242536, 242537,
242538, 242539, 242540, 242541, 242688, 242689, 242690, 242691, 242692, 242693,
242694, 242695, 242696, 242706, 242869, 243384, 243385, 243386, 243387, 243388,
243389, 243565, 243975, 243976, 243977, 243978, 243979, 244156, 244385, 244386,
244387, 244388, 244389, 244390, 244566, 245340, 245341, 245342, 245343, 245344,
245521, 245819, 245820, 245821, 245822, 245823, 245824, 245825, 245826, 245827,
245828, 245829, 245830, 245831, 245832, 245833, 245834, 245835, 245836, 245837,
245838, 245839, 246000, 246430, 246792, 246793, 247067, 247247, 247248, 247511,
247512, 247513, 247514, 247515, 247516, 247517, 247518, 247519, 247615, 247616,
247617, 247618, 247619, 247692, 247796, 247966, 247967, 247968, 247969, 247970,
247971, 247972, 247973, 247974, 248147, 248330, 248331, 248332, 248333, 248334,
248335, 248336, 248337, 248338, 248511, 248669, 248670, 248671, 248672, 248850,
248872, 248873, 248874, 249053, 249145, 249146, 249147, 249326, 249766, 249767,
249768, 249769, 249770, 249771, 249772, 249773, 249774, 249775, 249776, 249777,
249778, 249779, 249780, 249947, 250221, 250222, 250223, 250224, 250225, 250226,
250227, 250228, 250229, 250230, 250231, 250232, 250233, 250234, 250235, 250402,
250707, 250887, 250888, 250969, 250970, 250971, 250972, 250973, 250974, 250975,
250976, 250977, 251119, 251120, 251121, 251122, 251123, 251124, 251150, 251300,
251672, 251673, 251674, 251675, 251801, 251802, 251803, 251804, 251805, 251853,
251982, 252603, 252604, 252605, 252735, 252736, 252737, 252738, 252739, 252740,
252741, 252742, 252743, 252744, 252745, 252746, 252747, 252748, 252749, 252750,
252751, 252752, 252753, 252754, 252755, 252784, 252916, 253008, 253009, 253010,
253011, 253012, 253013, 253014, 253015, 253016, 253017, 253018, 253019, 253020,
253021, 253022, 253023, 253024, 253025, 253026, 253027, 253028, 253189, 253426,
253427, 253428, 253429, 253430, 253431, 253432, 253433, 253434, 253607, 254150,
254151, 254152, 254331, 254514, 254515, 254516, 254695, 254893, 255044, 255045,
255046, 255047, 255048, 255049, 255050, 255051, 255052, 255053, 255054, 255055,
255056, 255057, 255058, 255073, 255074, 255225, 255408, 255409, 255410, 255411,
255412, 255413, 255414, 255415, 255416, 255417, 255418, 255419, 255420, 255421,
255422, 255589, 256670, 256671, 256672, 256673, 256674, 256675, 256851, 257085,
257086, 257087, 257088, 257089, 257090, 257091, 257092, 257093, 257094, 257095,
257096, 257097, 257098, 257099, 257100, 257101, 257266, 257521, 257522, 257523,
257524, 257525, 257526, 257527, 257528, 257529, 257702, 258559, 258560, 258561,
258562, 258563, 258564, 258565, 258566, 258567, 258568, 258569, 258570, 258571,
258572, 258573, 258574, 258575, 258576, 258577, 258578, 258579, 258740, 259155,
259156, 259157, 259336, 259341, 259342, 259343, 259344, 259345, 259346, 259347,
259348, 259349, 259522, 259610, 259611, 259612, 259791, 259991, 259992, 259993,
259994, 259995, 260172, 260504, 260505, 260506, 260507, 260508, 260509, 260510,
260511, 260512, 260513, 260514, 260515, 260516, 260517, 260518, 260685, 260975,
260976, 260977, 261156, 261889, 261890, 261891, 261892, 261893, 261894, 261895,
261896, 261897, 262070, 262221, 262222, 262223, 262224, 262225, 262226, 262402,
263083, 263263, 263264, 263523, 263524, 263525, 263593, 263594, 263595, 263596,
263704, 263774, 263891, 263892, 263893, 263894, 263895, 263896, 263897, 263898,
263899, 264001, 264002, 264003, 264004, 264005, 264006, 264007, 264008, 264009,
264010, 264011, 264012, 264013, 264014, 264015, 264016, 264017, 264072, 264182,
264235, 264236, 264237, 264238, 264239, 264240, 264241, 264242, 264243, 264244,
264245, 264246, 264247, 264248, 264249, 264416, 265293, 265294, 265295, 265296,
265297, 265298, 265299, 265300, 265301, 265302, 265303, 265304, 265305, 265306,
265307, 265308, 265309, 265310, 265311, 265312, 265313, 265474, 265525, 265526,
265527, 265686, 265687, 265688, 265689, 265706, 265867, 266294, 266295, 266296,
266297, 266298, 266299, 266300, 266301, 266302, 266303, 266304, 266305, 266306,
266307, 266308, 266309, 266310, 266311, 266312, 266313, 266314, 266475, 266621,
266622, 266623, 266624, 266625, 266626, 266627, 266628, 266629, 266802, 266803,
266804, 266805, 266806, 266807, 266808, 266809, 266810, 266811, 266894, 266895,
266896, 266897, 266898, 266899, 266900, 266901, 266902, 266984, 267075, 267693,
267694, 267695, 267696, 267697, 267698, 267699, 267700, 267701, 267702, 267703,
267704, 267705, 267706, 267707, 267874, 267895, 267896, 267897, 267898, 267899,
267900, 267901, 267902, 267903, 268076, 268255, 268256, 268257, 268436, 268437,
268438, 268439, 268618, 268871, 268872, 268873, 268874, 269052, 269144, 269145,
269146, 269147, 269235, 269236, 269237, 269238, 269325, 269416, 269529, 269530,
269531, 269710, 269825, 269826, 269827, 269828, 269829, 269830, 269831, 269832,
269833, 269834, 269835, 269836, 269837, 269838, 269839, 269840, 269841, 270006,
270534, 270535, 270536, 270537, 270538, 270539, 270540, 270541, 270542, 270715,
271457, 271458, 271459, 271460, 271461, 271594, 271595, 271596, 271597, 271598,
271599, 271638, 271775, 273078, 273079, 273080, 273259, 273972, 273973, 273974,
273975, 273976, 273977, 273978, 273979, 273980, 273981, 273982, 273983, 273984,
273985, 273986, 274153, 274245, 274246, 274247, 274248, 274249, 274250, 274251,
274252, 274253, 274254, 274255, 274256, 274257, 274258, 274259, 274331, 274332,
274333, 274334, 274426, 274512, 274549, 274720, 274721, 274722, 274723, 274724,
274725, 274726, 274727, 274728, 274729, 274730, 274901, 275012, 275013, 275014,
275015, 275016, 275017, 275018, 275019, 275020, 275021, 275022, 275023, 275024,
275025, 275026, 275027, 275028, 275193, 275279, 275280, 275281, 275282, 275283,
275460, 275539, 275540, 275541, 275542, 275543, 275544, 275545, 275546, 275547,
275696, 275697, 275698, 275699, 275720, 275877, 276065, 276066, 276067, 276068,
276069, 276070, 276071, 276072, 276073, 276074, 276075, 276076, 276077, 276078,
276079, 276235, 276236, 276237, 276238, 276239, 276240, 276246, 276395, 276396,
276397, 276398, 276399, 276400, 276401, 276402, 276403, 276404, 276405, 276406,
276407, 276408, 276409, 276410, 276411, 276412, 276413, 276414, 276415, 276416,
276559, 276560, 276561, 276562, 276563, 276564, 276565, 276566, 276567, 276568,
276569, 276570, 276571, 276572, 276573, 276574, 276575, 276576, 276718, 276719,
276720, 276740, 276872, 276873, 276874, 276875, 276876, 276877, 276899, 277053,
277173, 277174, 277175, 277236, 277237, 277238, 277239, 277240, 277241, 277354,
277417, 277516, 277517, 277518, 277519, 277612, 277613, 277614, 277615, 277616,
277617, 277618, 277619, 277620, 277621, 277622, 277623, 277624, 277625, 277626,
277697, 277793, 278371, 278551, 278552, 278613, 278614, 278615, 278616, 278617,
278618, 278619, 278620, 278621, 278622, 278623, 278624, 278625, 278626, 278627,
278794, 279693, 279694, 279695, 279696, 279697, 279698, 279874, 280064, 280065,
280066, 280067, 280245, 280615, 280616, 280617, 280618, 280619, 280620, 280621,
280622, 280623, 280624, 280625, 280626, 280627, 280628, 280629, 280796, 280904,
280905, 280906, 281085, 281218, 281219, 281220, 281221, 281222, 281223, 281224,
281225, 281226, 281227, 281228, 281229, 281230, 281231, 281232, 281233, 281234,
281235, 281236, 281237, 281238, 281399, 281798, 281799, 281800, 281801, 281802,
281803, 281804, 281805, 281806, 281807, 281808, 281809, 281810, 281811, 281812,
281979, 282066, 282067, 282068, 282069, 282247, 282332, 282333, 282334, 282335,
282336, 282337, 282513, 282650, 282651, 282652, 282653, 282654, 282831, 282910,
282911, 282912, 282913, 282914, 282915, 282916, 282917, 282918, 283091, 283345,
283346, 283347, 283348, 283349, 283350, 283351, 283352, 283353, 283354, 283355,
283356, 283357, 283358, 283359, 283526, 283527, 283528, 283529, 283530, 283531,
283532, 283533, 283534, 283535, 283536, 283537, 283538, 283539, 283540, 283541,
283708, 283740, 284102, 284103, 284619, 284620, 284621, 284622, 284623, 284624,
284625, 284626, 284627, 284628, 284629, 284630, 284631, 284632, 284633, 284796,
284797, 284798, 284799, 284800, 284977, 284978, 284979, 284980, 284981, 285159,
286070, 286071, 286072, 286073, 286245, 286246, 286247, 286248, 286249, 286250,
286251, 286426, 286496, 286497, 286498, 286499, 286500, 286501, 286502, 286503,
286504, 286505, 286506, 286507, 286508, 286509, 286510, 286511, 286512, 286513,
286514, 286515, 286516, 286677, 286860, 286861, 286862, 286863, 286864, 286865,
286866, 286867, 286868, 286869, 286870, 286871, 286872, 286873, 286874, 286875,
286876, 286877, 286878, 286879, 286880, 287041, 287661, 287662, 287663, 287664,
287665, 287666, 287667, 287668, 287669, 287670, 287671, 287672, 287673, 287674,
287675, 287676, 287677, 287799, 287800, 287801, 287802, 287842, 287980, 288065,
288066, 288067, 288068, 288069, 288070, 288246, 288298, 288299, 288300, 288301,
288302, 288303, 288304, 288305, 288306, 288307, 288308, 288309, 288310, 288311,
288312, 288313, 288314, 288479, 289094, 289095, 289096, 289275, 289839, 289840,
289841, 289842, 289843, 289988, 289989, 289990, 289991, 289992, 289993, 289994,
289995, 289996, 289997, 289998, 289999, 290000, 290001, 290002, 290020, 290169,
290409, 290410, 290411, 290412, 290413, 290414, 290415, 290416, 290417, 290418,
290419, 290420, 290421, 290422, 290423, 290424, 290425, 290426, 290427, 290428,
290429, 290590, 290613, 290614, 290615, 290616, 290617, 290618, 290794, 291439,
291440, 291441, 291442, 291620, 291956, 291957, 291958, 291959, 291960, 291961,
291962, 291963, 291964, 291965, 291966, 291967, 291968, 291969, 291970, 291971,
291972, 291973, 291974, 291975, 291976, 292137, 292263, 292264, 292265, 292266,
292267, 292268, 292269, 292270, 292271, 292272, 292273, 292274, 292275, 292276,
292277, 292444, 292615, 292616, 292617, 292618, 292619, 292620, 292796, 292931,
293111, 293112, 293714, 293715, 293716, 293717, 293867, 293868, 293869, 293870,
293871, 293872, 293873, 293874, 293875, 293876, 293877, 293878, 293879, 293880,
293881, 293882, 293883, 293884, 293885, 293886, 293887, 293895, 294048, 294376,
294377, 294378, 294379, 294380, 294381, 294382, 294383, 294384, 294557, 295345,
295346, 295347, 295348, 295349, 295350, 295526, 295527, 295528, 295529, 295530,
295531, 295532, 295625, 295626, 295627, 295628, 295708, 295800, 295801, 295802,
295803, 295804, 295805, 295806, 295936, 295937, 295938, 295939, 295940, 295981,
296117, 296619, 296620, 296621, 296622, 296623, 296624, 296755, 296756, 296757,
296758, 296759, 296800, 296936, 297026, 297388, 297389, 297561, 297562, 297563,
297564, 297565, 297566, 297567, 297568, 297569, 297742, 298198, 298199, 298200,
298201, 298202, 298203, 298204, 298205, 298206, 298379, 299195, 299196, 299197,
299376, 299440, 299441, 299442, 299443, 299444, 299445, 299621, 299847, 300027,
300028, 300419, 300420, 300421, 300422, 300423, 300424, 300425, 300426, 300427,
300428, 300429, 300430, 300431, 300432, 300433, 300434, 300435, 300436, 300437,
300438, 300439, 300560, 300561, 300562, 300600, 300741, 301454, 301455, 301456,
301457, 301458, 301459, 301460, 301461, 301462, 301463, 301464, 301465, 301466,
301467, 301468, 301635, 301675, 301676, 301677, 301678, 301679, 301680, 301681,
301682, 301683, 301684, 301685, 301686, 301687, 301688, 301689, 301690, 301691,
301856, 302239, 302240, 302241, 302242, 302243, 302244, 302245, 302246, 302247,
302248, 302249, 302250, 302251, 302252, 302253, 302254, 302255, 302256, 302257,
302258, 302259, 302420, 302579, 302580, 302581, 302582, 302583, 302760, 303222,
303223, 303224, 303225, 303226, 303227, 303228, 303229, 303230, 303231, 303232,
303233, 303234, 303235, 303236, 303237, 303238, 303403, 303626, 303627, 303628,
303629, 303630, 303631, 303807, 303815, 303816, 303817, 303818, 303996, 304263,
304264, 304265, 304266, 304267, 304268, 304382, 304383, 304384, 304444, 304563,
304787, 304788, 304789, 304790, 304791, 304792, 304793, 304794, 304795, 304796,
304797, 304798, 304799, 304800, 304801, 304802, 304803, 304804, 304805, 304806,
304807, 304968, 305133, 305134, 305135, 305136, 305137, 305138, 305139, 305140,
305141, 305142, 305143, 305144, 305145, 305146, 305147, 305148, 305149, 305276,
305277, 305278, 305279, 305280, 305281, 305282, 305283, 305284, 305285, 305286,
305287, 305288, 305289, 305290, 305314, 305424, 305425, 305426, 305427, 305428,
305429, 305430, 305431, 305432, 305433, 305434, 305435, 305436, 305437, 305438,
305439, 305440, 305441, 305442, 305443, 305444, 305457, 305605, 305671, 305851,
305852, 306789, 306790, 306791, 306792, 306793, 306794, 306795, 306796, 306797,
306798, 306799, 306800, 306801, 306802, 306803, 306804, 306805, 306806, 306807,
306808, 306809, 306970, 307207, 307208, 307209, 307210, 307211, 307212, 307213,
307214, 307215, 307388, 308500, 308501, 308502, 308503, 308504, 308505, 308506,
308507, 308508, 308509, 308510, 308511, 308512, 308513, 308514, 308515, 308516,
308681, 308841, 308842, 308843, 308864, 308865, 308866, 308867, 308868, 308869,
308870, 308871, 308872, 308873, 308874, 308875, 308876, 308877, 308878, 308879,
308880, 309022, 309045, 309064, 309065, 309066, 309067, 309068, 309069, 309070,
309071, 309072, 309073, 309074, 309075, 309076, 309077, 309078, 309079, 309080,
309081, 309082, 309083, 309084, 309245, 309313, 309314, 309315, 309316, 309317,
309494, 309519, 309520, 309521, 309522, 309523, 309524, 309525, 309526, 309527,
309528, 309529, 309530, 309531, 309532, 309533, 309534, 309535, 309536, 309537,
309538, 309539, 309700, 309701, 309702, 309703, 309704, 309705, 309706, 309707,
309708, 309709, 309710, 309711, 309712, 309713, 309714, 309715, 309716, 309717,
309718, 309719, 309720, 309721, 309882, 310793, 310794, 310795, 310796, 310797,
310798, 310799, 310800, 310801, 310802, 310803, 310804, 310805, 310806, 310807,
310808, 310809, 310810, 310811, 310812, 310813, 310860, 310861, 310862, 310863,
310864, 310974, 311041, 311685, 311686, 311687, 311688, 311689, 311690, 311691,
311692, 311693, 311694, 311695, 311696, 311697, 311698, 311699, 311700, 311701,
311816, 311817, 311818, 311819, 311820, 311821, 311866, 311950, 311997, 312312,
312313, 312405, 312585, 312586, 312758, 312759, 312760, 312761, 312762, 312763,
312764, 312765, 312766, 312939, 313250, 313251, 313252, 313253, 313254, 313255,
313256, 313257, 313258, 313259, 313260, 313261, 313262, 313263, 313264, 313265,
313266, 313267, 313268, 313269, 313270, 313431, 313505, 313506, 313507, 313508,
313509, 313510, 313511, 313512, 313513, 313514, 313515, 313516, 313517, 313518,
313519, 313520, 313521, 313686, 313960, 313961, 313962, 313963, 313964, 313965,
313966, 313967, 313968, 313969, 313970, 313971, 313972, 313973, 313974, 313975,
313976, 314141, 314285, 314286, 314287, 314288, 314289, 314290, 314291, 314292,
314293, 314294, 314295, 314296, 314297, 314298, 314299, 314466, 315215, 315216,
315217, 315218, 315219, 315220, 315221, 315222, 315223, 315281, 315282, 315283,
315284, 315396, 315462, 315736, 315737, 315738, 315739, 315917, 316053, 316054,
316055, 316056, 316057, 316058, 316059, 316060, 316061, 316062, 316063, 316064,
316065, 316066, 316067, 316068, 316069, 316138, 316139, 316140, 316141, 316142,
316234, 316319, 316502, 316503, 316504, 316505, 316506, 316683, 316849, 316850,
316851, 317030, 317228, 317590, 317591, 317592, 317954, 317955, 318055, 318056,
318057, 318058, 318059, 318060, 318061, 318062, 318063, 318064, 318065, 318066,
318067, 318068, 318069, 318070, 318071, 318236, 318437, 318438, 318439, 318440,
318441, 318442, 318443, 318444, 318445, 318446, 318447, 318448, 318449, 318450,
318451, 318452, 318453, 318454, 318455, 318456, 318457, 318618, 318942, 318943,
318944, 319103, 319104, 319105, 319106, 319123, 319284, 319674, 319675, 319676,
319677, 319678, 319679, 319680, 319681, 319682, 319836, 319837, 319838, 319839,
319840, 319841, 319842, 319843, 319844, 319845, 319846, 319847, 319848, 319849,
319850, 319855, 320017, 320415, 320416, 320417, 320418, 320419, 320596, 320785,
320786, 320787, 320788, 320789, 320790, 320791, 320792, 320793, 320794, 320795,
320796, 320797, 320798, 320799, 320800, 320801, 320966, 320967, 320968, 320969,
320970, 320971, 320972, 320973, 320974, 320975, 320976, 320977, 320978, 320979,
320980, 320981, 320982, 320983, 321148, 321440, 321441, 321442, 321443, 321444,
321445, 321446, 321447, 321448, 321449, 321450, 321451, 321452, 321453, 321454,
321455, 321456, 321457, 321458, 321459, 321460, 321598, 321599, 321600, 321601,
321602, 321621, 321779, 322059, 322060, 322061, 322062, 322063, 322064, 322065,
322066, 322067, 322068, 322069, 322070, 322071, 322072, 322073, 322074, 322075,
322240, 322688, 323050, 323051, 323282, 323283, 323284, 323285, 323286, 323287,
323463, 323507, 323687, 323688, 323931, 323932, 323933, 323934, 323935, 323936,
323937, 323938, 323939, 323940, 323941, 323942, 323943, 323944, 323945, 324112,
325382, 325383, 325384, 325385, 325498, 325499, 325500, 325501, 325502, 325503,
325504, 325505, 325506, 325563, 325679, 325858, 325859, 325860, 326039, 326285,
326286, 326287, 326288, 326289, 326290, 326466, 326752, 326753, 326754, 326755,
326756, 326757, 326758, 326759, 326760, 326761, 326762, 326763, 326764, 326765,
326766, 326933, 327104, 327105, 327106, 327107, 327108, 327109, 327285, 327428,
327429, 327430, 327431, 327432, 327433, 327434, 327435, 327436, 327437, 327438,
327439, 327440, 327441, 327442, 327443, 327444, 327609, 329047, 329048, 329049,
329050, 329051, 329052, 329053, 329054, 329055, 329228, 329703, 329704, 329705,
329706, 329707, 329708, 329709, 329710, 329711, 329712, 329713, 329714, 329715,
329716, 329717, 329718, 329719, 329884, 329957, 329958, 329959, 329960, 329961,
329962, 329963, 329964, 329965, 330138, 330681, 330682, 330683, 330862, 331068,
331069, 331070, 331071, 331072, 331073, 331074, 331075, 331076, 331077, 331078,
331079, 331080, 331081, 331082, 331083, 331084, 331249, 331591, 331592, 331593,
331682, 331683, 331684, 331772, 331863, 331939, 331940, 331941, 331942, 331943,
331944, 331945, 331946, 331947, 331948, 331949, 331950, 331951, 331952, 331953,
332120, 332232, 332233, 332234, 332235, 332236, 332237, 332238, 332239, 332240,
332413, 332576, 332577, 332578, 332579, 332580, 332581, 332582, 332583, 332584,
332585, 332586, 332587, 332588, 332589, 332590, 332757, 332906, 332907, 332908,
332909, 332910, 332911, 332912, 332913, 332914, 332915, 332916, 332917, 332918,
332919, 332920, 332921, 332922, 332923, 332924, 332925, 332926, 333087, 333390,
333391, 333392, 333393, 333571, 333663, 333664, 333665, 333666, 333844, 334429,
334430, 334431, 334432, 334433, 334610, 335066, 335067, 335068, 335069, 335070,
335247, 335254, 335255, 335256, 335257, 335258, 335259, 335260, 335261, 335262,
335263, 335264, 335265, 335266, 335267, 335268, 335269, 335270, 335435, 335931,
335932, 335933, 335934, 335935, 335936, 336112, 336145, 336146, 336147, 336148,
336149, 336150, 336151, 336152, 336153, 336156, 336326, 336518, 336519, 336728,
336729, 336730, 336731, 336732, 336733, 336734, 336735, 336736, 336737, 336738,
336739, 336740, 336741, 336742, 336743, 336744, 336745, 336746, 336747, 336748,
336909, 337521, 337701, 337702, 337779, 337780, 337781, 337887, 337888, 337889,
337890, 337891, 337960, 338068, 338416, 338417, 338418, 338597, 338706, 338707,
338708, 338709, 338710, 338887, 339310, 339311, 339312, 339313, 339314, 339315,
339316, 339317, 339318, 339319, 339320, 339321, 339322, 339323, 339324, 339491,
339796, 340158, 340159, 340459, 340460, 340461, 340462, 340463, 340464, 340465,
340466, 340467, 340468, 340469, 340470, 340471, 340472, 340473, 340474, 340475,
340476, 340477, 340478, 340479, 340579, 340580, 340581, 340582, 340640, 340760,
340979, 341159, 341160, 341664, 341665, 341666, 341667, 341668, 341669, 341845,
342892, 342893, 342894, 342895, 342896, 343073, 343334, 343335, 343336, 343337,
343338, 343339, 343340, 343341, 343342, 343444, 343445, 343446, 343447, 343448,
343449, 343450, 343451, 343452, 343453, 343454, 343455, 343456, 343457, 343458,
343459, 343460, 343515, 343625, 343939, 343940, 343941, 343942, 343943, 343944,
343982, 344120, 344344, 344345, 344439, 344440, 344441, 344442, 344443, 344620,
345771, 345772, 345773, 345774, 345775, 345776, 345777, 345778, 345779, 345780,
345781, 345782, 345783, 345784, 345785, 345952, 346259, 346260, 346261, 346262,
346263, 346403, 346404, 346405, 346406, 346440, 346584, 346681, 346682, 346683,
346684, 346685, 346686, 346687, 346688, 346689, 346690, 346691, 346692, 346693,
346694, 346695, 346862, 347222, 347223, 347224, 347225, 347403, 347531, 347711,
347712, 348132, 348133, 348134, 348135, 348313, 348580, 348581, 348582, 348583,
348584, 348585, 348761, 348807, 348808, 348809, 348810, 348811, 348988, 349351,
349518, 349519, 349520, 349531, 349532, 349699, 350105, 350106, 350107, 350108,
350109, 350110, 350111, 350112, 350113, 350114, 350115, 350116, 350117, 350118,
350119, 350120, 350121, 350122, 350123, 350124, 350125, 350286, 350412, 350413,
350414, 350415, 350416, 350417, 350418, 350419, 350420, 350421, 350422, 350423,
350424, 350425, 350426, 350593, 350809, 350810, 350811, 350812, 350813, 350990,
351082, 351083, 351084, 351085, 351086, 351263, 351288, 351289, 351290, 351291,
351292, 351293, 351294, 351295, 351296, 351297, 351298, 351299, 351300, 351301,
351302, 351303, 351304, 351305, 351306, 351307, 351308, 351469, 351725, 351726,
351727, 351728, 351729, 351730, 351731, 351732, 351733, 351734, 351735, 351736,
351737, 351738, 351739, 351740, 351741, 351899, 351906, 352079, 352080, 352172,
352534, 352535, 352869, 352870, 352871, 352872, 352873, 352874, 352875, 352876,
352877, 352878, 352879, 352880, 352881, 352882, 352883, 353050, 353137, 353138,
353139, 353140, 353318, 353539, 353540, 353541, 353542, 353543, 353720, 353721,
353722, 353723, 353724, 353725, 353901, 353902, 354081, 354082, 354320, 354321,
354322, 354323, 354404, 354405, 354406, 354407, 354408, 354409, 354501, 354585,
354813, 354814, 354815, 354816, 354817, 354910, 354911, 354912, 354913, 354914,
354915, 354916, 354917, 354918, 354919, 354920, 354921, 354922, 354923, 354924,
354925, 354926, 354994, 355091, 355983, 355984, 355985, 355986, 355987, 355988,
355989, 355990, 355991, 356164, 356631, 356811, 356812, 356813, 356993, 356994,
357348, 357349, 357350, 357351, 357352, 357353, 357354, 357355, 357356, 357529,
357617, 357618, 357619, 357771, 357772, 357773, 357774, 357775, 357776, 357798,
357905, 357952, 358085, 358086, 358113, 358114, 358115, 358116, 358117, 358118,
358119, 358120, 358121, 358122, 358123, 358124, 358125, 358126, 358127, 358128,
358129, 358130, 358131, 358132, 358133, 358204, 358205, 358206, 358207, 358208,
358209, 358210, 358211, 358212, 358213, 358214, 358215, 358216, 358217, 358218,
358219, 358220, 358221, 358222, 358223, 358224, 358294, 358385, 358681, 358682,
358683, 358684, 358685, 358686, 358732, 358733, 358734, 358735, 358736, 358737,
358738, 358739, 358740, 358741, 358742, 358743, 358744, 358745, 358746, 358747,
358748, 358862, 358913, 359077, 359078, 359079, 359080, 359081, 359082, 359083,
359084, 359085, 359258, 360711, 360712, 360713, 360806, 360807, 360808, 360809,
360810, 360811, 360812, 360813, 360814, 360892, 360987, 361138, 361139, 361140,
361141, 361142, 361143, 361319, 361371, 361372, 361373, 361374, 361375, 361376,
361377, 361378, 361379, 361380, 361381, 361382, 361383, 361384, 361385, 361386,
361387, 361552, 362457, 362458, 362459, 362460, 362461, 362548, 362549, 362550,
362551, 362552, 362638, 362729, 363532, 363533, 363534, 363638, 363713, 364000,
364001, 364028, 364029, 364030, 364031, 364032, 364033, 364034, 364035, 364036,
364037, 364038, 364039, 364040, 364041, 364042, 364043, 364044, 364045, 364046,
364047, 364048, 364209, 364239, 364240, 364241, 364242, 364420, 364426, 364427,
364428, 364429, 364430, 364431, 364432, 364433, 364434, 364435, 364436, 364437,
364438, 364439, 364440, 364607, 364869, 364870, 364871, 364872, 364873, 364874,
365050, 365549, 365729, 365730, 366370, 366371, 366372, 366373, 366374, 366551,
366990, 366991, 366992, 367171, 367358, 367359, 367360, 367361, 367362, 367363,
367364, 367365, 367366, 367460, 367539, 367822, 367823, 367884, 367885, 367886,
367887, 367888, 367889, 367890, 367891, 367892, 367893, 367894, 367895, 367896,
367897, 367898, 368065, 369178, 369179, 369180, 369181, 369182, 369183, 369184,
369185, 369186, 369359, 369379, 369380, 369381, 369382, 369383, 369384, 369385,
369386, 369387, 369388, 369389, 369390, 369391, 369392, 369393, 369394, 369395,
369560, 370762, 370763, 370764, 370765, 370766, 370767, 370768, 370769, 370770,
370771, 370772, 370773, 370774, 370775, 370776, 370777, 370778, 370779, 370780,
370781, 370782, 370943, 371726, 371727, 371728, 371729, 371730, 371731, 371732,
371733, 371734, 371907, 371945, 371946, 371947, 371948, 371949, 371950, 371951,
371952, 371953, 371954, 371955, 371956, 371957, 371958, 371959, 371960, 371961,
371962, 371963, 371964, 371965, 372126, 372240, 372241, 372242, 372243, 372244,
372245, 372421, 372707, 372708, 372709, 372710, 372711, 372712, 372713, 372714,
372715, 372716, 372717, 372718, 372719, 372720, 372721, 372855, 372856, 372857,
372858, 372859, 372860, 372861, 372862, 372863, 372864, 372865, 372866, 372867,
372868, 372869, 372870, 372871, 372872, 372873, 372874, 372875, 372888, 373036,
373292, 373293, 373294, 373295, 373296, 373297, 373298, 373299, 373300, 373301,
373302, 373303, 373304, 373305, 373306, 373307, 373308, 373473, 373542, 373543,
373544, 373723, 373728, 373729, 373730, 373731, 373732, 373733, 373734, 373735,
373736, 373909, 374158, 374159, 374160, 374161, 374339, 374436, 374437, 374438,
374439, 374440, 374441, 374442, 374443, 374444, 374445, 374446, 374447, 374448,
374449, 374450, 374617, 375362, 375363, 375364, 375543, 375801, 375802, 375803,
375804, 375805, 375806, 375807, 375808, 375809, 375810, 375811, 375812, 375813,
375814, 375815, 375982, 376256, 376257, 376258, 376259, 376260, 376261, 376262,
376263, 376264, 376265, 376266, 376267, 376268, 376269, 376270, 376437, 376458,
376459, 376460, 376461, 376462, 376463, 376464, 376465, 376466, 376639, 376640,
376641, 376642, 376643, 376644, 376645, 376646, 376647, 376648, 376821, 377252,
377253, 377254, 377255, 377433, 377732, 377733, 377734, 377735, 377736, 377737,
377738, 377739, 377740, 377910, 377911, 377912, 377913, 378091, 378253, 378254,
378255, 378256, 378434, 378804, 378805, 378806, 378807, 378808, 378809, 378810,
378811, 378812, 378813, 378814, 378815, 378816, 378817, 378818, 378985, 379043,
379044, 379045, 379046, 379047, 379048, 379049, 379050, 379051, 379052, 379053,
379054, 379055, 379056, 379057, 379058, 379059, 379060, 379061, 379062, 379063,
379224, 379912, 379913, 379914, 380093, 380208, 380209, 380210, 380211, 380212,
380213, 380214, 380215, 380216, 380217, 380218, 380219, 380220, 380221, 380222,
380223, 380224, 380389, 380806, 380807, 380808, 380809, 380810, 380811, 380812,
380813, 380814, 380815, 380816, 380817, 380818, 380819, 380820, 380930, 380931,
380932, 380933, 380934, 380987, 381111, 381711, 381712, 381713, 381714, 381864,
381865, 381866, 381867, 381868, 381869, 381870, 381871, 381872, 381873, 381874,
381875, 381876, 381877, 381878, 381879, 381880, 381881, 381882, 381883, 381884,
381892, 382020, 382045, 382382, 382383, 382642, 382643, 382644, 382823, 382824,
382825, 382826, 383005, 383211, 383212, 383213, 383214, 383215, 383216, 383217,
383218, 383219, 383220, 383221, 383222, 383223, 383224, 383225, 383226, 383227,
383392, 383536, 383537, 383538, 383539, 383540, 383541, 383542, 383543, 383544,
383545, 383546, 383547, 383548, 383549, 383550, 383717, 383718, 383719, 383720,
383721, 383722, 383723, 383724, 383725, 383726, 383727, 383728, 383729, 383730,
383731, 383732, 383899, 383916, 383917, 383918, 384097, 384121, 384122, 384123,
384124, 384125, 384126, 384127, 384128, 384129, 384130, 384131, 384132, 384133,
384134, 384135, 384136, 384137, 384302, 384479, 384480, 384481, 384482, 384483,
384660, 384707, 384708, 384709, 384710, 384711, 384712, 384810, 384811, 384812,
384813, 384814, 384815, 384816, 384817, 384818, 384819, 384820, 384821, 384822,
384823, 384824, 384888, 384991, 385376, 385377, 385378, 385379, 385380, 385381,
385382, 385383, 385384, 385557, 386032, 386033, 386034, 386035, 386036, 386037,
386038, 386039, 386040, 386041, 386042, 386043, 386044, 386045, 386046, 386047,
386048, 386213, 386254, 386255, 386256, 386257, 386258, 386259, 386435, 387571,
387751, 387752, 387801, 387802, 387803, 387804, 387805, 387806, 387846, 387847,
387848, 387849, 387850, 387982, 388027, 388263, 388264, 388265, 388266, 388444,
388936, 389298, 389299, 389712, 389713, 389714, 389715, 389716, 389717, 389893,
390083, 390084, 390085, 390086, 390264, 390309, 390310, 390311, 390312, 390313,
390314, 390315, 390316, 390317, 390318, 390319, 390320, 390321, 390322, 390323,
390324, 390325, 390490, 391560, 391561, 391562, 391741, 391837, 391838, 391839,
391840, 391841, 391842, 391843, 391844, 391845, 392018, 392454, 392455, 392456,
392457, 392458, 392459, 392460, 392461, 392462, 392463, 392464, 392465, 392466,
392467, 392468, 392631, 392632, 392633, 392634, 392635, 392766, 392767, 392768,
392769, 392770, 392771, 392772, 392773, 392774, 392775, 392776, 392777, 392778,
392779, 392780, 392781, 392782, 392812, 392947, 393471, 393472, 393473, 393652,
393670, 393671, 393672, 393673, 393674, 393851, 394125, 394126, 394127, 394128,
394129, 394306, 394633, 394634, 394635, 394636, 394760, 394814, 395122, 395123,
395878, 395879, 395880, 395881, 395882, 395883, 395884, 395885, 395886, 395887,
395888, 395889, 395890, 395891, 395892, 395893, 395894, 395895, 395896, 395897,
395898, 396059, 396264, 396265, 396266, 396267, 396268, 396269, 396445, 397217,
397363, 397364, 397365, 397366, 397397, 397398, 397544, 397545, 397546, 397547,
397548, 397726, 398084, 398085, 398086, 398087, 398088, 398089, 398265, 398637,
398638, 398639, 398640, 398818, 398881, 398882, 398883, 398884, 398885, 398886,
398887, 398888, 398889, 398890, 398891, 398892, 398893, 398894, 398895, 398896,
398897, 398898, 398899, 398900, 398901, 399062, 399336, 399337, 399338, 399339,
399340, 399341, 399342, 399343, 399344, 399345, 399346, 399347, 399348, 399349,
399350, 399351, 399352, 399353, 399354, 399355, 399356, 399517, 400404, 400405,
400406, 400407, 400408, 400585, 400632, 400633, 400634, 400635, 400636, 400637,
400813, 401494, 401856, 401857, 401975, 401976, 401977, 401978, 401979, 401980,
401981, 401982, 401983, 401984, 401985, 401986, 401987, 401988, 401989, 401990,
401991, 401992, 401993, 401994, 401995, 402133, 402134, 402135, 402136, 402137,
402156, 402314, 402634, 402635, 402636, 402637, 402638, 402639, 402815, 403121,
403122, 403123, 403124, 403125, 403126, 403127, 403128, 403129, 403302, 403868,
403869, 403870, 403871, 403872, 403873, 403874, 403875, 403876, 403877, 403878,
403879, 403880, 403881, 403882, 403883, 403884, 404049, 404755, 404756, 404757,
404936, 405225, 405364, 405365, 405366, 405367, 405368, 405369, 405405, 405406,
405545, 405546, 405547, 405548, 405549, 405550, 405551, 405727, 405888, 405889,
405890, 405891, 405892, 405893, 405894, 405895, 405896, 405897, 405898, 405899,
405900, 405901, 405902, 405903, 405904, 405905, 405906, 405907, 405908, 406069,
406281, 406282, 406283, 406284, 406462, 406638, 406639, 406640, 406641, 406642,
406643, 406819, 407398, 407399, 407400, 407401, 407402, 407403, 407404, 407405,
407406, 407579, 407708, 407709, 407710, 407711, 407712, 407713, 407714, 407715,
407716, 407717, 407718, 407719, 407720, 407721, 407722, 407723, 407724, 407725,
407726, 407727, 407728, 407889, 408561, 408562, 408563, 408564, 408565, 408566,
408567, 408568, 408569, 408570, 408571, 408572, 408573, 408574, 408575, 408742,
410012, 410013, 410014, 410015, 410147, 410148, 410149, 410150, 410151, 410152,
410153, 410154, 410155, 410156, 410157, 410158, 410159, 410160, 410161, 410162,
410163, 410193, 410256, 410257, 410258, 410259, 410260, 410261, 410262, 410263,
410264, 410265, 410266, 410267, 410268, 410269, 410270, 410271, 410272, 410273,
410274, 410275, 410276, 410328, 410437, 411506, 411507, 411508, 411509, 411510,
411687, 412258, 412259, 412260, 412261, 412262, 412263, 412264, 412265, 412266,
412267, 412268, 412269, 412270, 412271, 412272, 412273, 412274, 412275, 412276,
412277, 412278, 412439, 412596, 412958, 412959, 413241, 413242, 413243, 413244,
413245, 413246, 413247, 413248, 413249, 413250, 413251, 413252, 413253, 413254,
413255, 413256, 413257, 413422, 413582, 413583, 413584, 413763, 414282, 414283,
414284, 414285, 414286, 414287, 414463, 414476, 414477, 414478, 414479, 414480,
414481, 414482, 414483, 414484, 414485, 414486, 414487, 414488, 414489, 414490,
414657, 414988, 414989, 414990, 414991, 414992, 414993, 414994, 414995, 414996,
414997, 414998, 414999, 415000, 415001, 415002, 415003, 415004, 415005, 415006,
415007, 415008, 415169, 415170, 415171, 415172, 415173, 415174, 415175, 415176,
415177, 415178, 415179, 415180, 415181, 415182, 415183, 415184, 415185, 415186,
415187, 415188, 415189, 415190, 415351, 415965, 415966, 415967, 415968, 415969,
416146, 416262, 416263, 416264, 416265, 416266, 416267, 416268, 416269, 416270,
416271, 416272, 416273, 416274, 416275, 416276, 416277, 416278, 416279, 416280,
416281, 416282, 416443, 416875, 416876, 416877, 416878, 416879, 417044, 417045,
417046, 417047, 417048, 417049, 417050, 417051, 417052, 417056, 417225, 417317,
417318, 417319, 417320, 417321, 417322, 417323, 417324, 417325, 417498, 417882,
417883, 417884, 417885, 417886, 417887, 417888, 417889, 417890, 417891, 417892,
417893, 417894, 417895, 417896, 417897, 417898, 418063, 418951, 418952, 418953,
419057, 419132, 419237, 419238, 419845, 419846, 419847, 419848, 419849, 419850,
419851, 419852, 419853, 419854, 419855, 419856, 419857, 419858, 419859, 419967,
420026, 420147, 420148, 420561, 420562, 420563, 420564, 420565, 420566, 420742,
421296, 421297, 421298, 421299, 421340, 421341, 421342, 421343, 421344, 421345,
421346, 421347, 421348, 421349, 421350, 421351, 421352, 421353, 421354, 421355,
421356, 421477, 421521, 423063, 423064, 423065, 423066, 423067, 423228, 423229,
423230, 423244, 423409, 423906, 423907, 423908, 423909, 423910, 423911, 423912,
423913, 423914, 423915, 423916, 423917, 423918, 423919, 423920, 423921, 423922,
423923, 423924, 423925, 423926, 424087, 424122, 424123, 424124, 424125, 424126,
424127, 424128, 424129, 424130, 424131, 424132, 424133, 424134, 424135, 424136,
424303, 425052, 425053, 425054, 425055, 425056, 425057, 425058, 425059, 425060,
425233, 425520, 425521, 425522, 425523, 425524, 425701, 426155, 426335, 426336,
426610, 426972, 426973, 427873, 427874, 427875, 427876, 427877, 427878, 427879,
427880, 427881, 427892, 427893, 427894, 427895, 427896, 427897, 427898, 427899,
427900, 427901, 427902, 427903, 427904, 427905, 427906, 427907, 427908, 428054,
428073, 428303, 428304, 428305, 428306, 428484, 428978, 428979, 428980, 428981,
428982, 429159, 429329, 429330, 429331, 429332, 429333, 429334, 429335, 429336,
429337, 429507, 429508, 429509, 429510, 429688, 429712, 429713, 429714, 429715,
429716, 429717, 429718, 429719, 429720, 429721, 429722, 429723, 429724, 429725,
429726, 429727, 429728, 429893, 430068, 430430, 430431, 430963, 430964, 430965,
431144, 431236, 431237, 431238, 431417, 431845, 431846, 431847, 431848, 431849,
431850, 432026, 432130, 432131, 432132, 432133, 432134, 432135, 432136, 432137,
432138, 432139, 432140, 432141, 432142, 432143, 432144, 432260, 432261, 432262,
432263, 432264, 432265, 432266, 432267, 432268, 432269, 432270, 432271, 432272,
432273, 432274, 432275, 432276, 432311, 432441, 434041, 434042, 434043, 434044,
434045, 434046, 434047, 434048, 434049, 434050, 434051, 434052, 434053, 434054,
434055, 434222, 434262, 434263, 434264, 434265, 434266, 434267, 434268, 434269,
434270, 434271, 434272, 434273, 434274, 434275, 434276, 434277, 434278, 434443,
434735, 434736, 434737, 434738, 434739, 434740, 434741, 434742, 434743, 434744,
434745, 434746, 434747, 434748, 434749, 434750, 434751, 434752, 434753, 434754,
434755, 434916, 435492, 435493, 435494, 435495, 435530, 435531, 435532, 435533,
435534, 435673, 435711, 436304, 436305, 436306, 436307, 436308, 436309, 436485,
436620, 436982, 436983, 436992, 436993, 436994, 436995, 436996, 436997, 436998,
436999, 437000, 437001, 437002, 437003, 437004, 437005, 437006, 437007, 437008,
437173, 437174, 437175, 437176, 437177, 437178, 437179, 437180, 437181, 437182,
437183, 437184, 437185, 437186, 437187, 437188, 437189, 437190, 437350, 437351,
437352, 437353, 437354, 437355, 437531, 437949, 437950, 437951, 437952, 438130,
438266, 438267, 438268, 438269, 438270, 438271, 438272, 438273, 438274, 438275,
438276, 438277, 438278, 438279, 438280, 438281, 438282, 438440, 438447, 438802,
438803, 438884, 438885, 438886, 438887, 438888, 438889, 438890, 438891, 438892,
439065, 439794, 439795, 439796, 439797, 439798, 439799, 439800, 439801, 439802,
439898, 439899, 439900, 439901, 439902, 439975, 440079, 440988, 441350, 441351,
441900, 441901, 441902, 441903, 441904, 442081, 442901, 442902, 442903, 442904,
442905, 442990, 443082, 443352, 443353, 444435, 444436, 444437, 444438, 444439,
444440, 444441, 444442, 444443, 444597, 444598, 444599, 444600, 444601, 444602,
444603, 444604, 444605, 444606, 444607, 444608, 444609, 444610, 444611, 444616,
444630, 444631, 444632, 444633, 444634, 444778, 444811, 444812, 444813, 444814,
444815, 444816, 444993, 445068, 445069, 445070, 445249, 445720, 445902, 445904,
445905, 445906, 445907, 445908, 445910, 445911, 445912, 445913, 445914, 445915,
445916, 445917, 445918, 445919, 445920, 445921, 445922, 445923, 445924, 445925,
445926, 445928, 445929, 445930, 445931, 445932, 445933, 445934, 445935, 445936,
445937, 445938, 445939, 445940, 445941, 445942, 445943, 445944, 445945, 445946,
445947, 445948, 445950, 445951, 445952, 445953, 445954, 445955, 445957, 445958,
445959, 445960, 445962, 445963, 445964, 445965, 445966, 445967, 445968, 445969,
445970, 445971, 445972, 445973, 445974, 445975, 445976, 445978, 445979, 445980,
445982, 445983, 445984, 445985, 445986, 445987, 445988, 445989, 445990, 445993,
445995, 445996, 445997, 445998, 445999, 446001, 446002, 446003, 446004, 446005,
446006, 446007, 446008, 446009, 446010, 446011, 446012, 446013, 446014, 446015,
446016, 446017, 446019, 446020, 446021, 446022, 446023, 446024, 446025, 446026,
446027, 446028, 446029, 446030, 446031, 446032, 446033, 446034, 446035, 446036,
446037, 446038, 446039, 446041, 446042, 446043, 446044, 446045, 446046, 446048,
446049, 446050, 446051, 446053, 446054, 446055, 446056, 446057, 446058, 446059,
446060, 446061, 446062, 446063, 446064, 446065, 446066, 446067, 446069, 446070,
446071, 446073, 446074, 446075, 446076, 446077, 446078, 446079, 446080, 446081};
	uint32_t TotalSlotsA =8281;
	#define ActiveSlotsA  910
	uint32_t TotalSlotsB =446082;
	#define ActiveSlotsB  9100
#define ActiveSlots 1
uint32_t TotalSlots =1;
#elif ((algorithmNum==10) && (algorithmDC==5))
#define va  8281
#define ka  910
#define vb  69342
#define kb  3640
#define lamda 1
uint32_t BA[910]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81,
91, 93, 183, 273, 351, 352, 353, 421, 422, 423,
424, 441, 459, 460, 461, 462, 463, 511, 549, 596,
597, 598, 599, 600, 601, 639, 686, 729, 819, 901,
902, 903, 904, 905, 906, 907, 908, 909, 991, 992,
993, 994, 995, 996, 997, 998, 999, 1000, 1051, 1052,
1053, 1054, 1055, 1056, 1082, 1141, 1174, 1175, 1176, 1177,
1178, 1179, 1180, 1181, 1182, 1261, 1262, 1263, 1264, 1351,
1352, 1353, 1354, 1427, 1428, 1429, 1430, 1431, 1432, 1433,
1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1517,
1534, 1535, 1536, 1557, 1558, 1559, 1560, 1561, 1562, 1563,
1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573,
1624, 1647, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727,
1728, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
1800, 1801, 1802, 1803, 1804, 1805, 1810, 1877, 1878, 1879,
1880, 1881, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946,
1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956,
1957, 1958, 1959, 1967, 2029, 2080, 2081, 2082, 2097, 2098,
2099, 2100, 2101, 2170, 2187, 2241, 2242, 2243, 2244, 2277,
2331, 2367, 2457, 2507, 2508, 2509, 2510, 2511, 2512, 2576,
2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
2597, 2666, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
2709, 2710, 2711, 2712, 2713, 2714, 2715, 2791, 2792, 2793,
2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803,
2804, 2805, 2806, 2871, 2872, 2873, 2874, 2875, 2876, 2882,
2961, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982,
2983, 2984, 2985, 2986, 2987, 2988, 3031, 3032, 3033, 3034,
3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044,
3045, 3046, 3047, 3048, 3049, 3050, 3051, 3064, 3121, 3151,
3152, 3153, 3154, 3241, 3242, 3243, 3244, 3245, 3332, 3358,
3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3424, 3425,
3426, 3427, 3448, 3514, 3520, 3521, 3522, 3523, 3524, 3525,
3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3559,
3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569,
3570, 3571, 3572, 3573, 3574, 3575, 3610, 3649, 3718, 3719,
3720, 3781, 3782, 3783, 3784, 3785, 3786, 3808, 3871, 3872,
3873, 3874, 3875, 3876, 3877, 3962, 3970, 3971, 3972, 3973,
4054, 4055, 4056, 4057, 4058, 4059, 4060, 4099, 4100, 4101,
4102, 4103, 4144, 4189, 4196, 4197, 4198, 4199, 4200, 4201,
4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211,
4212, 4279, 4286, 4369, 4459, 4487, 4488, 4489, 4490, 4491,
4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501,
4502, 4503, 4504, 4505, 4506, 4507, 4577, 4600, 4601, 4602,
4603, 4604, 4605, 4651, 4652, 4653, 4654, 4655, 4656, 4657,
4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667,
4690, 4736, 4737, 4738, 4739, 4740, 4741, 4826, 4851, 4852,
4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862,
4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4916,
4941, 5006, 5096, 5158, 5159, 5160, 5161, 5162, 5163, 5164,
5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5191, 5192,
5193, 5194, 5195, 5248, 5281, 5360, 5361, 5362, 5363, 5364,
5365, 5366, 5367, 5368, 5371, 5450, 5461, 5551, 5608, 5609,
5610, 5611, 5698, 5720, 5721, 5722, 5761, 5762, 5763, 5764,
5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774,
5775, 5776, 5777, 5778, 5779, 5780, 5781, 5810, 5851, 5852,
5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862,
5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872,
5942, 5997, 5998, 5999, 6000, 6001, 6002, 6003, 6004, 6005,
6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043,
6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053,
6054, 6087, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114,
6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124,
6197, 6238, 6239, 6240, 6241, 6242, 6243, 6328, 6357, 6358,
6359, 6447, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459,
6460, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479,
6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6542, 6561,
6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589,
6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599,
6600, 6647, 6648, 6649, 6650, 6651, 6670, 6737, 6812, 6813,
6814, 6827, 6902, 6917, 7007, 7011, 7012, 7013, 7014, 7015,
7101, 7160, 7161, 7162, 7163, 7164, 7165, 7166, 7167, 7168,
7169, 7170, 7171, 7172, 7173, 7174, 7191, 7250, 7281, 7371,
7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390,
7391, 7392, 7393, 7394, 7395, 7396, 7397, 7471, 7472, 7473,
7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483,
7484, 7485, 7486, 7487, 7488, 7562, 7610, 7611, 7612, 7613,
7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663,
7664, 7665, 7666, 7667, 7668, 7669, 7670, 7700, 7744, 7797,
7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807,
7808, 7809, 7810, 7811, 7887, 7908, 7909, 7910, 7911, 7912,
7913, 7914, 7915, 7916, 7921, 7922, 7923, 7924, 7925, 7998,
8011, 8012, 8013, 8014, 8015, 8016, 8101, 8102, 8191, 8192,
8194, 8195, 8196, 8197, 8198, 8200, 8201, 8202, 8203, 8204,
8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214,
8215, 8216, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225,
8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235,
8236, 8237, 8238, 8240, 8241, 8242, 8243, 8244, 8245, 8247,
8248, 8249, 8250, 8252, 8253, 8254, 8255, 8256, 8257, 8258,
8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8268, 8269,
8270, 8272, 8273, 8274, 8275, 8276, 8277, 8278, 8279, 8280};
uint32_t BB[3640]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81,
91, 92, 94, 100, 118, 140, 147, 152, 168, 172,
182, 183, 239, 240, 241, 242, 420, 537, 538, 539,
540, 541, 542, 543, 544, 545, 665, 666, 667, 668,
669, 670, 671, 672, 673, 674, 675, 676, 677, 678,
679, 680, 681, 682, 683, 684, 685, 718, 846, 897,
898, 899, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018,
1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1078,
1192, 1233, 1234, 1235, 1236, 1237, 1238, 1414, 1443, 1444,
1445, 1460, 1461, 1462, 1463, 1464, 1624, 1641, 1739, 1740,
1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750,
1751, 1752, 1753, 1754, 1755, 1920, 1939, 1940, 1941, 1942,
1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952,
1953, 1954, 1955, 1956, 1957, 1958, 1959, 2120, 2459, 2639,
2640, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729,
2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911,
3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022,
3023, 3024, 3025, 3026, 3027, 3028, 3029, 3084, 3096, 3194,
3458, 3459, 3627, 3628, 3629, 3808, 3809, 3810, 3811, 3850,
3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860,
3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870,
3990, 4031, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073,
4074, 4075, 4076, 4077, 4078, 4079, 4080, 4247, 4339, 4340,
4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350,
4351, 4352, 4353, 4425, 4426, 4427, 4428, 4520, 4606, 4628,
4629, 4630, 4734, 4809, 5096, 5097, 5249, 5250, 5251, 5252,
5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262,
5263, 5426, 5427, 5428, 5429, 5430, 5607, 5795, 5796, 5797,
5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807,
5808, 5809, 5874, 5875, 5876, 5877, 5878, 5879, 5976, 6055,
6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6238,
6239, 6240, 6241, 6242, 6243, 6360, 6419, 6465, 6466, 6467,
6468, 6469, 6646, 6693, 6694, 6695, 6696, 6697, 6698, 6816,
6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6874, 6997,
7085, 7086, 7087, 7266, 7399, 7400, 7401, 7402, 7403, 7404,
7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7413, 7414,
7415, 7416, 7417, 7418, 7419, 7557, 7558, 7559, 7560, 7561,
7580, 7738, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824,
7825, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987,
7988, 7989, 7990, 7991, 7992, 7993, 7998, 8160, 8161, 8162,
8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172,
8173, 8174, 8175, 8285, 8286, 8287, 8288, 8289, 8342, 8466,
8473, 8474, 8475, 8476, 8477, 8478, 8479, 8480, 8481, 8482,
8483, 8484, 8485, 8486, 8487, 8488, 8489, 8654, 8723, 8724,
8725, 8798, 8799, 8800, 8801, 8802, 8803, 8804, 8805, 8806,
8807, 8808, 8809, 8810, 8811, 8812, 8904, 8979, 9011, 9157,
9158, 9159, 9160, 9191, 9192, 9338, 9364, 9365, 9366, 9367,
9368, 9369, 9370, 9371, 9372, 9545, 9559, 9560, 9561, 9562,
9563, 9740, 9794, 9795, 9796, 9797, 9856, 9857, 9858, 9859,
9860, 9861, 9862, 9863, 9864, 9865, 9866, 9867, 9868, 9869,
9870, 9871, 9872, 9873, 9874, 9875, 9876, 9975, 10037, 10103,
10220, 10221, 10222, 10223, 10224, 10225, 10226, 10227, 10228, 10229,
10230, 10231, 10232, 10233, 10234, 10235, 10236, 10237, 10238, 10239,
10240, 10283, 10284, 10401, 10424, 10425, 10426, 10427, 10428, 10429,
10605, 10704, 10705, 10706, 10707, 10831, 10885, 11011, 11012, 11061,
11062, 11063, 11064, 11065, 11066, 11242, 11250, 11251, 11252, 11253,
11431, 11437, 11438, 11439, 11440, 11441, 11442, 11443, 11444, 11445,
11446, 11447, 11448, 11449, 11450, 11451, 11544, 11545, 11546, 11618,
11725, 11767, 11768, 11769, 11770, 11771, 11772, 11773, 11774, 11775,
11776, 11777, 11778, 11779, 11780, 11781, 11782, 11783, 11784, 11785,
11786, 11787, 11948, 11971, 11972, 11973, 11974, 11975, 11976, 12105,
12152, 12204, 12205, 12206, 12207, 12208, 12209, 12210, 12211, 12212,
12213, 12214, 12215, 12216, 12217, 12218, 12219, 12220, 12285, 12286,
12385, 12517, 12518, 12519, 12520, 12521, 12522, 12677, 12678, 12679,
12680, 12681, 12682, 12683, 12684, 12685, 12686, 12687, 12688, 12689,
12690, 12691, 12692, 12693, 12694, 12695, 12696, 12697, 12698, 12841,
12842, 12843, 12844, 12845, 12846, 12847, 12848, 12849, 12850, 12851,
12852, 12853, 12854, 12855, 12856, 12857, 12858, 13022, 13075, 13076,
13077, 13078, 13079, 13080, 13081, 13082, 13083, 13084, 13085, 13086,
13087, 13088, 13089, 13223, 13224, 13225, 13226, 13227, 13228, 13229,
13230, 13231, 13232, 13233, 13234, 13235, 13236, 13237, 13238, 13239,
13240, 13241, 13242, 13243, 13256, 13404, 13434, 13435, 13436, 13437,
13615, 13616, 13617, 13618, 13619, 13751, 13752, 13753, 13754, 13755,
13756, 13757, 13758, 13759, 13760, 13761, 13762, 13763, 13764, 13765,
13766, 13767, 13797, 13836, 13837, 13838, 13839, 13840, 13932, 14017,
14092, 14093, 14094, 14273, 14297, 14298, 14299, 14300, 14301, 14302,
14303, 14304, 14305, 14306, 14307, 14308, 14309, 14310, 14311, 14312,
14313, 14406, 14407, 14408, 14409, 14410, 14411, 14412, 14413, 14414,
14415, 14416, 14417, 14418, 14419, 14420, 14421, 14422, 14423, 14424,
14425, 14426, 14478, 14587, 14701, 14702, 14703, 14704, 14705, 14706,
14882, 14883, 14884, 14885, 14886, 14887, 14888, 15019, 15020, 15021,
15022, 15023, 15064, 15156, 15157, 15158, 15159, 15160, 15161, 15200,
15337, 15407, 15408, 15409, 15410, 15411, 15412, 15413, 15414, 15415,
15416, 15417, 15418, 15419, 15420, 15421, 15422, 15423, 15424, 15425,
15426, 15427, 15588, 15589, 15590, 15591, 15592, 15593, 15594, 15595,
15596, 15597, 15598, 15599, 15600, 15601, 15602, 15603, 15604, 15605,
15606, 15607, 15608, 15609, 15714, 15715, 15716, 15717, 15718, 15719,
15720, 15721, 15722, 15723, 15724, 15725, 15726, 15727, 15728, 15770,
15895, 15916, 15917, 15918, 15919, 15920, 15921, 15922, 15923, 15924,
16073, 16074, 16075, 16076, 16097, 16208, 16209, 16210, 16211, 16212,
16213, 16214, 16215, 16216, 16217, 16218, 16219, 16220, 16221, 16222,
16223, 16224, 16254, 16389, 16481, 16482, 16483, 16484, 16485, 16486,
16487, 16488, 16489, 16490, 16491, 16492, 16493, 16494, 16495, 16496,
16497, 16662, 16663, 16664, 16665, 16666, 16667, 16668, 16669, 16670,
16671, 16672, 16673, 16674, 16675, 16676, 16677, 16678, 16679, 16844,
16892, 16893, 16894, 16895, 17008, 17009, 17010, 17011, 17012, 17013,
17014, 17015, 17016, 17073, 17110, 17189, 17472, 17473, 17565, 17736,
17737, 17738, 17739, 17740, 17741, 17742, 17743, 17744, 17745, 17746,
17840, 17841, 17842, 17843, 17844, 17917, 18021, 18159, 18160, 18161,
18162, 18163, 18164, 18262, 18263, 18264, 18265, 18266, 18267, 18268,
18269, 18270, 18271, 18272, 18273, 18274, 18275, 18276, 18340, 18443,
18530, 18531, 18532, 18533, 18621, 18622, 18623, 18624, 18711, 18802,
18865, 18866, 18867, 18868, 18869, 18870, 18871, 18872, 18873, 18874,
18875, 18876, 18877, 18878, 18879, 18880, 18881, 18882, 18883, 18884,
18885, 19010, 19011, 19012, 19013, 19014, 19015, 19016, 19017, 19018,
19046, 19138, 19139, 19140, 19141, 19142, 19143, 19144, 19145, 19146,
19147, 19148, 19149, 19150, 19151, 19152, 19153, 19154, 19155, 19156,
19157, 19158, 19191, 19319, 19387, 19388, 19389, 19390, 19391, 19568,
19797, 19798, 19799, 19800, 19801, 19802, 19939, 19940, 19941, 19942,
19943, 19944, 19945, 19946, 19947, 19948, 19949, 19950, 19951, 19952,
19953, 19954, 19955, 19978, 20120, 20193, 20194, 20195, 20196, 20197,
20198, 20199, 20200, 20201, 20297, 20298, 20299, 20300, 20301, 20374,
20478, 20503, 20504, 20505, 20506, 20507, 20508, 20509, 20510, 20511,
20512, 20513, 20514, 20515, 20516, 20517, 20518, 20519, 20520, 20521,
20522, 20523, 20644, 20645, 20646, 20684, 20825, 20843, 20844, 20845,
20846, 20847, 21024, 21099, 21100, 21101, 21114, 21280, 21476, 21477,
21577, 21578, 21579, 21580, 21581, 21582, 21583, 21584, 21585, 21586,
21587, 21588, 21589, 21590, 21591, 21592, 21593, 21736, 21737, 21738,
21758, 21917, 21933, 22072, 22073, 22074, 22075, 22076, 22077, 22113,
22114, 22214, 22215, 22216, 22217, 22218, 22219, 22220, 22221, 22222,
22223, 22224, 22225, 22226, 22227, 22228, 22229, 22230, 22253, 22395,
22464, 22465, 22466, 22578, 22579, 22580, 22581, 22582, 22583, 22584,
22585, 22586, 22587, 22588, 22589, 22590, 22591, 22592, 22593, 22594,
22645, 22759, 22843, 23023, 23024, 23027, 23028, 23029, 23030, 23031,
23208, 23209, 23210, 23211, 23212, 23213, 23389, 23390, 23569, 23570,
23738, 23739, 23740, 23846, 23847, 23848, 23849, 23850, 23919, 24027,
24197, 24198, 24199, 24200, 24201, 24202, 24203, 24204, 24205, 24210,
24211, 24212, 24213, 24214, 24378, 24391, 24470, 24471, 24472, 24473,
24474, 24475, 24476, 24477, 24478, 24620, 24621, 24622, 24623, 24624,
24625, 24651, 24801, 24814, 24815, 24816, 24817, 24818, 24819, 24820,
24821, 24822, 24823, 24824, 24825, 24826, 24827, 24828, 24995, 25103,
25104, 25105, 25173, 25174, 25175, 25176, 25284, 25354, 25451, 25452,
25453, 25454, 25455, 25456, 25457, 25458, 25459, 25460, 25461, 25462,
25463, 25464, 25465, 25573, 25632, 25753, 25754, 25755, 25906, 25907,
25908, 25909, 25910, 25911, 25912, 25913, 25914, 25915, 25916, 25917,
25918, 25919, 25920, 25935, 25936, 26054, 26055, 26056, 26057, 26058,
26059, 26060, 26061, 26062, 26063, 26064, 26065, 26066, 26067, 26068,
26069, 26070, 26071, 26072, 26073, 26074, 26087, 26235, 26265, 26266,
26267, 26268, 26446, 26485, 26486, 26487, 26488, 26489, 26634, 26635,
26636, 26637, 26638, 26639, 26640, 26641, 26642, 26643, 26644, 26645,
26646, 26647, 26648, 26666, 26764, 26765, 26766, 26767, 26768, 26769,
26770, 26771, 26772, 26773, 26774, 26775, 26776, 26777, 26778, 26779,
26780, 26815, 26945, 26993, 26994, 26995, 26996, 27120, 27174, 27482,
27483, 27484, 27846, 27847, 27908, 27909, 27910, 27911, 27912, 27913,
27914, 27915, 27916, 27917, 27918, 27919, 27920, 27921, 27922, 28089,
28123, 28124, 28125, 28126, 28127, 28267, 28268, 28269, 28270, 28304,
28396, 28397, 28398, 28399, 28400, 28448, 28577, 28602, 28603, 28604,
28605, 28606, 28607, 28608, 28609, 28610, 28611, 28612, 28613, 28614,
28615, 28616, 28617, 28618, 28619, 28620, 28621, 28622, 28783, 28838,
28839, 28840, 28841, 28842, 28843, 28844, 28845, 28846, 29019, 29031,
29198, 29199, 29200, 29211, 29212, 29379, 29455, 29456, 29457, 29458,
29459, 29460, 29461, 29462, 29463, 29464, 29465, 29466, 29467, 29468,
29469, 29636, 29748, 29749, 29750, 29751, 29752, 29753, 29754, 29755,
29756, 29929, 30203, 30204, 30205, 30206, 30207, 30208, 30209, 30210,
30211, 30294, 30295, 30296, 30297, 30298, 30299, 30300, 30301, 30302,
30384, 30475, 30567, 30568, 30569, 30570, 30571, 30572, 30573, 30574,
30575, 30669, 30748, 30849, 30850, 30906, 30907, 30908, 30909, 31087,
31109, 31110, 31111, 31172, 31173, 31174, 31175, 31176, 31177, 31290,
31353, 31473, 31474, 31475, 31496, 31497, 31498, 31499, 31500, 31501,
31502, 31503, 31504, 31505, 31506, 31507, 31508, 31509, 31510, 31511,
31512, 31654, 31670, 31677, 32032, 32033, 32173, 32174, 32175, 32176,
32177, 32178, 32264, 32265, 32266, 32267, 32268, 32269, 32354, 32445,
32478, 32479, 32480, 32481, 32482, 32483, 32484, 32485, 32486, 32659,
32660, 32661, 32662, 32663, 32664, 32665, 32666, 32667, 32668, 32841,
32879, 32880, 32881, 32882, 32883, 32884, 32885, 32886, 32887, 32888,
32889, 32890, 32891, 32892, 32893, 32894, 32895, 32896, 32897, 32898,
32899, 32992, 32993, 32994, 32995, 32996, 32997, 33060, 33128, 33129,
33130, 33131, 33132, 33173, 33309, 33368, 33369, 33370, 33371, 33372,
33373, 33374, 33375, 33376, 33377, 33378, 33379, 33380, 33381, 33382,
33549, 33566, 33567, 33568, 33727, 33728, 33729, 33730, 33747, 33908,
33953, 33954, 33955, 33956, 33957, 33958, 33959, 33960, 33961, 33962,
33963, 33964, 33965, 33966, 33967, 33968, 33969, 34134, 34266, 34267,
34268, 34269, 34270, 34271, 34447, 34476, 34477, 34478, 34657, 34753,
34754, 34755, 34756, 34757, 34758, 34759, 34760, 34761, 34910, 34911,
34912, 34913, 34934, 35022, 35023, 35024, 35091, 35154, 35155, 35156,
35157, 35158, 35159, 35160, 35161, 35162, 35163, 35164, 35165, 35166,
35167, 35168, 35169, 35170, 35171, 35172, 35173, 35174, 35203, 35335,
35461, 35462, 35463, 35464, 35465, 35466, 35467, 35468, 35469, 35470,
35471, 35472, 35473, 35474, 35475, 35642, 35659, 35660, 35661, 35825,
35826, 35827, 35828, 35829, 35830, 35831, 35832, 35833, 35834, 35835,
35836, 35837, 35838, 35839, 35840, 35936, 35937, 35938, 35939, 35940,
35941, 35942, 35943, 35944, 36006, 36117, 36177, 36178, 36179, 36180,
36181, 36182, 36246, 36247, 36248, 36249, 36250, 36251, 36252, 36253,
36254, 36255, 36256, 36257, 36258, 36259, 36260, 36261, 36262, 36263,
36264, 36265, 36266, 36358, 36402, 36427, 36764, 36765, 36883, 36884,
36885, 36886, 36887, 36888, 36889, 36890, 36891, 36892, 36893, 36894,
36895, 36896, 36897, 36898, 36899, 36900, 36901, 36902, 36903, 36974,
36975, 36976, 36977, 36978, 36979, 36980, 36981, 36982, 36983, 36984,
36985, 36986, 36987, 36988, 36989, 36990, 36991, 36992, 36993, 36994,
37064, 37155, 37206, 37207, 37208, 37387, 37388, 37389, 37390, 37569,
37574, 37575, 37576, 37577, 37578, 37579, 37580, 37581, 37582, 37736,
37737, 37738, 37739, 37740, 37741, 37742, 37743, 37744, 37745, 37746,
37747, 37748, 37749, 37750, 37755, 37917, 37957, 37958, 37959, 37960,
37961, 37962, 37963, 37964, 37965, 37966, 37967, 37968, 37969, 37970,
37971, 37972, 37973, 38095, 38096, 38097, 38098, 38138, 38248, 38249,
38250, 38251, 38252, 38253, 38254, 38255, 38256, 38257, 38258, 38259,
38260, 38261, 38262, 38263, 38264, 38265, 38266, 38267, 38268, 38276,
38412, 38413, 38414, 38415, 38416, 38417, 38418, 38419, 38420, 38421,
38422, 38423, 38424, 38425, 38426, 38427, 38428, 38429, 38593, 38646,
38647, 38648, 38649, 38650, 38651, 38652, 38653, 38654, 38655, 38656,
38657, 38658, 38659, 38660, 38827, 39005, 39006, 39007, 39008, 39186,
39192, 39193, 39194, 39195, 39196, 39197, 39198, 39199, 39200, 39201,
39202, 39203, 39204, 39205, 39206, 39373, 39485, 39486, 39487, 39488,
39489, 39490, 39491, 39492, 39493, 39551, 39552, 39553, 39554, 39666,
39726, 39727, 39728, 39729, 39730, 39731, 39732, 39907, 40011, 40012,
40013, 40014, 40015, 40016, 40017, 40018, 40019, 40020, 40021, 40022,
40023, 40024, 40025, 40044, 40045, 40046, 40047, 40048, 40192, 40225,
40391, 40392, 40393, 40499, 40500, 40501, 40502, 40503, 40572, 40664,
40665, 40666, 40680, 40845, 40916, 40917, 40918, 40919, 40960, 40961,
40962, 40963, 40964, 40965, 40966, 40967, 40968, 40969, 40970, 40971,
40972, 40973, 40974, 40975, 40976, 41097, 41141, 41280, 41281, 41282,
41283, 41376, 41377, 41378, 41379, 41380, 41381, 41382, 41383, 41384,
41385, 41386, 41387, 41388, 41389, 41390, 41461, 41557, 41558, 41559,
41560, 41561, 41562, 41563, 41564, 41565, 41566, 41567, 41568, 41569,
41570, 41571, 41572, 41735, 41736, 41737, 41738, 41739, 41916, 41917,
41918, 41919, 41920, 42098, 42183, 42184, 42185, 42186, 42187, 42188,
42302, 42303, 42304, 42364, 42483, 42547, 42548, 42549, 42550, 42551,
42552, 42592, 42593, 42594, 42595, 42596, 42728, 42773, 42889, 42890,
42891, 42892, 42893, 42894, 42895, 42896, 42897, 42898, 42899, 42900,
42901, 42902, 42903, 42904, 42905, 42906, 42907, 42908, 42909, 43045,
43070, 43225, 43226, 43253, 43254, 43255, 43256, 43257, 43258, 43259,
43260, 43261, 43262, 43263, 43264, 43265, 43266, 43267, 43268, 43269,
43270, 43271, 43272, 43273, 43318, 43434, 43680, 43681, 43708, 43709,
43710, 43711, 43712, 43713, 43714, 43715, 43716, 43717, 43718, 43719,
43720, 43721, 43722, 43723, 43724, 43725, 43726, 43727, 43728, 43889,
43963, 43964, 43965, 43966, 43967, 43968, 43969, 43970, 43971, 43972,
43973, 43974, 43975, 43976, 43977, 43978, 43979, 44094, 44095, 44096,
44097, 44098, 44099, 44144, 44275, 44327, 44328, 44329, 44330, 44331,
44332, 44333, 44334, 44335, 44336, 44337, 44338, 44339, 44340, 44341,
44342, 44343, 44503, 44504, 44505, 44506, 44507, 44508, 44684, 44743,
44744, 44745, 44746, 44747, 44748, 44749, 44750, 44751, 44752, 44753,
44754, 44755, 44756, 44757, 44834, 44835, 44836, 44837, 44838, 44839,
44840, 44841, 44842, 44843, 44844, 44845, 44846, 44847, 44848, 44924,
45004, 45005, 45006, 45007, 45008, 45009, 45015, 45185, 45193, 45194,
45195, 45196, 45374, 45466, 45467, 45468, 45469, 45550, 45551, 45552,
45553, 45554, 45555, 45647, 45731, 45866, 46228, 46229, 46401, 46402,
46403, 46404, 46405, 46406, 46407, 46408, 46409, 46472, 46473, 46474,
46475, 46476, 46477, 46478, 46479, 46480, 46481, 46482, 46483, 46484,
46485, 46486, 46582, 46653, 46733, 46734, 46735, 46736, 46737, 46738,
46831, 46832, 46833, 46834, 46914, 47012, 47049, 47229, 47230, 47307,
47308, 47309, 47439, 47440, 47441, 47442, 47443, 47444, 47445, 47446,
47447, 47448, 47449, 47450, 47451, 47452, 47453, 47454, 47455, 47456,
47457, 47458, 47459, 47488, 47512, 47513, 47514, 47515, 47516, 47517,
47518, 47519, 47520, 47521, 47522, 47523, 47524, 47525, 47526, 47527,
47528, 47620, 47693, 47734, 47735, 47736, 47737, 47738, 47739, 47915,
47916, 47917, 47918, 47919, 47920, 47921, 48076, 48077, 48078, 48079,
48080, 48081, 48082, 48083, 48084, 48085, 48086, 48087, 48088, 48089,
48090, 48091, 48092, 48093, 48094, 48095, 48096, 48097, 48257, 48513,
48514, 48515, 48516, 48517, 48518, 48519, 48520, 48521, 48522, 48523,
48524, 48525, 48526, 48527, 48528, 48529, 48604, 48605, 48606, 48607,
48608, 48609, 48610, 48611, 48612, 48613, 48614, 48615, 48616, 48617,
48618, 48619, 48620, 48694, 48785, 48949, 48950, 48951, 48952, 48953,
48954, 48955, 48956, 48957, 48986, 48987, 48988, 48989, 48990, 48991,
48992, 48993, 48994, 48995, 48996, 48997, 48998, 48999, 49000, 49001,
49002, 49003, 49004, 49005, 49006, 49130, 49144, 49145, 49146, 49147,
49148, 49167, 49325, 49332, 49333, 49334, 49335, 49336, 49337, 49338,
49339, 49340, 49341, 49342, 49343, 49344, 49345, 49346, 49347, 49348,
49513, 49532, 49533, 49534, 49535, 49536, 49537, 49538, 49539, 49540,
49541, 49542, 49543, 49544, 49545, 49546, 49547, 49548, 49549, 49550,
49551, 49552, 49713, 49855, 49856, 49857, 49950, 49951, 49952, 49953,
49954, 49955, 49956, 49957, 49958, 50036, 50131, 50198, 50199, 50200,
50201, 50236, 50237, 50238, 50239, 50240, 50379, 50417, 50509, 50510,
50511, 50512, 50513, 50606, 50607, 50608, 50609, 50610, 50611, 50612,
50613, 50614, 50615, 50616, 50617, 50618, 50619, 50620, 50621, 50622,
50690, 50787, 50873, 50874, 50875, 50876, 50877, 50964, 50965, 50966,
50967, 50968, 51054, 51145, 51192, 51193, 51194, 51195, 51196, 51197,
51373, 51465, 51466, 51467, 51468, 51469, 51470, 51646, 51659, 51660,
51661, 51662, 51663, 51664, 51665, 51666, 51667, 51668, 51669, 51670,
51671, 51672, 51673, 51716, 51717, 51718, 51719, 51720, 51721, 51722,
51723, 51724, 51725, 51726, 51727, 51728, 51729, 51730, 51731, 51732,
51733, 51734, 51735, 51736, 51840, 51897, 51898, 51899, 51900, 51901,
51902, 51903, 51904, 51905, 51906, 51907, 51908, 51909, 51910, 51911,
51912, 51913, 51914, 51915, 51916, 51917, 51918, 52079, 52171, 52172,
52173, 52174, 52175, 52176, 52177, 52178, 52179, 52180, 52181, 52182,
52183, 52184, 52185, 52186, 52187, 52188, 52189, 52190, 52191, 52238,
52239, 52240, 52241, 52242, 52352, 52418, 52419, 52780, 52781, 52830,
52831, 52832, 52833, 52834, 52835, 53011, 53055, 53235, 53236, 53245,
53246, 53247, 53248, 53249, 53250, 53251, 53252, 53253, 53254, 53255,
53256, 53257, 53258, 53259, 53260, 53261, 53419, 53426, 53510, 53599,
53600, 53872, 53873, 53954, 53955, 53956, 53957, 53958, 53959, 53960,
53961, 53962, 54135, 54207, 54208, 54209, 54210, 54211, 54212, 54213,
54214, 54215, 54216, 54217, 54218, 54219, 54220, 54221, 54238, 54388,
54600, 54601, 54678, 54679, 54680, 54859, 55059, 55060, 55061, 55062,
55063, 55174, 55175, 55176, 55177, 55178, 55179, 55180, 55181, 55182,
55183, 55184, 55185, 55186, 55187, 55188, 55189, 55190, 55191, 55192,
55193, 55194, 55240, 55355, 55501, 55502, 55503, 55504, 55505, 55506,
55507, 55508, 55509, 55512, 55682, 55874, 55875, 56066, 56067, 56068,
56069, 56070, 56071, 56072, 56073, 56074, 56075, 56076, 56077, 56078,
56079, 56080, 56081, 56082, 56247, 56407, 56408, 56409, 56588, 56593,
56594, 56595, 56596, 56597, 56598, 56599, 56600, 56601, 56774, 56812,
56813, 56814, 56815, 56816, 56817, 56818, 56819, 56820, 56821, 56822,
56823, 56824, 56825, 56826, 56827, 56828, 56829, 56830, 56831, 56832,
56993, 57114, 57115, 57116, 57117, 57295, 57321, 57322, 57323, 57324,
57325, 57326, 57327, 57328, 57329, 57499, 57500, 57501, 57502, 57605,
57680, 57698, 57699, 57700, 57701, 57702, 57785, 57786, 57879, 58227,
58228, 58229, 58381, 58382, 58383, 58384, 58385, 58386, 58408, 58562,
58595, 58596, 58597, 58598, 58599, 58600, 58601, 58602, 58603, 58682,
58683, 58684, 58776, 58848, 58849, 58850, 58851, 58852, 58853, 58854,
58855, 58856, 58857, 58858, 58859, 58860, 58861, 58862, 58863, 59029,
59087, 59088, 59089, 59090, 59091, 59092, 59093, 59094, 59095, 59096,
59097, 59098, 59099, 59100, 59101, 59102, 59103, 59104, 59105, 59106,
59107, 59207, 59208, 59209, 59210, 59268, 59388, 59501, 59502, 59503,
59662, 59663, 59664, 59665, 59682, 59791, 59792, 59793, 59794, 59795,
59843, 59960, 59961, 59962, 59963, 59964, 59965, 59966, 59967, 59968,
59972, 60141, 60161, 60162, 60163, 60164, 60165, 60166, 60167, 60168,
60169, 60170, 60171, 60172, 60173, 60174, 60175, 60176, 60177, 60324,
60325, 60326, 60327, 60328, 60329, 60330, 60331, 60332, 60342, 60434,
60435, 60436, 60437, 60438, 60439, 60440, 60441, 60442, 60443, 60444,
60445, 60446, 60447, 60448, 60449, 60450, 60505, 60615, 60759, 60760,
60761, 60762, 60763, 60764, 60765, 60766, 60767, 60768, 60769, 60770,
60771, 60772, 60773, 60929, 60930, 60931, 60932, 60933, 60934, 60940,
60972, 61110, 61334, 61335, 61344, 61345, 61346, 61347, 61348, 61349,
61350, 61351, 61352, 61353, 61354, 61355, 61356, 61357, 61358, 61359,
61360, 61525, 61635, 61636, 61637, 61638, 61639, 61640, 61641, 61642,
61643, 61644, 61645, 61646, 61647, 61648, 61649, 61650, 61651, 61652,
61653, 61654, 61655, 61816, 61851, 61852, 61853, 61854, 61855, 61856,
61857, 61858, 61859, 61860, 61861, 61862, 61863, 61864, 61865, 61890,
61891, 61892, 61893, 61894, 61895, 61896, 61897, 61898, 61899, 61900,
61901, 61902, 61903, 61904, 61905, 61906, 62032, 62066, 62067, 62068,
62069, 62070, 62071, 62247, 62337, 62517, 62518, 62579, 62580, 62581,
62582, 62583, 62584, 62585, 62586, 62587, 62588, 62589, 62590, 62591,
62592, 62593, 62709, 62710, 62711, 62712, 62713, 62714, 62715, 62716,
62717, 62718, 62719, 62720, 62721, 62722, 62723, 62724, 62725, 62760,
62852, 62853, 62854, 62855, 62856, 62857, 62858, 62859, 62860, 62861,
62862, 62863, 62864, 62865, 62866, 62890, 62976, 62977, 62978, 62979,
62980, 63033, 63157, 63211, 63212, 63213, 63214, 63392, 63522, 63523,
63524, 63525, 63526, 63703, 63853, 63854, 63855, 63856, 63857, 63858,
63859, 63860, 63861, 63862, 63863, 63864, 63865, 63866, 63867, 64034,
64055, 64056, 64057, 64058, 64059, 64060, 64061, 64062, 64063, 64074,
64075, 64076, 64077, 64078, 64079, 64080, 64081, 64082, 64083, 64084,
64085, 64086, 64087, 64088, 64089, 64090, 64236, 64255, 64256, 64257,
64258, 64259, 64260, 64261, 64262, 64263, 64264, 64265, 64266, 64267,
64268, 64269, 64270, 64271, 64272, 64437, 64510, 64511, 64512, 64513,
64514, 64515, 64516, 64517, 64518, 64688, 64689, 64690, 64691, 64869,
64961, 64962, 64963, 65052, 65053, 65054, 65142, 65206, 65207, 65208,
65209, 65210, 65211, 65233, 65340, 65387, 65702, 65703, 65706, 65707,
65708, 65709, 65710, 65887, 65888, 65889, 65890, 65891, 65892, 66069,
66214, 66215, 66216, 66217, 66250, 66395, 66612, 66613, 66707, 66708,
66709, 66710, 66711, 66796, 66888, 67158, 67159, 67306, 67307, 67308,
67309, 67481, 67482, 67483, 67484, 67485, 67486, 67487, 67532, 67533,
67534, 67535, 67536, 67537, 67538, 67539, 67540, 67541, 67542, 67543,
67544, 67545, 67546, 67547, 67548, 67662, 67713, 68034, 68035, 68036,
68037, 68187, 68188, 68189, 68190, 68191, 68192, 68193, 68194, 68195,
68196, 68197, 68198, 68199, 68200, 68201, 68202, 68203, 68204, 68205,
68206, 68207, 68215, 68368, 68423, 68424, 68425, 68426, 68427, 68428,
68429, 68430, 68431, 68573, 68574, 68575, 68576, 68577, 68578, 68604,
68754, 68858, 68859, 68860, 68861, 68862, 68863, 68864, 68865, 68866,
68867, 68868, 68869, 68870, 68871, 68872, 68980, 69039, 69162, 69164,
69165, 69166, 69167, 69168, 69170, 69171, 69172, 69173, 69174, 69175,
69176, 69177, 69178, 69179, 69180, 69181, 69182, 69183, 69184, 69185,
69186, 69188, 69189, 69190, 69191, 69192, 69193, 69194, 69195, 69196,
69197, 69198, 69199, 69200, 69201, 69202, 69203, 69204, 69205, 69206,
69207, 69208, 69210, 69211, 69212, 69213, 69214, 69215, 69217, 69218,
69219, 69220, 69222, 69223, 69224, 69225, 69226, 69227, 69228, 69229,
69230, 69231, 69232, 69233, 69234, 69235, 69236, 69238, 69239, 69240,
69242, 69243, 69244, 69245, 69246, 69247, 69248, 69249, 69250, 69253,
69255, 69256, 69257, 69258, 69259, 69261, 69262, 69263, 69264, 69265,
69266, 69267, 69268, 69269, 69270, 69271, 69272, 69273, 69274, 69275,
69276, 69277, 69279, 69280, 69281, 69282, 69283, 69284, 69285, 69286,
69287, 69288, 69289, 69290, 69291, 69292, 69293, 69294, 69295, 69296,
69297, 69298, 69299, 69301, 69302, 69303, 69304, 69305, 69306, 69308,
69309, 69310, 69311, 69313, 69314, 69315, 69316, 69317, 69318, 69319,
69320, 69321, 69322, 69323, 69324, 69325, 69326, 69327, 69329, 69330,
69331, 69333, 69334, 69335, 69336, 69337, 69338, 69339, 69340, 69341};
	uint32_t TotalSlotsA =8281;
	#define ActiveSlotsA  910
	uint32_t TotalSlotsB =69342;
	#define ActiveSlotsB  3640
#define ActiveSlots 1
uint32_t TotalSlots =1;
#endif
/********************************** Asymmetric BIBD Simulation ******************************/
// 10% of duty cycle
#if ((algorithmNum==7) && (algorithmDC==10))
#define va  2821
#define ka  60
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[60]={
91, 92, 94, 100, 118, 140, 147, 152, 168, 172,
455, 456, 458, 464, 482, 504, 511, 516, 532, 536,
1001, 1002, 1004, 1010, 1028, 1050, 1057, 1062, 1078, 1082,
2184, 2185, 2187, 2193, 2211, 2233, 2240, 2245, 2261, 2265,
2275, 2276, 2278, 2284, 2302, 2324, 2331, 2336, 2352, 2356,
2457, 2458, 2460, 2466, 2484, 2506, 2513, 2518, 2534, 2538};
uint32_t BB[10]={0,1,3,9,27,49,56,61,77,81};
uint32_t TotalSlotsA =2821;
#define ActiveSlotsA  60

uint32_t TotalSlotsB = 91;
#define ActiveSlotsB 10
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 5% of duty cycle
#elif ((algorithmNum==7) && (algorithmDC==5))
#define va  12103
#define ka  120
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[120]={
91, 92, 94, 100, 118, 140, 147, 152, 168, 172,
1001, 1002, 1004, 1010, 1028, 1050, 1057, 1062, 1078, 1082,
1456, 1457, 1459, 1465, 1483, 1505, 1512, 1517, 1533, 1537,
3640, 3641, 3643, 3649, 3667, 3689, 3696, 3701, 3717, 3721,
3731, 3732, 3734, 3740, 3758, 3780, 3787, 3792, 3808, 3812,
3913, 3914, 3916, 3922, 3940, 3962, 3969, 3974, 3990, 3994,
4732, 4733, 4735, 4741, 4759, 4781, 4788, 4793, 4809, 4813,
5460, 5461, 5463, 5469, 5487, 5509, 5516, 5521, 5537, 5541,
6734, 6735, 6737, 6743, 6761, 6783, 6790, 6795, 6811, 6815,
7098, 7099, 7101, 7107, 7125, 7147, 7154, 7159, 7175, 7179,
11011, 11012, 11014, 11020, 11038, 11060, 11067, 11072, 11088, 11092,
11648, 11649, 11651, 11657, 11675, 11697, 11704, 11709, 11725, 11729};
uint32_t BB[10]={0,1,3,9,27,49,56,61,77,81};
uint32_t TotalSlotsA =12103;
#define ActiveSlotsA  120
uint32_t TotalSlotsB = 91;
#define ActiveSlotsB 10
#define ActiveSlots 1
uint32_t TotalSlots =1;
// 10% and 5% duty cycles
#elif ((algorithmNum==7) && (algorithmDC==2))
#define va  637
#define ka  30
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[30]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81,
91, 92, 94, 100, 118, 140, 147, 152, 168, 172,
273, 274, 276, 282, 300, 322, 329, 334, 350, 354};
uint32_t BB[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
	uint32_t TotalSlotsA =637;
	#define ActiveSlotsA  30
	uint32_t TotalSlotsB =91;
	#define ActiveSlotsB  10
	uint32_t TotalSlots =1;
	#define ActiveSlots 1
// 10% and 5% duty cycles
#elif ((algorithmNum==7) && (algorithmDC==1))
#define va  147
#define ka  15
#define vb  147
#define kb  15
#define lamda 1
uint32_t BA[15]={
3, 6, 7, 12, 14, 24, 27, 28, 33, 35,
66, 69, 70, 75, 77};
uint32_t BB[15]={
3, 6, 7, 12, 14, 24, 27, 28, 33, 35,
66, 69, 70, 75, 77};
	uint32_t TotalSlotsA =147;
	#define ActiveSlotsA  15
	uint32_t TotalSlotsB =147;
	#define ActiveSlotsB  15
	uint32_t TotalSlots =1;
	#define ActiveSlots 1
#endif

#if ((algorithmNum != 18) && (algorithmNum !=17) && (algorithmNum !=12) &&  (algorithmNum != 11) && (algorithmNum != 10) && (algorithmNum != 7) && (algorithmNum != 6) && (algorithmNum != 2) )
#define va  12103
#define ka  120
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[10]={0,1,3,9,27,49,56,61,77,81};
uint32_t BB[10]={0,1,3,9,27,49,56,61,77,81};
/*
uint32_t TotalSlotsA =2821;
#define ActiveSlotsA  60
#define ActiveSlots  60
uint32_t TotalSlotsB = 91;
#define ActiveSlotsB 10
*/
int16_t bibd_primeA =89;
int16_t bibd_primeB =89;
#define u_primeA 13
#define u_primeB 149

#endif

/********************************** Asymmetric U-CONNECT Simulation ******************************/
// 10% and 2%
#if ((algorithmNum==8) && (algorithmDC==10))
	#define u_primeA 13
	uint16_t TotalSlotsA = 169;
	#define ActiveSlotsA 19

	#define u_primeB 73
	uint16_t TotalSlotsB = 5329;
	#define ActiveSlotsB 109
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 1%
#elif ((algorithmNum==8) && (algorithmDC==5))
	#define u_primeA 13
	uint16_t TotalSlotsA = 169;
	#define ActiveSlotsA 19

	#define u_primeB 149
	uint16_t TotalSlotsB = 22201;
	#define ActiveSlotsB 223
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 5%
#elif ((algorithmNum==8) && (algorithmDC==5))
	#define u_primeA 13
	uint16_t TotalSlotsA = 169;
	#define ActiveSlotsA 19

	#define u_primeB 29
	uint16_t TotalSlotsB = 841;
	#define ActiveSlotsB 43
#define ActiveSlots 1
uint32_t TotalSlots =1;
// 10% and 10%
#elif ((algorithmNum==8) && (algorithmDC==5))
	#define u_primeA 13
	uint16_t TotalSlotsA = 169;
	#define ActiveSlotsA 19

	#define u_primeB 13
	uint16_t TotalSlotsB = 169;
	#define ActiveSlotsB 19
#define ActiveSlots 1
uint32_t TotalSlots =1;

#else
//uint32_t TotalSlotsA =2821;
	#define u_primeA 13
	#define u_primeB 149
#endif


/********************************** SABIBD Algorithm (BIBD+Prime) **********************/
// Initialization

// 10% and 2% of duty cycle of proposed
///*
#if ((algorithmNum==6) && (algorithmDC==10))
// 2%
#define va 2451
#define ka 50
// 10%
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[50]={0,1,7,49,170,223,267,343,348,382,491,508,688,750,828,886,
							894,977,986,989,1105,1123,1177,1190,1300,1304,1356,1561,1634,
							1716,1745,1747,1775,1849,1869,1892,1937,2000,2021,2101,2139,
							2171,2208,2269,2346,2365,2401,2411,2425,2436};
uint32_t BB[10]={0,1,3,9,27,49,56,61,77,81};
uint32_t TotalSlotsA =2451;
#define ActiveSlotsA 50
int16_t bibd_primeA = 2447;
uint32_t TotalSlotsB = 91;
#define ActiveSlotsB 10
int16_t bibd_primeB = 89;
#define ActiveSlots 1
uint32_t TotalSlots =1;
//*/
// 10% and 1% of duty cycle of proposed
#elif ((algorithmNum==6) && (algorithmDC==5) )
// 1%
#define va 9507
#define ka 98
// 10%
#define vb  91
#define kb  10
#define lamda 1
uint16_t BA[98]={1,13,68,97,137,360,568,611,657,670,696,717,833,889,963,1070,1071,1073,1107,1122,
                  1261,1378,1402,1503,1984,1989,2054,2163,2225,2301,2308,2670,2748,2793,2802,2825,
                  2843,2896,3000,3008,3169,3186,3211,3527,3782,3929,4128,4257,4536,4594,4725,4745,
	                4818,5209,5215,5253,5367,5371,5588,5598,5670,5790,5847,6034,6113,6124,6246,6338,
	                6399,6426,6566,6596,6671,6687,6921,7221,7243,7561,7609,7829,7848,7862,7948,8091,
		              8233,8296,8360,8560,8720,8817,8930,9011,9098,9126,9224,9374,9409,9440
		               };
uint32_t BB[10]={0,1,3,9,27,49,56,61,77,81};
uint32_t TotalSlotsA =9507;
#define ActiveSlotsA 98
int16_t bibd_primeA = 9497;
uint32_t TotalSlotsB = 91;
#define ActiveSlotsB 10
int16_t bibd_primeB = 89;
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 5%
#elif ((algorithmNum==6) && (algorithmDC==2))
#define va 381
#define ka 20
#define vb 91
#define kb 10
#define lamda 1
uint32_t BA[20]={
0, 1, 19, 28, 96, 118, 151, 153, 176, 202,
240, 254, 290, 296, 300, 307, 337, 361, 366, 369};
uint32_t BB[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
	uint32_t TotalSlotsA =381;
	#define ActiveSlotsA  20
	int16_t bibd_primeA =379;
	uint32_t TotalSlotsB =91;
	#define ActiveSlotsB  10
	int16_t bibd_primeB =89;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

// 10% 10% of duty cycle of proposed
#elif ((algorithmNum==6) && (algorithmDC==1))
#define va 91
#define ka 10
#define vb 91
#define kb 10
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA 10
	int16_t bibd_primeA =89;
	uint32_t TotalSlotsB =91;
	#define ActiveSlotsB 10
	int16_t bibd_primeB =89;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1
// 553 length
#elif ((algorithmNum==6) && (algorithmDC==553))
#define va  553
#define ka  24
#define vb  553
#define kb  24
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =553;
	#define ActiveSlotsB  24
	int16_t bibd_primeB =547;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==651))
#define va  553
#define ka  24
#define vb  651
#define kb  26
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[26]={
0, 1, 34, 58, 77, 129, 193, 220, 281, 295,
327, 377, 387, 389, 395, 400, 417, 426, 442, 498,
527, 565, 568, 572, 616, 631};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =651;
	#define ActiveSlotsB  26
	int16_t bibd_primeB =647;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==757))
#define va  553
#define ka  24
#define vb  757
#define kb  28
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[28]={
0, 1, 30, 48, 76, 150, 175, 208, 219, 246,
272, 287, 289, 308, 311, 367, 398, 402, 412, 418,
452, 475, 484, 536, 603, 652, 745, 750};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =757;
	#define ActiveSlotsB  28
	int16_t bibd_primeB =757;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==871))
#define va  553
#define ka  24
#define vb  871
#define kb  30
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[30]={
0, 1, 47, 81, 263, 271, 277, 287, 308, 338,
386, 425, 427, 438, 450, 521, 543, 593, 597, 635,
650, 653, 670, 679, 719, 738, 774, 781, 839, 844};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =871;
	#define ActiveSlotsB  30
	int16_t bibd_primeB =863;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==993))
#define va  553
#define ka  24
#define vb  993
#define kb  32
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[32]={
0, 1, 33, 86, 90, 132, 148, 168, 191, 213,
241, 251, 260, 262, 265, 446, 490, 507, 586, 615,
650, 656, 663, 690, 774, 792, 800, 872, 887, 926,
938, 963};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =993;
	#define ActiveSlotsB  32
	int16_t bibd_primeB =991;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==1057))
#define va  553
#define ka  24
#define vb  1057
#define kb  33
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[33]={
0, 12, 92, 96, 151, 154, 174, 175, 226, 286,
300, 335, 343, 354, 453, 459, 499, 501, 530, 540,
566, 596, 603, 630, 718, 723, 736, 751, 768, 812,
821, 837, 859};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =1057;
	#define ActiveSlotsB  33
	int16_t bibd_primeB =1051;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==1407))
#define va  553
#define ka  24
#define vb  1407
#define kb  38
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[38]={
0, 1, 34, 72, 84, 150, 187, 213, 235, 244,
403, 420, 444, 543, 641, 649, 717, 736, 749, 818,
829, 869, 931, 966, 973, 976, 991, 996, 1012, 1040,
1087, 1101, 1130, 1157, 1276, 1349, 1353, 1355};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =1407;
	#define ActiveSlotsB  38
	int16_t bibd_primeB =1399;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==1723))
#define va  553
#define ka  24
#define vb  1723
#define kb  42
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[42]={
0, 1, 61, 135, 173, 190, 197, 219, 244, 276,
297, 310, 320, 340, 390, 471, 489, 508, 566, 581,
597, 648, 653, 736, 775, 801, 834, 869, 1107, 1135,
1149, 1176, 1239, 1251, 1287, 1291, 1336, 1490, 1493, 1499,
1501, 1618};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =1723;
	#define ActiveSlotsB  42
	int16_t bibd_primeB =1723;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==1893))
#define va  553
#define ka  24
#define vb  1893
#define kb  44
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[44]={
0, 1, 8, 45, 54, 115, 190, 221, 231, 247,
302, 387, 426, 521, 535, 556, 632, 664, 790, 913,
1040, 1087, 1114, 1117, 1139, 1150, 1173, 1179, 1239, 1252,
1267, 1357, 1435, 1437, 1455, 1519, 1538, 1586, 1610, 1679,
1730, 1747, 1851, 1889};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =1893;
	#define ActiveSlotsB  44
	int16_t bibd_primeB =1889;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==2257))
#define va  553
#define ka  24
#define vb  2257
#define kb  48
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[48]={
0, 1, 39, 60, 115, 141, 146, 198, 268, 290,
303, 330, 337, 348, 378, 381, 398, 502, 504, 568,
763, 828, 837, 847, 853, 940, 989, 1013, 1056, 1109,
1181, 1237, 1260, 1314, 1408, 1423, 1587, 1601, 1629, 1633,
1718, 1730, 1941, 2004, 2012, 2041, 2123, 2159};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =2257;
	#define ActiveSlotsB  48
	int16_t bibd_primeB =2251;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==2451))
#define va  553
#define ka  24
#define vb  2451
#define kb  50
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[50]={
0, 1, 22, 26, 36, 42, 110, 342, 435, 484,
518, 535, 562, 639, 685, 740, 752, 842, 923, 988,
1003, 1012, 1042, 1231, 1289, 1307, 1380, 1418, 1513, 1544,
1676, 1709, 1762, 1770, 1867, 1878, 1907, 1930, 2055, 2092,
2137, 2140, 2142, 2199, 2206, 2278, 2321, 2334, 2353, 2381};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =2451;
	#define ActiveSlotsB  50
	int16_t bibd_primeB =2447;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==2863))
#define va  553
#define ka  24
#define vb  2863
#define kb  54
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[54]={
0, 1, 18, 90, 101, 354, 429, 490, 514, 612,
620, 622, 671, 731, 753, 797, 809, 849, 911, 1054,
1074, 1083, 1087, 1171, 1178, 1199, 1236, 1306, 1387, 1458,
1622, 1637, 1669, 1672, 1714, 1837, 1843, 1868, 1873, 1916,
1942, 1983, 2010, 2029, 2063, 2086, 2149, 2213, 2347, 2361,
2516, 2555, 2571, 2609};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =2863;
	#define ActiveSlotsB  54
	int16_t bibd_primeB =2861;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==3541))
#define va  553
#define ka  24
#define vb  3541
#define kb  60
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[60]={
0, 1, 28, 268, 363, 371, 681, 702, 761, 799,
848, 873, 980, 1025, 1030, 1059, 1149, 1160, 1184, 1214,
1253, 1260, 1262, 1275, 1345, 1426, 1489, 1508, 1566, 1810,
1863, 1866, 1883, 1899, 1930, 2016, 2028, 2071, 2137, 2155,
2350, 2354, 2425, 2497, 2541, 2593, 2603, 2635, 2793, 2844,
2850, 2949, 2972, 2986, 3109, 3169, 3279, 3367, 3393, 3501};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =3541;
	#define ActiveSlotsB  60
	int16_t bibd_primeB =3541;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==3783))
#define va  553
#define ka  24
#define vb  3783
#define kb  62
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[62]={
0, 1, 73, 159, 205, 343, 427, 507, 549, 568,
734, 791, 845, 876, 879, 884, 981, 1010, 1058, 1108,
1164, 1170, 1177, 1179, 1197, 1207, 1260, 1307, 1469, 1572,
1589, 1647, 1663, 1707, 1742, 1820, 1824, 1996, 2064, 2257,
2401, 2493, 2515, 2602, 2616, 2640, 2661, 2710, 2861, 2873,
3081, 3107, 3148, 3214, 3362, 3385, 3417, 3592, 3603, 3628,
3668, 3732};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =3783;
	#define ActiveSlotsB  62
	int16_t bibd_primeB =3779;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==4161))
#define va  553
#define ka  24
#define vb  4161
#define kb  65
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[65]={
0, 1, 80, 114, 116, 199, 274, 342, 346, 512,
662, 733, 798, 806, 955, 1138, 1273, 1299, 1377, 1438,
1580, 1623, 1689, 1710, 1726, 1815, 1827, 1903, 1933, 1995,
2015, 2024, 2123, 2390, 2501, 2660, 2673, 2712, 2835, 2868,
2931, 2937, 2975, 2990, 3021, 3031, 3085, 3274, 3360, 3441,
3489, 3492, 3511, 3534, 3539, 3566, 3744, 3768, 3779, 3793,
3913, 3920, 3980, 4104, 4144};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =4161;
	#define ActiveSlotsB  65
	int16_t bibd_primeB =4159;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==4557))
#define va  553
#define ka  24
#define vb  4557
#define kb  68
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[68]={
0, 1, 11, 45, 66, 96, 143, 222, 327, 416,
509, 524, 581, 631, 705, 722, 855, 860, 888, 1078,
1107, 1402, 1461, 1470, 1501, 1513, 1539, 1588, 1629, 1700,
1702, 1739, 1764, 1831, 1873, 2019, 2077, 2231, 2294, 2376,
2501, 2571, 2854, 2881, 2967, 2975, 3021, 3028, 3314, 3349,
3397, 3429, 3639, 3657, 3663, 3848, 3954, 3968, 4056, 4112,
4116, 4132, 4213, 4216, 4235, 4352, 4365, 4388};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =4557;
	#define ActiveSlotsB  68
	int16_t bibd_primeB =4549;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==5113))
#define va  553
#define ka  24
#define vb  5113
#define kb  72
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[72]={
0, 1, 204, 225, 345, 351, 392, 493, 609, 677,
700, 722, 762, 872, 931, 983, 1143, 1158, 1314, 1566,
1570, 1666, 1715, 1768, 1908, 2025, 2155, 2385, 2439, 2475,
2482, 2508, 2568, 2600, 2603, 2667, 2754, 2773, 2782, 2800,
2811, 2848, 3070, 3087, 3101, 3264, 3320, 3336, 3455, 3463,
3526, 3587, 3629, 3631, 3767, 3865, 3904, 3977, 3987, 4011,
4061, 4066, 4091, 4142, 4200, 4455, 4537, 4607, 4695, 4715,
5036, 5101};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =5113;
	#define ActiveSlotsB  72
	int16_t bibd_primeB =5113;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==5403))
#define va  553
#define ka  24
#define vb  5403
#define kb  74
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[74]={
0, 1, 48, 83, 334, 385, 484, 558, 591, 678,
796, 1043, 1046, 1087, 1143, 1165, 1331, 1440, 1469, 1483,
1489, 1667, 1703, 1943, 1995, 2019, 2058, 2244, 2301, 2303,
2378, 2399, 2409, 2424, 2436, 2490, 2540, 2563, 2657, 2689,
2817, 2857, 2885, 2970, 2987, 3032, 3116, 3127, 3146, 3180,
3188, 3206, 3357, 3580, 3835, 3851, 3996, 4107, 4199, 4208,
4212, 4279, 4416, 4421, 4486, 4611, 4618, 4721, 4884, 4953,
5136, 5222, 5260, 5315};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =5403;
	#define ActiveSlotsB  74
	int16_t bibd_primeB =5399;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==6321))
#define va  553
#define ka  24
#define vb  6321
#define kb  80
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[80]={
0, 1, 105, 116, 161, 170, 587, 655, 727, 981,
1118, 1135, 1213, 1229, 1335, 1401, 1405, 1419, 1478, 1480,
1642, 1664, 1766, 1853, 1878, 1910, 1945, 1995, 2008, 2189,
2220, 2280, 2317, 2398, 2405, 2413, 2451, 2544, 2572, 2578,
2608, 2791, 2993, 3019, 3048, 3249, 3301, 3352, 3375, 3527,
3665, 3677, 3864, 3971, 4011, 4244, 4380, 4385, 4494, 4533,
4543, 4576, 4623, 4699, 4881, 4939, 5161, 5232, 5280, 5381,
5400, 5532, 5730, 6001, 6004, 6025, 6045, 6087, 6114, 6222};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =6321;
	#define ActiveSlotsB  80
	int16_t bibd_primeB =6317;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==6643))
#define va  553
#define ka  24
#define vb  6643
#define kb  82
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[82]={
0, 1, 21, 88, 116, 196, 319, 322, 357, 382,
500, 519, 583, 636, 654, 667, 669, 907, 1175, 1191,
1276, 1285, 1390, 1465, 1647, 1655, 1819, 1876, 2064, 2068,
2108, 2115, 2227, 2281, 2320, 2326, 2331, 2505, 2657, 2796,
2813, 2885, 2943, 3040, 3089, 3162, 3185, 3231, 3287, 3369,
3537, 3783, 3844, 3892, 3914, 4147, 4174, 4184, 4287, 4361,
4489, 4714, 4874, 5025, 5208, 5260, 5284, 5352, 5384, 5418,
5627, 5717, 5776, 5947, 6117, 6198, 6228, 6511, 6523, 6537,
6566, 6602};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =6643;
	#define ActiveSlotsB  82
	int16_t bibd_primeB =6637;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==6973))
#define va  553
#define ka  24
#define vb  6973
#define kb  84
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[84]={
0, 1, 12, 87, 118, 199, 271, 295, 329, 372,
405, 442, 457, 573, 627, 724, 730, 747, 787, 1027,
1110, 1138, 1275, 1554, 1584, 1625, 1900, 1991, 2023, 2257,
2459, 2508, 2592, 2601, 2654, 2700, 2727, 2792, 2848, 2907,
3271, 3371, 3415, 3437, 3591, 3598, 3633, 3848, 4011, 4029,
4093, 4232, 4257, 4495, 4533, 4543, 4593, 4622, 4683, 4832,
5014, 5146, 5226, 5321, 5335, 5552, 5688, 5704, 5708, 5782,
5833, 5901, 5937, 5940, 6042, 6201, 6209, 6214, 6626, 6681,
6748, 6750, 6769, 6795};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =6973;
	#define ActiveSlotsB  84
	int16_t bibd_primeB =6971;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

#elif ((algorithmNum==6) && (algorithmDC==8011))
#define va  553
#define ka  24
#define vb  8011
#define kb  90
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[90]={
0, 1, 32, 125, 160, 246, 734, 764, 1143, 1269,
1328, 1443, 1451, 1532, 1549, 1604, 1694, 1758, 1995, 2095,
2230, 2339, 2360, 2387, 2406, 2447, 2642, 2644, 2681, 2756,
2914, 2929, 2967, 3117, 3161, 3183, 3187, 3197, 3260, 3265,
3316, 3587, 3620, 3632, 3645, 3694, 3797, 4064, 4244, 4251,
4262, 4291, 4345, 4437, 4440, 4557, 4659, 4701, 5013, 5033,
5184, 5272, 5351, 5408, 5473, 5591, 5600, 5696, 5772, 5806,
6013, 6192, 6397, 6466, 6482, 6825, 6967, 6995, 7038, 7151,
7291, 7315, 7481, 7533, 7649, 7672, 7733, 7783, 7874, 7880};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =8011;
	#define ActiveSlotsB  90
	int16_t bibd_primeB =8011;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1
#elif ((algorithmNum==6) && (algorithmDC==9507))
#define va  553
#define ka  24
#define vb  9507
#define kb  98
#define lamda 1
uint32_t BA[24]={
0, 1, 20, 107, 119, 125, 162, 167, 189, 233,
246, 344, 369, 379, 390, 405, 419, 457, 464, 473,
481, 520, 522, 550};
uint32_t BB[98]={
0, 1, 41, 253, 365, 538, 631, 646, 702, 787,
809, 891, 958, 1242, 1318, 1382, 1401, 1424, 1463, 1710,
1757, 1895, 2205, 2216, 2374, 2733, 3104, 3195, 3320, 3423,
3687, 3804, 3821, 3824, 3870, 4138, 4150, 4239, 4372, 4382,
4518, 4547, 4615, 4673, 4717, 4724, 4726, 4801, 4921, 5021,
5131, 5323, 5344, 5382, 5442, 5474, 5731, 6006, 6063, 6288,
6410, 6462, 6475, 6489, 6505, 6604, 6610, 6628, 6665, 6673,
6698, 6900, 6935, 7173, 7317, 7471, 7543, 7700, 7748, 7774,
7861, 8013, 8041, 8137, 8255, 8328, 8333, 8495, 8683, 8719,
8769, 8773, 8988, 9019, 9135, 9169, 9249, 9376};
	uint32_t TotalSlotsA =553;
	#define ActiveSlotsA  24
	int16_t bibd_primeA =547;
	uint32_t TotalSlotsB =9507;
	#define ActiveSlotsB  98
	int16_t bibd_primeB =9497;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1
#else
#define v2 1
#define k2 1
#define lamda2 1
uint16_t B2[15]={3,6,7,12,14,24,27,28,33,35,66,69,70,75,77};
uint16_t bibd_prime = 5;

//	int16_t bibd_primeA =89;
//	int16_t bibd_primeB =89;
#endif

/*
// 5% of duty cycle of proposed BIBD
#if ((v2==511) && (k2==27) && (lamda2==1))
uint16_t B2[27]={1,2,4,8,16,32,37,55,64,74,75,77,81,89,105,110,128,137,220,221,223,227,235,251,256,274,283};
//uint16_t B[27]={0,1,3,7,15,31,36,54,63,73,74,76,80,88,104,109,127,136,219,220,222,226,234,250,255,273,282};
uint16_t bibd_prime = 509;
#endif

// 1% of duty cycle of proposed BIBD
#if ( (v2==10431) && (k2==112) && (lamda2==1))
uint16_t B2[112]={1,6,7,9,19,38,42,49,115,120,121,123,133,152,156,163,172,177,178,180,190,209,213,220,571,
								576,577,579,589,608,612,619,1483,1488,1489,1491,1501,1520,1524,1531,2224,2229,2230,2232,
								2242,2261,2265,2272,2452,2457,2458,2460,2470,2489,2493,2500,3478,3483,3484,3486,3496,3515,
								3519,3526,6214,6219,6220,6222,6232,6251,6255,6262,6898,6903,6904,6906,6916,6935,6939,6946,
								7411,7416,7417,7419,7429,7448,7452,7459,7753,7758,7759,7761,7771,7790,7794,7801,7981,7986,7987,
								7989,7999,8018,8022,8029,8836,8841,8842,8844,8854,8873,8877,8884};
uint16_t bibd_prime = 10429;
#endif
*/

/********************************** Combinatorial Algorithm **********************/
// Initialization
#if ((algorithmNum==2) && (algorithmDC==40) )
	#define v 7
	#define k 3
	#define lamda 1
	uint16_t B[3]={0,1,3};
	uint16_t TotalSlots = 7;
	#define ActiveSlots 3
/*
(13,4,1)
*/
#elif ((algorithmNum==2) && (algorithmDC==30) )
#define v  13
#define k  4
#define lamda 1
uint32_t B[4]={
0, 1, 3, 9};
	uint32_t TotalSlots =13;
	#define ActiveSlots  4
/*
(21,5,1)
*/
#elif ((algorithmNum==2) && (algorithmDC==24) )
#define v  21
#define k  5
#define lamda 1
uint32_t B[5]={
3, 6, 7, 12, 14};
	uint32_t TotalSlots =21;
	#define ActiveSlots  5
/*
(31,6,1)
*/
#elif ((algorithmNum==2) && (algorithmDC==19) )
#define v  31
#define k  6
#define lamda 1
uint32_t B[6]={
1, 5, 11, 24, 25, 27};
	uint32_t TotalSlots =31;
	#define ActiveSlots  6

#elif ((algorithmNum==2) && (algorithmDC==9))
#define v  133
#define k  12
#define lamda 1
uint32_t B[12]={
1, 11, 16, 40, 41, 43, 52, 60, 74, 78,
121, 128};
	uint32_t TotalSlots =133;
	#define ActiveSlots  12


#elif ((algorithmNum==2) && (algorithmDC==14) )
	#define v 57
	#define k 8
	#define lamda 1
	uint16_t B[8]={1,6,7,9,19,38,42,49};
	uint16_t TotalSlots = 57;
	#define ActiveSlots 8

#elif ((algorithmNum==2) && (algorithmDC==8) )
	#define v 183
	#define k 14
	#define lamda 1
	uint16_t B[14]={1,3,4,11,27,40,44,62,110,122,131,137,142,156};
	uint16_t TotalSlots = 183;
	#define ActiveSlots 14

#elif ((algorithmNum==2) && (algorithmDC==10) )
	#define v 91
	#define k 10
	#define lamda 1
	uint16_t B[10]={0,1,3,9,27,49,56,61,77,81};
	uint16_t TotalSlots = 91;
	#define ActiveSlots 10
/*
(273,17,1)
*/
#elif ((algorithmNum==2) && (algorithmDC==6))
#define v  273
#define k  17
#define lamda 1
uint32_t B[17]={
1, 2, 4, 8, 16, 32, 64, 91, 117, 128,
137, 182, 195, 205, 234, 239, 256};
	uint32_t TotalSlots =273;
	#define ActiveSlots  17
#elif ((algorithmNum==2) && (algorithmDC==5) )
#define v 381
#define k 20
#define lamda 1
uint16_t B[20]={0,1,19,28,96,118,151,153,176,202,240,254,290,296,300,307,337,361,366,369};
	uint16_t TotalSlots = 381;
	#define ActiveSlots 20
/*
(553,24,1)
*/
#elif ((algorithmNum==2) && (algorithmDC==4))
#define v  553
#define k  24
#define lamda 1
uint32_t B[24]={
1, 23, 52, 90, 108, 120, 152, 163, 173, 178,
186, 223, 232, 272, 359, 407, 411, 431, 438, 512,
513, 515, 529, 548};
	uint32_t TotalSlots =553;
	#define ActiveSlots  24

#elif ((algorithmNum==2) && (algorithmDC==2) )
#define v 2451
#define k 50
#define lamda 1
uint16_t B[50]={0,1,7,49,170,223,267,343,348,382,491,508,688,750,828,886,
							894,977,986,989,1105,1123,1177,1190,1300,1304,1356,1561,1634,
							1716,1745,1747,1775,1849,1869,1892,1937,2000,2021,2101,2139,
							2171,2208,2269,2346,2365,2401,2411,2425,2436};
	uint16_t TotalSlots = 2451;
	#define ActiveSlots 50

#elif ((algorithmNum==2) && (algorithmDC==1) )
#define v 9507
#define k 98
#define lamda 1
uint16_t B[98]={1,13,68,97,137,360,568,611,657,670,696,717,833,889,963,1070,1071,1073,1107,1122,
                  1261,1378,1402,1503,1984,1989,2054,2163,2225,2301,2308,2670,2748,2793,2802,2825,
                  2843,2896,3000,3008,3169,3186,3211,3527,3782,3929,4128,4257,4536,4594,4725,4745,
	                4818,5209,5215,5253,5367,5371,5588,5598,5670,5790,5847,6034,6113,6124,6246,6338,
	                6399,6426,6566,6596,6671,6687,6921,7221,7243,7561,7609,7829,7848,7862,7948,8091,
		              8233,8296,8360,8560,8720,8817,8930,9011,9098,9126,9224,9374,9409,9440
		               };
	uint16_t TotalSlots = 9507;
	#define ActiveSlots 98
#endif
/********************************** proposed BIBD Algorithm **********************/

#if ((algorithmNum==1) && (algorithmDC==40) )
	#define v 7
	#define k 3
	#define lamda 1
	uint16_t B[3]={0,1,3};
	uint16_t TotalSlots = 7;
	#define ActiveSlots 3
/*
(7,3,1) + (3,2,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==28) )
#define v  21
#define k  6
#define lamda 1
uint32_t B[6]={
0, 1, 3, 4, 9, 10};
	uint32_t TotalSlots =21;
	#define ActiveSlots  6
/*
(7,3,1) + (7,3,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==18) )
#define v  49
#define k  9
#define lamda 1
uint32_t B[9]={
0, 1, 3, 7, 8, 10, 21, 22, 24};
	uint32_t TotalSlots =49;
	#define ActiveSlots  9

#elif ((algorithmNum==1) && (algorithmDC==9))
#define v  133
#define k  12
#define lamda 1
uint32_t B[12]={
1, 11, 16, 40, 41, 43, 52, 60, 74, 78,
121, 128};
	uint32_t TotalSlots =133;
	#define ActiveSlots  12

/*
(21,5,1) + (3,2,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==15) )
#define v  63
#define k  10
#define lamda 1
uint32_t B[10]={
9, 10, 18, 19, 21, 22, 36, 37, 42, 43};
	uint32_t TotalSlots =63;
	#define ActiveSlots  10
#elif ((algorithmNum==1) && ((algorithmDC==10) || (A_DC==10) || (B_DC==10)))
	#define v 147
	#define k 15
	#define lamda 1
	uint16_t B[15]={3,6,7,12,14,24,27,28,33,35,66,69,70,75,77};
	uint16_t BA[15]={3,6,7,12,14,24,27,28,33,35,66,69,70,75,77};
	uint16_t BB[15]={3,6,7,12,14,24,27,28,33,35,66,69,70,75,77};
	uint16_t TotalSlots = 147;
	#define ActiveSlots 15
	
#elif ((algorithmNum==1) && (algorithmDC==120))
#define v  147
#define k  15
#define lamda 1
uint16_t B[15]={
21, 22, 24, 42, 43, 45, 49, 50, 52, 84,
85, 87, 98, 99, 101};
	uint16_t TotalSlots =147;
	#define ActiveSlots  15

/*
(91,10,1) + (3,2,1)
DC: 7.3%
*/
#elif ((algorithmNum==1) && (algorithmDC==7) )
#define v  273
#define k  20
#define lamda 1
uint32_t B[20]={
0, 1, 3, 4, 9, 10, 27, 28, 81, 82,
147, 148, 168, 169, 183, 184, 231, 232, 243, 244};
	uint32_t TotalSlots =273;
	#define ActiveSlots  20
/*
(183,14,1) + (3,2,1)
DC:5.1%
*/
#elif ((algorithmNum==1) && (algorithmDC==152) )
#define v  549
#define k  28
#define lamda 1
uint32_t B[28]={
0, 1, 6, 7, 9, 10, 30, 31, 78, 79,
117, 118, 129, 130, 183, 184, 327, 328, 363, 364,
390, 391, 408, 409, 423, 424, 465, 466};
	uint32_t TotalSlots =549;
	#define ActiveSlots  28

#elif ((algorithmNum==1) && (algorithmDC==5) )
#define v 511
#define k 27
#define lamda 1
uint16_t B[27]={1,2,4,8,16,32,37,55,64,74,75,77,81,89,105,110,128,137,220,221,223,227,235,251,256,274,283};
	uint16_t TotalSlots = 511;
	#define ActiveSlots 27

#elif ((algorithmNum==1) && (algorithmDC==2) )
#define v 2821
#define k 60
#define lamda 1
uint16_t B[60]={0,4,10,23,24,26,31,35,41,54,55,57,93,97,103,116,117,119,
								279,283,289,302,303,305,837,841,847,860,861,863,1519,1523,
								1529,1542,1543,1545,1736,1740,1746,1759,1760,1762,1891,1895,
								1901,1914,1915,1917,2387,2391,2397,2410,2411,2413,2511,2515,
								2521,2534,2535,2537};
	uint16_t TotalSlots = 2821;
	#define ActiveSlots 60
/*
//(7,3,1) + (381,20,1)
#elif ((algorithmNum==1) && (algorithmDC==2) )
#define v  2667
#define k  60
#define lamda 1
uint16_t B[60]={
0, 1, 19, 28, 96, 118, 151, 153, 176, 202,
240, 254, 290, 296, 300, 307, 337, 361, 366, 369,
381, 382, 400, 409, 477, 499, 532, 534, 557, 583,
621, 635, 671, 677, 681, 688, 718, 742, 747, 750,
1143, 1144, 1162, 1171, 1239, 1261, 1294, 1296, 1319, 1345,
1383, 1397, 1433, 1439, 1443, 1450, 1480, 1504, 1509, 1512};
	uint16_t TotalSlots =2667;
	#define ActiveSlots  60
//(13,4,1) + (183,14,1)
#elif ((algorithmNum==1) && (algorithmDC==2) )
#define v  2379
#define k  56
#define lamda 1
uint16_t B[56]={
0, 2, 3, 10, 26, 39, 43, 61, 109, 121,
130, 136, 141, 155, 183, 185, 186, 193, 209, 222,
226, 244, 292, 304, 313, 319, 324, 338, 549, 551,
552, 559, 575, 588, 592, 610, 658, 670, 679, 685,
690, 704, 1647, 1649, 1650, 1657, 1673, 1686, 1690, 1708,
1756, 1768, 1777, 1783, 1788, 1802};
	uint16_t TotalSlots =2379;
	#define ActiveSlots  56
//(21,5,1) + (133,12,1)
#elif ((algorithmNum==1) && (algorithmDC==2) )
#define v  2793
#define k  60
#define lamda 1
uint16_t B[60]={
400, 410, 415, 439, 440, 442, 451, 459, 473, 477,
520, 527, 799, 809, 814, 838, 839, 841, 850, 858,
872, 876, 919, 926, 932, 942, 947, 971, 972, 974,
983, 991, 1005, 1009, 1052, 1059, 1597, 1607, 1612, 1636,
1637, 1639, 1648, 1656, 1670, 1674, 1717, 1724, 1863, 1873,
1878, 1902, 1903, 1905, 1914, 1922, 1936, 1940, 1983, 1990};
	uint16_t TotalSlots =2793;
	#define ActiveSlots  60
//(31,6,1) + (91,10,1)
#elif ((algorithmNum==1) && (algorithmDC==2) )
#define v  2821
#define k  60
#define lamda 1
uint16_t B[60]={
91, 92, 94, 100, 118, 140, 147, 152, 168, 172,
455, 456, 458, 464, 482, 504, 511, 516, 532, 536,
1001, 1002, 1004, 1010, 1028, 1050, 1057, 1062, 1078, 1082,
2184, 2185, 2187, 2193, 2211, 2233, 2240, 2245, 2261, 2265,
2275, 2276, 2278, 2284, 2302, 2324, 2331, 2336, 2352, 2356,
2457, 2458, 2460, 2466, 2484, 2506, 2513, 2518, 2534, 2538};
	uint16_t TotalSlots =2821;
	#define ActiveSlots  60
*/
//(57,8,1) + (183,14,1)
#elif ((algorithmNum==1) && (algorithmDC==1) )
#define v  10431
#define k  112
#define lamda 1
uint16_t B[112]={
1, 6, 7, 9, 19, 38, 42, 49, 115, 120,
121, 123, 133, 152, 156, 163, 172, 177, 178, 180,
190, 209, 213, 220, 571, 576, 577, 579, 589, 608,
612, 619, 1483, 1488, 1489, 1491, 1501, 1520, 1524, 1531,
2224, 2229, 2230, 2232, 2242, 2261, 2265, 2272, 2452, 2457,
2458, 2460, 2470, 2489, 2493, 2500, 3478, 3483, 3484, 3486,
3496, 3515, 3519, 3526, 6214, 6219, 6220, 6222, 6232, 6251,
6255, 6262, 6898, 6903, 6904, 6906, 6916, 6935, 6939, 6946,
7411, 7416, 7417, 7419, 7429, 7448, 7452, 7459, 7753, 7758,
7759, 7761, 7771, 7790, 7794, 7801, 8038, 8043, 8044, 8046,
8056, 8075, 8079, 8086, 8836, 8841, 8842, 8844, 8854, 8873,
8877, 8884};
	uint16_t TotalSlots =10431;
	#define ActiveSlots 112
//(183,14,1) + (57,8,1)
#elif ((algorithmNum==1) && (algorithmDC==201) )
#define v  10431
#define k  112
#define lamda 1
uint32_t B[112]={
183, 185, 186, 193, 209, 222, 226, 244, 292, 304,
313, 319, 324, 338, 1098, 1100, 1101, 1108, 1124, 1137,
1141, 1159, 1207, 1219, 1228, 1234, 1239, 1253, 1281, 1283,
1284, 1291, 1307, 1320, 1324, 1342, 1390, 1402, 1411, 1417,
1422, 1436, 1647, 1649, 1650, 1657, 1673, 1686, 1690, 1708,
1756, 1768, 1777, 1783, 1788, 1802, 3477, 3479, 3480, 3487,
3503, 3516, 3520, 3538, 3586, 3598, 3607, 3613, 3618, 3632,
6954, 6956, 6957, 6964, 6980, 6993, 6997, 7015, 7063, 7075,
7084, 7090, 7095, 7109, 7686, 7688, 7689, 7696, 7712, 7725,
7729, 7747, 7795, 7807, 7816, 7822, 7827, 7841, 8967, 8969,
8970, 8977, 8993, 9006, 9010, 9028, 9076, 9088, 9097, 9103,
9108, 9122};
	uint32_t TotalSlots =10431;
	#define ActiveSlots  112
//*/
/*
// (13, 183, 7) 1% duty cycle
#elif ((algorithmNum==1) && (algorithmDC==1) )
#define v  16653
#define k  168
#define lamda 1
uint32_t B[168]={
0, 1, 3, 14, 15, 17, 21, 22, 24, 70,
71, 73, 182, 183, 185, 273, 274, 276, 301, 302,
304, 427, 428, 430, 763, 764, 766, 847, 848, 850,
910, 911, 913, 952, 953, 955, 987, 988, 990, 1085,
1086, 1088, 1281, 1282, 1284, 1295, 1296, 1298, 1302, 1303,
1305, 1351, 1352, 1354, 1463, 1464, 1466, 1554, 1555, 1557,
1582, 1583, 1585, 1708, 1709, 1711, 2044, 2045, 2047, 2128,
2129, 2131, 2191, 2192, 2194, 2233, 2234, 2236, 2268, 2269,
2271, 2366, 2367, 2369, 3843, 3844, 3846, 3857, 3858, 3860,
3864, 3865, 3867, 3913, 3914, 3916, 4025, 4026, 4028, 4116,
4117, 4119, 4144, 4145, 4147, 4270, 4271, 4273, 4606, 4607,
4609, 4690, 4691, 4693, 4753, 4754, 4756, 4795, 4796, 4798,
4830, 4831, 4833, 4928, 4929, 4931, 11529, 11530, 11532, 11543,
11544, 11546, 11550, 11551, 11553, 11599, 11600, 11602, 11711, 11712,
11714, 11802, 11803, 11805, 11830, 11831, 11833, 11956, 11957, 11959,
12292, 12293, 12295, 12376, 12377, 12379, 12439, 12440, 12442, 12481,
12482, 12484, 12516, 12517, 12519, 12614, 12615, 12617};
	uint32_t TotalSlots =16653;
	#define ActiveSlots  168

// (13, 31, 7, 7) 1% duty cycle
#elif ((algorithmNum==1) && (algorithmDC==1) )
#define v  19747
#define k  216
#define lamda 1
uint32_t B[216]={
49, 50, 52, 56, 57, 59, 70, 71, 73, 245,
246, 248, 252, 253, 255, 266, 267, 269, 539, 540,
542, 546, 547, 549, 560, 561, 563, 1176, 1177, 1179,
1183, 1184, 1186, 1197, 1198, 1200, 1225, 1226, 1228, 1232,
1233, 1235, 1246, 1247, 1249, 1323, 1324, 1326, 1330, 1331,
1333, 1344, 1345, 1347, 1568, 1569, 1571, 1575, 1576, 1578,
1589, 1590, 1592, 1764, 1765, 1767, 1771, 1772, 1774, 1785,
1786, 1788, 2058, 2059, 2061, 2065, 2066, 2068, 2079, 2080,
2082, 2695, 2696, 2698, 2702, 2703, 2705, 2716, 2717, 2719,
2744, 2745, 2747, 2751, 2752, 2754, 2765, 2766, 2768, 2842,
2843, 2845, 2849, 2850, 2852, 2863, 2864, 2866, 4606, 4607,
4609, 4613, 4614, 4616, 4627, 4628, 4630, 4802, 4803, 4805,
4809, 4810, 4812, 4823, 4824, 4826, 5096, 5097, 5099, 5103,
5104, 5106, 5117, 5118, 5120, 5733, 5734, 5736, 5740, 5741,
5743, 5754, 5755, 5757, 5782, 5783, 5785, 5789, 5790, 5792,
5803, 5804, 5806, 5880, 5881, 5883, 5887, 5888, 5890, 5901,
5902, 5904, 13720, 13721, 13723, 13727, 13728, 13730, 13741, 13742,
13744, 13916, 13917, 13919, 13923, 13924, 13926, 13937, 13938, 13940,
14210, 14211, 14213, 14217, 14218, 14220, 14231, 14232, 14234, 14847,
14848, 14850, 14854, 14855, 14857, 14868, 14869, 14871, 14896, 14897,
14899, 14903, 14904, 14906, 14917, 14918, 14920, 14994, 14995, 14997,
15001, 15002, 15004, 15015, 15016, 15018};
	uint32_t TotalSlots =19747;
	#define ActiveSlots  216

// (7, 13, 7, 7, 7) 1% duty cycle
#elif ((algorithmNum==1) && (algorithmDC==1) )
#define v  31213
#define k  324
#define lamda 1
uint32_t B[324]={
0, 1, 3, 7, 8, 10, 21, 22, 24, 49,
50, 52, 56, 57, 59, 70, 71, 73, 147, 148,
150, 154, 155, 157, 168, 169, 171, 343, 344, 346,
350, 351, 353, 364, 365, 367, 392, 393, 395, 399,
400, 402, 413, 414, 416, 490, 491, 493, 497, 498,
500, 511, 512, 514, 1029, 1030, 1032, 1036, 1037, 1039,
1050, 1051, 1053, 1078, 1079, 1081, 1085, 1086, 1088, 1099,
1100, 1102, 1176, 1177, 1179, 1183, 1184, 1186, 1197, 1198,
1200, 3087, 3088, 3090, 3094, 3095, 3097, 3108, 3109, 3111,
3136, 3137, 3139, 3143, 3144, 3146, 3157, 3158, 3160, 3234,
3235, 3237, 3241, 3242, 3244, 3255, 3256, 3258, 4459, 4460,
4462, 4466, 4467, 4469, 4480, 4481, 4483, 4508, 4509, 4511,
4515, 4516, 4518, 4529, 4530, 4532, 4606, 4607, 4609, 4613,
4614, 4616, 4627, 4628, 4630, 4802, 4803, 4805, 4809, 4810,
4812, 4823, 4824, 4826, 4851, 4852, 4854, 4858, 4859, 4861,
4872, 4873, 4875, 4949, 4950, 4952, 4956, 4957, 4959, 4970,
4971, 4973, 5488, 5489, 5491, 5495, 5496, 5498, 5509, 5510,
5512, 5537, 5538, 5540, 5544, 5545, 5547, 5558, 5559, 5561,
5635, 5636, 5638, 5642, 5643, 5645, 5656, 5657, 5659, 7546,
7547, 7549, 7553, 7554, 7556, 7567, 7568, 7570, 7595, 7596,
7598, 7602, 7603, 7605, 7616, 7617, 7619, 7693, 7694, 7696,
7700, 7701, 7703, 7714, 7715, 7717, 13377, 13378, 13380, 13384,
13385, 13387, 13398, 13399, 13401, 13426, 13427, 13429, 13433, 13434,
13436, 13447, 13448, 13450, 13524, 13525, 13527, 13531, 13532, 13534,
13545, 13546, 13548, 13720, 13721, 13723, 13727, 13728, 13730, 13741,
13742, 13744, 13769, 13770, 13772, 13776, 13777, 13779, 13790, 13791,
13793, 13867, 13868, 13870, 13874, 13875, 13877, 13888, 13889, 13891,
14406, 14407, 14409, 14413, 14414, 14416, 14427, 14428, 14430, 14455,
14456, 14458, 14462, 14463, 14465, 14476, 14477, 14479, 14553, 14554,
14556, 14560, 14561, 14563, 14574, 14575, 14577, 16464, 16465, 16467,
16471, 16472, 16474, 16485, 16486, 16488, 16513, 16514, 16516, 16520,
16521, 16523, 16534, 16535, 16537, 16611, 16612, 16614, 16618, 16619,
16621, 16632, 16633, 16635};
	uint32_t TotalSlots =31213;
	#define ActiveSlots  324

//(13,4,1) + (871,30,1)
*/
/*
#elif ((algorithmNum==1) && (algorithmDC==1) )
#define v  11323
#define k  120
#define lamda 1
uint16_t B[120]={
	13, 	14, 	16, 	22, 	312, 	313, 	315, 	321, 	377, 	378,
	380, 	386, 	897, 	898, 	900, 	906, 	1963, 	1964, 	1966, 	1972,
	2171, 	2172, 	2174, 	2180, 	2808, 	2809, 	2811, 	2817, 	3042, 	3043,
	3045, 	3051, 	3367, 	3368, 	3370, 	3376, 	3419, 	3420, 	3422, 	3428,
	3835, 	3836, 	3838, 	3844, 	4173, 	4174, 	4176, 	4182, 	4277, 	4278,
	4280, 	4286, 	5382, 	5383, 	5385, 	5391, 	6344, 	6345, 	6347, 	6353,
	7059, 	7060, 	7062, 	7068, 	7566, 	7567, 	7569, 	7575, 	7787, 	7788,
	7790, 	7796, 	8385, 	8386, 	8388, 	8394, 	8567, 	8568, 	8570, 	8576,
	8879, 	8880, 	8882, 	8888, 	8957, 	8958, 	8960, 	8966, 	9048, 	9049,
	9051, 	9057, 	9308, 	9309, 	9311, 	9317, 	9503, 	9504, 	9506, 	9512,
	10647, 	10648, 	10650, 	10656, 	10660, 	10661, 	10663, 	10669, 	10686, 	10687,
	10689, 	10695, 	10803, 	10804, 	10806, 	10812, 	10933, 	10934, 	10936, 	10942};
	uint16_t TotalSlots = 11323;
	#define ActiveSlots 120
#endif
*/
//(7,3,1) + (1893,44,1)
/*
#elif ((algorithmNum==1) && (algorithmDC==1) )
#define v  13251
#define k  132
#define lamda 1
uint16_t B[132]={
	0, 	1, 	3, 	7, 	8, 	10, 	35, 	36, 	38, 	301,
	302, 	304, 	1029, 	1030, 	1032, 	1148, 	1149, 	1151, 	1505, 	1506,
	1508, 	1988, 	1989, 	1991, 	2156, 	2157, 	2159, 	2492, 	2493, 	2495,
	2625, 	2626, 	2628, 	3073, 	3074, 	3076, 	3199, 	3200, 	3202, 	3213,
	3214, 	3216, 	3759, 	3760, 	3762, 	4389, 	4390, 	4392, 	4494, 	4495,
	4497, 	4585, 	4586, 	4588, 	5005, 	5006, 	5008, 	5047, 	5048, 	5050,
	5208, 	5209, 	5211, 	5285, 	5286, 	5288, 	5439, 	5440, 	5442, 	5460,
	5461, 	5463, 	5649, 	5650, 	5652, 	5978, 	5979, 	5981, 	6867, 	6868,
	6870, 	7728, 	7729, 	7731, 	8610, 	8611, 	8613, 	8834, 	8835, 	8837,
	9366, 	9367, 	9369, 	9513, 	9514, 	9516, 	9611, 	9612, 	9614, 	10276,
	10277, 	10279, 	10549, 	10550, 	10552, 	11144, 	11145, 	11147, 	11529, 	11530,
	11532, 	11641, 	11642, 	11644, 	11711, 	11712, 	11714, 	11928, 	11929, 	11931,
	12453, 	12454, 	12456, 	12880, 	12881, 	12883, 	12943, 	12944, 	12946, 	13202,
	13203, 	13205};
	uint16_t TotalSlots =13251;
	#define ActiveSlots 132
#endif
*/
/*
//(21,5,1) + (651,26,1)
#elif ((algorithmNum==1) && (algorithmDC==1) )
#define v  13671
#define k  130
#define lamda 1
uint16_t B[130]={
	3, 	6, 	7, 	12, 	14, 	87, 	90, 	91, 	96, 	98,
	507, 	510, 	511, 	516, 	518, 	864, 	867, 	868, 	873, 	875,
	1473, 	1476, 	1477, 	1482, 	1484, 	2229, 	2232, 	2233, 	2238, 	2240,
	2607, 	2610, 	2611, 	2616, 	2618, 	4203, 	4206, 	4207, 	4212, 	4214,
	4392, 	4395, 	4396, 	4401, 	4403, 	4539, 	4542, 	4543, 	4548, 	4550,
	7416, 	7419, 	7420, 	7425, 	7427, 	7437, 	7440, 	7441, 	7446, 	7448,
	7479, 	7482, 	7483, 	7488, 	7490, 	8109, 	8112, 	8113, 	8118, 	8120,
	8361, 	8364, 	8365, 	8370, 	8372, 	8634, 	8637, 	8638, 	8643, 	8645,
	9096, 	9099, 	9100, 	9105, 	9107, 	9684, 	9687, 	9688, 	9693, 	9695,
	9810, 	9813, 	9814, 	9819, 	9821, 	9915, 	9918, 	9919, 	9924, 	9926,
	10125, 	10128, 	10129, 	10134, 	10136, 	10923, 	10926, 	10927, 	10932, 	10934,
	11217, 	11220, 	11221, 	11226, 	11228, 	11763, 	11766, 	11767, 	11772, 	11774,
	13107, 	13110, 	13111, 	13116, 	13118, 	13275, 	13278, 	13279, 	13284, 	13286};
	uint16_t TotalSlots =13671;
	#define ActiveSlots 130
#endif
*/
#elif ((algorithmNum==1) && (algorithmDC==102) )
#define v  267397
#define k  540
#define lamda 1
uint32_t B[540]={
307, 308, 310, 337, 344, 357, 362, 383, 405, 424,
436, 440, 464, 496, 506, 529, 600, 606, 7368, 7369,
7371, 7398, 7405, 7418, 7423, 7444, 7466, 7485, 7497, 7501,
7525, 7557, 7567, 7590, 7661, 7667, 8903, 8904, 8906, 8933,
8940, 8953, 8958, 8979, 9001, 9020, 9032, 9036, 9060, 9092,
9102, 9125, 9196, 9202, 21183, 21184, 21186, 21213, 21220, 21233,
21238, 21259, 21281, 21300, 21312, 21316, 21340, 21372, 21382, 21405,
21476, 21482, 46357, 46358, 46360, 46387, 46394, 46407, 46412, 46433,
46455, 46474, 46486, 46490, 46514, 46546, 46556, 46579, 46650, 46656,
51269, 51270, 51272, 51299, 51306, 51319, 51324, 51345, 51367, 51386,
51398, 51402, 51426, 51458, 51468, 51491, 51562, 51568, 66312, 66313,
66315, 66342, 66349, 66362, 66367, 66388, 66410, 66429, 66441, 66445,
66469, 66501, 66511, 66534, 66605, 66611, 71838, 71839, 71841, 71868,
71875, 71888, 71893, 71914, 71936, 71955, 71967, 71971, 71995, 72027,
72037, 72060, 72131, 72137, 79513, 79514, 79516, 79543, 79550, 79563,
79568, 79589, 79611, 79630, 79642, 79646, 79670, 79702, 79712, 79735,
79806, 79812, 80741, 80742, 80744, 80771, 80778, 80791, 80796, 80817,
80839, 80858, 80870, 80874, 80898, 80930, 80940, 80963, 81034, 81040,
90565, 90566, 90568, 90595, 90602, 90615, 90620, 90641, 90663, 90682,
90694, 90698, 90722, 90754, 90764, 90787, 90858, 90864, 98547, 98548,
98550, 98577, 98584, 98597, 98602, 98623, 98645, 98664, 98676, 98680,
98704, 98736, 98746, 98769, 98840, 98846, 101003, 101004, 101006, 101033,
101040, 101053, 101058, 101079, 101101, 101120, 101132, 101136, 101160, 101192,
101202, 101225, 101296, 101302, 127098, 127099, 127101, 127128, 127135, 127148,
127153, 127174, 127196, 127215, 127227, 127231, 127255, 127287, 127297, 127320,
127391, 127397, 149816, 149817, 149819, 149846, 149853, 149866, 149871, 149892,
149914, 149933, 149945, 149949, 149973, 150005, 150015, 150038, 150109, 150115,
166701, 166702, 166704, 166731, 166738, 166751, 166756, 166777, 166799, 166818,
166830, 166834, 166858, 166890, 166900, 166923, 166994, 167000, 178674, 178675,
178677, 178704, 178711, 178724, 178729, 178750, 178772, 178791, 178803, 178807,
178831, 178863, 178873, 178896, 178967, 178973, 183893, 183894, 183896, 183923,
183930, 183943, 183948, 183969, 183991, 184010, 184022, 184026, 184050, 184082,
184092, 184115, 184186, 184192, 198015, 198016, 198018, 198045, 198052, 198065,
198070, 198091, 198113, 198132, 198144, 198148, 198172, 198204, 198214, 198237,
198308, 198314, 202313, 202314, 202316, 202343, 202350, 202363, 202368, 202389,
202411, 202430, 202442, 202446, 202470, 202502, 202512, 202535, 202606, 202612,
209681, 209682, 209684, 209711, 209718, 209731, 209736, 209757, 209779, 209798,
209810, 209814, 209838, 209870, 209880, 209903, 209974, 209980, 211523, 211524,
211526, 211553, 211560, 211573, 211578, 211599, 211621, 211640, 211652, 211656,
211680, 211712, 211722, 211745, 211816, 211822, 213672, 213673, 213675, 213702,
213709, 213722, 213727, 213748, 213770, 213789, 213801, 213805, 213829, 213861,
213871, 213894, 213965, 213971, 219812, 219813, 219815, 219842, 219849, 219862,
219867, 219888, 219910, 219929, 219941, 219945, 219969, 220001, 220011, 220034,
220105, 220111, 224417, 224418, 224420, 224447, 224454, 224467, 224472, 224493,
224515, 224534, 224546, 224550, 224574, 224606, 224616, 224639, 224710, 224716,
251433, 251434, 251436, 251463, 251470, 251483, 251488, 251509, 251531, 251550,
251562, 251566, 251590, 251622, 251632, 251655, 251726, 251732, 251740, 251741,
251743, 251770, 251777, 251790, 251795, 251816, 251838, 251857, 251869, 251873,
251897, 251929, 251939, 251962, 252033, 252039, 252354, 252355, 252357, 252384,
252391, 252404, 252409, 252430, 252452, 252471, 252483, 252487, 252511, 252543,
252553, 252576, 252647, 252653, 255117, 255118, 255120, 255147, 255154, 255167,
255172, 255193, 255215, 255234, 255246, 255250, 255274, 255306, 255316, 255339,
255410, 255416, 258187, 258188, 258190, 258217, 258224, 258237, 258242, 258263,
258285, 258304, 258316, 258320, 258344, 258376, 258386, 258409, 258480, 258486};
	uint32_t TotalSlots =267397;
	#define ActiveSlots  540

#elif ((algorithmNum==1) && (algorithmDC==1022) )
#define v  360297
#define k  750
#define lamda 1
uint32_t B[750]={
51471, 51472, 51474, 51478, 51479, 51481, 51520, 51521, 51523, 51814,
51815, 51817, 52661, 52662, 52664, 53032, 53033, 53035, 53340, 53341,
53343, 53872, 53873, 53875, 53907, 53908, 53910, 54145, 54146, 54148,
54908, 54909, 54911, 55027, 55028, 55030, 56287, 56288, 56290, 56721,
56722, 56724, 57267, 57268, 57270, 57673, 57674, 57676, 57729, 57730,
57732, 58310, 58311, 58313, 58373, 58374, 58376, 58394, 58395, 58397,
59206, 59207, 59209, 59332, 59333, 59335, 59710, 59711, 59713, 59801,
59802, 59804, 60571, 60572, 60574, 60599, 60600, 60602, 60963, 60964,
60966, 62398, 62399, 62401, 62909, 62910, 62912, 63483, 63484, 63486,
63686, 63687, 63689, 63700, 63701, 63703, 63896, 63897, 63899, 64414,
64415, 64417, 64554, 64555, 64557, 64715, 64716, 64718, 65030, 65031,
65033, 65471, 65472, 65474, 65618, 65619, 65621, 66178, 66179, 66181,
66444, 66445, 66447, 66668, 66669, 66671, 66927, 66928, 66930, 67354,
67355, 67357, 67893, 67894, 67896, 68026, 68027, 68029, 68278, 68279,
68281, 68348, 68349, 68351, 68446, 68447, 68449, 68523, 68524, 68526,
102942, 102943, 102945, 102949, 102950, 102952, 102991, 102992, 102994, 103285,
103286, 103288, 104132, 104133, 104135, 104503, 104504, 104506, 104811, 104812,
104814, 105343, 105344, 105346, 105378, 105379, 105381, 105616, 105617, 105619,
106379, 106380, 106382, 106498, 106499, 106501, 107758, 107759, 107761, 108192,
108193, 108195, 108738, 108739, 108741, 109144, 109145, 109147, 109200, 109201,
109203, 109781, 109782, 109784, 109844, 109845, 109847, 109865, 109866, 109868,
110677, 110678, 110680, 110803, 110804, 110806, 111181, 111182, 111184, 111272,
111273, 111275, 112042, 112043, 112045, 112070, 112071, 112073, 112434, 112435,
112437, 113869, 113870, 113872, 114380, 114381, 114383, 114954, 114955, 114957,
115157, 115158, 115160, 115171, 115172, 115174, 115367, 115368, 115370, 115885,
115886, 115888, 116025, 116026, 116028, 116186, 116187, 116189, 116501, 116502,
116504, 116942, 116943, 116945, 117089, 117090, 117092, 117649, 117650, 117652,
117915, 117916, 117918, 118139, 118140, 118142, 118398, 118399, 118401, 118825,
118826, 118828, 119364, 119365, 119367, 119497, 119498, 119500, 119749, 119750,
119752, 119819, 119820, 119822, 119917, 119918, 119920, 119994, 119995, 119997,
120099, 120100, 120102, 120106, 120107, 120109, 120148, 120149, 120151, 120442,
120443, 120445, 121289, 121290, 121292, 121660, 121661, 121663, 121968, 121969,
121971, 122500, 122501, 122503, 122535, 122536, 122538, 122773, 122774, 122776,
123536, 123537, 123539, 123655, 123656, 123658, 124915, 124916, 124918, 125349,
125350, 125352, 125895, 125896, 125898, 126301, 126302, 126304, 126357, 126358,
126360, 126938, 126939, 126941, 127001, 127002, 127004, 127022, 127023, 127025,
127834, 127835, 127837, 127960, 127961, 127963, 128338, 128339, 128341, 128429,
128430, 128432, 129199, 129200, 129202, 129227, 129228, 129230, 129591, 129592,
129594, 131026, 131027, 131029, 131537, 131538, 131540, 132111, 132112, 132114,
132314, 132315, 132317, 132328, 132329, 132331, 132524, 132525, 132527, 133042,
133043, 133045, 133182, 133183, 133185, 133343, 133344, 133346, 133658, 133659,
133661, 134099, 134100, 134102, 134246, 134247, 134249, 134806, 134807, 134809,
135072, 135073, 135075, 135296, 135297, 135299, 135555, 135556, 135558, 135982,
135983, 135985, 136521, 136522, 136524, 136654, 136655, 136657, 136906, 136907,
136909, 136976, 136977, 136979, 137074, 137075, 137077, 137151, 137152, 137154,
205884, 205885, 205887, 205891, 205892, 205894, 205933, 205934, 205936, 206227,
206228, 206230, 207074, 207075, 207077, 207445, 207446, 207448, 207753, 207754,
207756, 208285, 208286, 208288, 208320, 208321, 208323, 208558, 208559, 208561,
209321, 209322, 209324, 209440, 209441, 209443, 210700, 210701, 210703, 211134,
211135, 211137, 211680, 211681, 211683, 212086, 212087, 212089, 212142, 212143,
212145, 212723, 212724, 212726, 212786, 212787, 212789, 212807, 212808, 212810,
213619, 213620, 213622, 213745, 213746, 213748, 214123, 214124, 214126, 214214,
214215, 214217, 214984, 214985, 214987, 215012, 215013, 215015, 215376, 215377,
215379, 216811, 216812, 216814, 217322, 217323, 217325, 217896, 217897, 217899,
218099, 218100, 218102, 218113, 218114, 218116, 218309, 218310, 218312, 218827,
218828, 218830, 218967, 218968, 218970, 219128, 219129, 219131, 219443, 219444,
219446, 219884, 219885, 219887, 220031, 220032, 220034, 220591, 220592, 220594,
220857, 220858, 220860, 221081, 221082, 221084, 221340, 221341, 221343, 221767,
221768, 221770, 222306, 222307, 222309, 222439, 222440, 222442, 222691, 222692,
222694, 222761, 222762, 222764, 222859, 222860, 222862, 222936, 222937, 222939,
240198, 240199, 240201, 240205, 240206, 240208, 240247, 240248, 240250, 240541,
240542, 240544, 241388, 241389, 241391, 241759, 241760, 241762, 242067, 242068,
242070, 242599, 242600, 242602, 242634, 242635, 242637, 242872, 242873, 242875,
243635, 243636, 243638, 243754, 243755, 243757, 245014, 245015, 245017, 245448,
245449, 245451, 245994, 245995, 245997, 246400, 246401, 246403, 246456, 246457,
246459, 247037, 247038, 247040, 247100, 247101, 247103, 247121, 247122, 247124,
247933, 247934, 247936, 248059, 248060, 248062, 248437, 248438, 248440, 248528,
248529, 248531, 249298, 249299, 249301, 249326, 249327, 249329, 249690, 249691,
249693, 251125, 251126, 251128, 251636, 251637, 251639, 252210, 252211, 252213,
252413, 252414, 252416, 252427, 252428, 252430, 252623, 252624, 252626, 253141,
253142, 253144, 253281, 253282, 253284, 253442, 253443, 253445, 253757, 253758,
253760, 254198, 254199, 254201, 254345, 254346, 254348, 254905, 254906, 254908,
255171, 255172, 255174, 255395, 255396, 255398, 255654, 255655, 255657, 256081,
256082, 256084, 256620, 256621, 256623, 256753, 256754, 256756, 257005, 257006,
257008, 257075, 257076, 257078, 257173, 257174, 257176, 257250, 257251, 257253};
	uint32_t TotalSlots =360297;
	#define ActiveSlots  750

#elif ((algorithmNum==1) && (algorithmDC==105) )
#define v  43149
#define k  224
#define lamda 1
uint32_t B[224]={
1, 6, 7, 9, 19, 38, 42, 49, 58, 63,
64, 66, 76, 95, 99, 106, 172, 177, 178, 180,
190, 209, 213, 220, 514, 519, 520, 522, 532, 551,
555, 562, 1540, 1545, 1546, 1548, 1558, 1577, 1581, 1588,
2452, 2457, 2458, 2460, 2470, 2489, 2493, 2500, 4618, 4623,
4624, 4626, 4636, 4655, 4659, 4666, 7354, 7359, 7360, 7362,
7372, 7391, 7395, 7402, 9862, 9867, 9868, 9870, 9880, 9899,
9903, 9910, 12541, 12546, 12547, 12549, 12559, 12578, 12582, 12589,
13852, 13857, 13858, 13860, 13870, 13889, 13893, 13900, 17671, 17676,
17677, 17679, 17689, 17708, 17712, 17719, 22060, 22065, 22066, 22068,
22078, 22097, 22101, 22108, 23029, 23034, 23035, 23037, 23047, 23066,
23070, 23077, 23314, 23319, 23320, 23322, 23332, 23351, 23355, 23362,
25366, 25371, 25372, 25374, 25384, 25403, 25407, 25414, 25936, 25941,
25942, 25944, 25954, 25973, 25977, 25984, 26563, 26568, 26569, 26571,
26581, 26600, 26604, 26611, 26791, 26796, 26797, 26799, 26809, 26828,
26832, 26839, 28786, 28791, 28792, 28794, 28804, 28823, 28827, 28834,
29584, 29589, 29590, 29592, 29602, 29621, 29625, 29632, 32947, 32952,
32953, 32955, 32965, 32984, 32988, 32995, 34657, 34662, 34663, 34665,
34675, 34694, 34698, 34705, 36538, 36543, 36544, 36546, 36556, 36575,
36579, 36586, 37222, 37227, 37228, 37230, 37240, 37259, 37263, 37270,
37621, 37626, 37627, 37629, 37639, 37658, 37662, 37669, 38362, 38367,
38368, 38370, 38380, 38399, 38403, 38410, 41554, 41559, 41560, 41562,
41572, 41591, 41595, 41602};
	uint32_t TotalSlots =43149;
	#define ActiveSlots  224

#elif ((algorithmNum==1) && (algorithmDC==1052) )
#define v  59241
#define k  306
#define lamda 1
uint32_t B[306]={
1918, 1919, 1921, 1925, 1926, 1928, 1939, 1940, 1942, 1967,
1968, 1970, 2023, 2024, 2026, 2135, 2136, 2138, 2359, 2360,
2362, 2548, 2549, 2551, 2730, 2731, 2733, 2807, 2808, 2810,
2870, 2871, 2873, 3185, 3186, 3188, 3276, 3277, 3279, 3346,
3347, 3349, 3549, 3550, 3552, 3584, 3585, 3587, 3703, 3704,
3706, 9562, 9563, 9565, 9569, 9570, 9572, 9583, 9584, 9586,
9611, 9612, 9614, 9667, 9668, 9670, 9779, 9780, 9782, 10003,
10004, 10006, 10192, 10193, 10195, 10374, 10375, 10377, 10451, 10452,
10454, 10514, 10515, 10517, 10829, 10830, 10832, 10920, 10921, 10923,
10990, 10991, 10993, 11193, 11194, 11196, 11228, 11229, 11231, 11347,
11348, 11350, 21028, 21029, 21031, 21035, 21036, 21038, 21049, 21050,
21052, 21077, 21078, 21080, 21133, 21134, 21136, 21245, 21246, 21248,
21469, 21470, 21472, 21658, 21659, 21661, 21840, 21841, 21843, 21917,
21918, 21920, 21980, 21981, 21983, 22295, 22296, 22298, 22386, 22387,
22389, 22456, 22457, 22459, 22659, 22660, 22662, 22694, 22695, 22697,
22813, 22814, 22816, 45871, 45872, 45874, 45878, 45879, 45881, 45892,
45893, 45895, 45920, 45921, 45923, 45976, 45977, 45979, 46088, 46089,
46091, 46312, 46313, 46315, 46501, 46502, 46504, 46683, 46684, 46686,
46760, 46761, 46763, 46823, 46824, 46826, 47138, 47139, 47141, 47229,
47230, 47232, 47299, 47300, 47302, 47502, 47503, 47505, 47537, 47538,
47540, 47656, 47657, 47659, 47782, 47783, 47785, 47789, 47790, 47792,
47803, 47804, 47806, 47831, 47832, 47834, 47887, 47888, 47890, 47999,
48000, 48002, 48223, 48224, 48226, 48412, 48413, 48415, 48594, 48595,
48597, 48671, 48672, 48674, 48734, 48735, 48737, 49049, 49050, 49052,
49140, 49141, 49143, 49210, 49211, 49213, 49413, 49414, 49416, 49448,
49449, 49451, 49567, 49568, 49570, 51604, 51605, 51607, 51611, 51612,
51614, 51625, 51626, 51628, 51653, 51654, 51656, 51709, 51710, 51712,
51821, 51822, 51824, 52045, 52046, 52048, 52234, 52235, 52237, 52416,
52417, 52419, 52493, 52494, 52496, 52556, 52557, 52559, 52871, 52872,
52874, 52962, 52963, 52965, 53032, 53033, 53035, 53235, 53236, 53238,
53270, 53271, 53273, 53389, 53390, 53392};
	uint32_t TotalSlots =59241;
	#define ActiveSlots  306
/*
#elif ((algorithmNum==1) && (algorithmDC==107) )
#define v  23467
#define k  168
#define lamda 1
uint32_t B[168]={
1, 5, 11, 24, 25, 27, 32, 36, 42, 55,
56, 58, 94, 98, 104, 117, 118, 120, 280, 284,
290, 303, 304, 306, 838, 842, 848, 861, 862, 864,
1334, 1338, 1344, 1357, 1358, 1360, 2512, 2516, 2522, 2535,
2536, 2538, 4000, 4004, 4010, 4023, 4024, 4026, 5364, 5368,
5374, 5387, 5388, 5390, 6821, 6825, 6831, 6844, 6845, 6847,
7534, 7538, 7544, 7557, 7558, 7560, 9611, 9615, 9621, 9634,
9635, 9637, 11998, 12002, 12008, 12021, 12022, 12024, 12525, 12529,
12535, 12548, 12549, 12551, 12680, 12684, 12690, 12703, 12704, 12706,
13796, 13800, 13806, 13819, 13820, 13822, 14106, 14110, 14116, 14129,
14130, 14132, 14447, 14451, 14457, 14470, 14471, 14473, 14571, 14575,
14581, 14594, 14595, 14597, 15656, 15660, 15666, 15679, 15680, 15682,
16090, 16094, 16100, 16113, 16114, 16116, 17919, 17923, 17929, 17942,
17943, 17945, 18849, 18853, 18859, 18872, 18873, 18875, 19872, 19876,
19882, 19895, 19896, 19898, 20244, 20248, 20254, 20267, 20268, 20270,
20461, 20465, 20471, 20484, 20485, 20487, 20864, 20868, 20874, 20887,
20888, 20890, 22600, 22604, 22610, 22623, 22624, 22626};
	uint32_t TotalSlots =23467;
	#define ActiveSlots  168

#elif ((algorithmNum==1) && (algorithmDC==1072) )
#define v  31899
#define k  234
#define lamda 1
uint32_t B[234]={
0, 1, 3, 28, 29, 31, 168, 169, 171, 287,
288, 290, 490, 491, 493, 742, 743, 745, 868, 869,
871, 1400, 1401, 1403, 1463, 1464, 1466, 1512, 1513, 1515,
2471, 2472, 2474, 2478, 2479, 2481, 2492, 2493, 2495, 2702,
2703, 2705, 2786, 2787, 2789, 2877, 2878, 2880, 3031, 3032,
3034, 3227, 3228, 3230, 3269, 3270, 3272, 3304, 3305, 3307,
3374, 3375, 3377, 3640, 3641, 3643, 3738, 3739, 3741, 3920,
3921, 3923, 4368, 4369, 4371, 4424, 4425, 4427, 4557, 4558,
4560, 4585, 4586, 4588, 4725, 4726, 4728, 4844, 4845, 4847,
5047, 5048, 5050, 5299, 5300, 5302, 5425, 5426, 5428, 5957,
5958, 5960, 6020, 6021, 6023, 6069, 6070, 6072, 7028, 7029,
7031, 7035, 7036, 7038, 7049, 7050, 7052, 7259, 7260, 7262,
7343, 7344, 7346, 7434, 7435, 7437, 7588, 7589, 7591, 7784,
7785, 7787, 7826, 7827, 7829, 7861, 7862, 7864, 7931, 7932,
7934, 8197, 8198, 8200, 8295, 8296, 8298, 8477, 8478, 8480,
8925, 8926, 8928, 8981, 8982, 8984, 13671, 13672, 13674, 13699,
13700, 13702, 13839, 13840, 13842, 13958, 13959, 13961, 14161, 14162,
14164, 14413, 14414, 14416, 14539, 14540, 14542, 15071, 15072, 15074,
15134, 15135, 15137, 15183, 15184, 15186, 16142, 16143, 16145, 16149,
16150, 16152, 16163, 16164, 16166, 16373, 16374, 16376, 16457, 16458,
16460, 16548, 16549, 16551, 16702, 16703, 16705, 16898, 16899, 16901,
16940, 16941, 16943, 16975, 16976, 16978, 17045, 17046, 17048, 17311,
17312, 17314, 17409, 17410, 17412, 17591, 17592, 17594, 18039, 18040,
18042, 18095, 18096, 18098};
	uint32_t TotalSlots =31899;
	#define ActiveSlots  234
*/
#elif ((algorithmNum==1) && (algorithmDC==101) )
#define v  694011
#define k  882
#define lamda 1
uint32_t B[882]={
74, 75, 77, 81, 89, 105, 110, 128, 137, 950,
951, 953, 957, 965, 981, 986, 1004, 1013, 4965, 4966,
4968, 4972, 4980, 4996, 5001, 5019, 5028, 7082, 7083, 7085,
7089, 7097, 7113, 7118, 7136, 7145, 10002, 10003, 10005, 10009,
10017, 10033, 10038, 10056, 10065, 26281, 26282, 26284, 26288, 26296,
26312, 26317, 26335, 26344, 41465, 41466, 41468, 41472, 41480, 41496,
41501, 41519, 41528, 44604, 44605, 44607, 44611, 44619, 44635, 44640,
44658, 44667, 47962, 47963, 47965, 47969, 47977, 47993, 47998, 48016,
48025, 48911, 48912, 48914, 48918, 48926, 48942, 48947, 48965, 48974,
50809, 50810, 50812, 50816, 50824, 50840, 50845, 50863, 50872, 52342,
52343, 52345, 52349, 52357, 52373, 52378, 52396, 52405, 60810, 60811,
60813, 60817, 60825, 60841, 60846, 60864, 60873, 64898, 64899, 64901,
64905, 64913, 64929, 64934, 64952, 64961, 70300, 70301, 70303, 70307,
70315, 70331, 70336, 70354, 70363, 78111, 78112, 78114, 78118, 78126,
78142, 78147, 78165, 78174, 78184, 78185, 78187, 78191, 78199, 78215,
78220, 78238, 78247, 78330, 78331, 78333, 78337, 78345, 78361, 78366,
78384, 78393, 80812, 80813, 80815, 80819, 80827, 80843, 80848, 80866,
80875, 81907, 81908, 81910, 81914, 81922, 81938, 81943, 81961, 81970,
92054, 92055, 92057, 92061, 92069, 92085, 92090, 92108, 92117, 100595,
100596, 100598, 100602, 100610, 100626, 100631, 100649, 100658, 102347, 102348,
102350, 102354, 102362, 102378, 102383, 102401, 102410, 109720, 109721, 109723,
109727, 109735, 109751, 109756, 109774, 109783, 144833, 144834, 144836, 144840,
144848, 144864, 144869, 144887, 144896, 145198, 145199, 145201, 145205, 145213,
145229, 145234, 145252, 145261, 149943, 149944, 149946, 149950, 149958, 149974,
149979, 149997, 150006, 157900, 157901, 157903, 157907, 157915, 157931, 157936,
157954, 157963, 162426, 162427, 162429, 162433, 162441, 162457, 162462, 162480,
162489, 167974, 167975, 167977, 167981, 167989, 168005, 168010, 168028, 168037,
168485, 168486, 168488, 168492, 168500, 168516, 168521, 168539, 168548, 194911,
194912, 194914, 194918, 194926, 194942, 194947, 194965, 194974, 200605, 200606,
200608, 200612, 200620, 200636, 200641, 200659, 200668, 203890, 203891, 203893,
203897, 203905, 203921, 203926, 203944, 203953, 204547, 204548, 204550, 204554,
204562, 204578, 204583, 204601, 204610, 206226, 206227, 206229, 206233, 206241,
206257, 206262, 206280, 206289, 207540, 207541, 207543, 207547, 207555, 207571,
207576, 207594, 207603, 211409, 211410, 211412, 211416, 211424, 211440, 211445,
211463, 211472, 219001, 219002, 219004, 219008, 219016, 219032, 219037, 219055,
219064, 219585, 219586, 219588, 219592, 219600, 219616, 219621, 219639, 219648,
231338, 231339, 231341, 231345, 231353, 231369, 231374, 231392, 231401, 232579,
232580, 232582, 232586, 232594, 232610, 232615, 232633, 232642, 234404, 234405,
234407, 234411, 234419, 234435, 234440, 234458, 234467, 257472, 257473, 257475,
257479, 257487, 257503, 257508, 257526, 257535, 276087, 276088, 276090, 276094,
276102, 276118, 276123, 276141, 276150, 286818, 286819, 286821, 286825, 286833,
286849, 286854, 286872, 286881, 301345, 301346, 301348, 301352, 301360, 301376,
301381, 301399, 301408, 310762, 310763, 310765, 310769, 310777, 310793, 310798,
310816, 310825, 331129, 331130, 331132, 331136, 331144, 331160, 331165, 331183,
331192, 335363, 335364, 335366, 335370, 335378, 335394, 335399, 335417, 335426,
344926, 344927, 344929, 344933, 344941, 344957, 344962, 344980, 344989, 346386,
346387, 346389, 346393, 346401, 346417, 346422, 346440, 346449, 351715, 351716,
351718, 351722, 351730, 351746, 351751, 351769, 351778, 380258, 380259, 380261,
380265, 380273, 380289, 380294, 380312, 380321, 380696, 380697, 380699, 380703,
380711, 380727, 380732, 380750, 380759, 383470, 383471, 383473, 383477, 383485,
383501, 383506, 383524, 383533, 391792, 391793, 391795, 391799, 391807, 391823,
391828, 391846, 391855, 392084, 392085, 392087, 392091, 392099, 392115, 392120,
392138, 392147, 407925, 407926, 407928, 407932, 407940, 407956, 407961, 407979,
407988, 408655, 408656, 408658, 408662, 408670, 408686, 408691, 408709, 408718,
413911, 413912, 413914, 413918, 413926, 413942, 413947, 413965, 413974, 422671,
422672, 422674, 422678, 422686, 422702, 422707, 422725, 422734, 426832, 426833,
426835, 426839, 426847, 426863, 426868, 426886, 426895, 440483, 440484, 440486,
440490, 440498, 440514, 440519, 440537, 440546, 446250, 446251, 446253, 446257,
446265, 446281, 446286, 446304, 446313, 447053, 447054, 447056, 447060, 447068,
447084, 447089, 447107, 447116, 455959, 455960, 455962, 455966, 455974, 455990,
455995, 456013, 456022, 462675, 462676, 462678, 462682, 462690, 462706, 462711,
462729, 462738, 467128, 467129, 467131, 467135, 467143, 467159, 467164, 467182,
467191, 469099, 469100, 469102, 469106, 469114, 469130, 469135, 469153, 469162,
479319, 479320, 479322, 479326, 479334, 479350, 479355, 479373, 479382, 481509,
481510, 481512, 481516, 481524, 481540, 481545, 481563, 481572, 486984, 486985,
486987, 486991, 486999, 487015, 487020, 487038, 487047, 488152, 488153, 488155,
488159, 488167, 488183, 488188, 488206, 488215, 505234, 505235, 505237, 505241,
505249, 505265, 505270, 505288, 505297, 527134, 527135, 527137, 527141, 527149,
527165, 527170, 527188, 527197, 528740, 528741, 528743, 528747, 528755, 528771,
528776, 528794, 528803, 551954, 551955, 551957, 551961, 551969, 551985, 551990,
552008, 552017, 555458, 555459, 555461, 555465, 555473, 555489, 555494, 555512,
555521, 571518, 571519, 571521, 571525, 571533, 571549, 571554, 571572, 571581,
572905, 572906, 572908, 572912, 572920, 572936, 572941, 572959, 572968, 573927,
573928, 573930, 573934, 573942, 573958, 573963, 573981, 573990, 580205, 580206,
580208, 580212, 580220, 580236, 580241, 580259, 580268, 590644, 590645, 590647,
590651, 590659, 590675, 590680, 590698, 590707, 601010, 601011, 601013, 601017,
601025, 601041, 601046, 601064, 601073, 605609, 605610, 605612, 605616, 605624,
605640, 605645, 605663, 605672, 610281, 610282, 610284, 610288, 610296, 610312,
610317, 610335, 610344, 624881, 624882, 624884, 624888, 624896, 624912, 624917,
624935, 624944, 636561, 636562, 636564, 636568, 636576, 636592, 636597, 636615,
636624, 643642, 643643, 643645, 643649, 643657, 643673, 643678, 643696, 643705,
651891, 651892, 651894, 651898, 651906, 651922, 651927, 651945, 651954, 657804,
657805, 657807, 657811, 657819, 657835, 657840, 657858, 657867, 664155, 664156,
664158, 664162, 664170, 664186, 664191, 664209, 664218, 666199, 666200, 666202,
666206, 666214, 666230, 666235, 666253, 666262, 673353, 673354, 673356, 673360,
673368, 673384, 673389, 673407, 673416, 684303, 684304, 684306, 684310, 684318,
684334, 684339, 684357, 684366, 686858, 686859, 686861, 686865, 686873, 686889,
686894, 686912, 686921, 689121, 689122, 689124, 689128, 689136, 689152, 689157,
689175, 689184};
	uint32_t TotalSlots =694011;
	#define ActiveSlots  882
/*
(73,9,1) + (183,14,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==109) )
#define v  13359
#define k  126
#define lamda 1
uint32_t B[126]={
183, 185, 186, 193, 209, 222, 226, 244, 292, 304,
313, 319, 324, 338, 366, 368, 369, 376, 392, 405,
409, 427, 475, 487, 496, 502, 507, 521, 732, 734,
735, 742, 758, 771, 775, 793, 841, 853, 862, 868,
873, 887, 1464, 1466, 1467, 1474, 1490, 1503, 1507, 1525,
1573, 1585, 1594, 1600, 1605, 1619, 2928, 2930, 2931, 2938,
2954, 2967, 2971, 2989, 3037, 3049, 3058, 3064, 3069, 3083,
5856, 5858, 5859, 5866, 5882, 5895, 5899, 5917, 5965, 5977,
5986, 5992, 5997, 6011, 6771, 6773, 6774, 6781, 6797, 6810,
6814, 6832, 6880, 6892, 6901, 6907, 6912, 6926, 10065, 10067,
10068, 10075, 10091, 10104, 10108, 10126, 10174, 10186, 10195, 10201,
10206, 10220, 11712, 11714, 11715, 11722, 11738, 11751, 11755, 11773,
11821, 11833, 11842, 11848, 11853, 11867};
	uint32_t TotalSlots =13359;
	#define ActiveSlots  126
/*
(21,5,1) + (133,12,1) + (7,3,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==1092) )
#define v  19551
#define k  180
#define lamda 1
uint32_t B[180]={
2800, 2801, 2803, 2870, 2871, 2873, 2905, 2906, 2908, 3073,
3074, 3076, 3080, 3081, 3083, 3094, 3095, 3097, 3157, 3158,
3160, 3213, 3214, 3216, 3311, 3312, 3314, 3339, 3340, 3342,
3640, 3641, 3643, 3689, 3690, 3692, 5593, 5594, 5596, 5663,
5664, 5666, 5698, 5699, 5701, 5866, 5867, 5869, 5873, 5874,
5876, 5887, 5888, 5890, 5950, 5951, 5953, 6006, 6007, 6009,
6104, 6105, 6107, 6132, 6133, 6135, 6433, 6434, 6436, 6482,
6483, 6485, 6524, 6525, 6527, 6594, 6595, 6597, 6629, 6630,
6632, 6797, 6798, 6800, 6804, 6805, 6807, 6818, 6819, 6821,
6881, 6882, 6884, 6937, 6938, 6940, 7035, 7036, 7038, 7063,
7064, 7066, 7364, 7365, 7367, 7413, 7414, 7416, 11179, 11180,
11182, 11249, 11250, 11252, 11284, 11285, 11287, 11452, 11453, 11455,
11459, 11460, 11462, 11473, 11474, 11476, 11536, 11537, 11539, 11592,
11593, 11595, 11690, 11691, 11693, 11718, 11719, 11721, 12019, 12020,
12022, 12068, 12069, 12071, 13041, 13042, 13044, 13111, 13112, 13114,
13146, 13147, 13149, 13314, 13315, 13317, 13321, 13322, 13324, 13335,
13336, 13338, 13398, 13399, 13401, 13454, 13455, 13457, 13552, 13553,
13555, 13580, 13581, 13583, 13881, 13882, 13884, 13930, 13931, 13933};
	uint32_t TotalSlots =19551;
	#define ActiveSlots  180
/*
(91,10,1) + (183,14,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==108) )
#define v  16653
#define k  140
#define lamda 1
uint32_t B[140]={
0, 2, 3, 10, 26, 39, 43, 61, 109, 121,
130, 136, 141, 155, 183, 185, 186, 193, 209, 222,
226, 244, 292, 304, 313, 319, 324, 338, 549, 551,
552, 559, 575, 588, 592, 610, 658, 670, 679, 685,
690, 704, 1647, 1649, 1650, 1657, 1673, 1686, 1690, 1708,
1756, 1768, 1777, 1783, 1788, 1802, 4941, 4943, 4944, 4951,
4967, 4980, 4984, 5002, 5050, 5062, 5071, 5077, 5082, 5096,
8967, 8969, 8970, 8977, 8993, 9006, 9010, 9028, 9076, 9088,
9097, 9103, 9108, 9122, 10248, 10250, 10251, 10258, 10274, 10287,
10291, 10309, 10357, 10369, 10378, 10384, 10389, 10403, 11163, 11165,
11166, 11173, 11189, 11202, 11206, 11224, 11272, 11284, 11293, 11299,
11304, 11318, 14091, 14093, 14094, 14101, 14117, 14130, 14134, 14152,
14200, 14212, 14221, 14227, 14232, 14246, 14823, 14825, 14826, 14833,
14849, 14862, 14866, 14884, 14932, 14944, 14953, 14959, 14964, 14978};
	uint32_t TotalSlots =16653;
	#define ActiveSlots  140
/*
(57,8,1) + (57,8,1) + (7,3,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==1082))
#define v  22743
#define k  192
#define lamda 1
uint32_t B[192]={
406, 407, 409, 441, 442, 444, 448, 449, 451, 462,
463, 465, 532, 533, 535, 665, 666, 668, 693, 694,
696, 742, 743, 745, 2401, 2402, 2404, 2436, 2437, 2439,
2443, 2444, 2446, 2457, 2458, 2460, 2527, 2528, 2530, 2660,
2661, 2663, 2688, 2689, 2691, 2737, 2738, 2740, 2800, 2801,
2803, 2835, 2836, 2838, 2842, 2843, 2845, 2856, 2857, 2859,
2926, 2927, 2929, 3059, 3060, 3062, 3087, 3088, 3090, 3136,
3137, 3139, 3598, 3599, 3601, 3633, 3634, 3636, 3640, 3641,
3643, 3654, 3655, 3657, 3724, 3725, 3727, 3857, 3858, 3860,
3885, 3886, 3888, 3934, 3935, 3937, 7588, 7589, 7591, 7623,
7624, 7626, 7630, 7631, 7633, 7644, 7645, 7647, 7714, 7715,
7717, 7847, 7848, 7850, 7875, 7876, 7878, 7924, 7925, 7927,
15169, 15170, 15172, 15204, 15205, 15207, 15211, 15212, 15214, 15225,
15226, 15228, 15295, 15296, 15298, 15428, 15429, 15431, 15456, 15457,
15459, 15505, 15506, 15508, 16765, 16766, 16768, 16800, 16801, 16803,
16807, 16808, 16810, 16821, 16822, 16824, 16891, 16892, 16894, 17024,
17025, 17027, 17052, 17053, 17055, 17101, 17102, 17104, 19558, 19559,
19561, 19593, 19594, 19596, 19600, 19601, 19603, 19614, 19615, 19617,
19684, 19685, 19687, 19817, 19818, 19820, 19845, 19846, 19848, 19894,
19895, 19897};
	uint32_t TotalSlots =22743;
	#define ActiveSlots  192
/*
(57,8,1) + (381,20,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==107) )
#define v  21717
#define k  160
#define lamda 1
uint32_t B[160]={
381, 382, 400, 409, 477, 499, 532, 534, 557, 583,
621, 635, 671, 677, 681, 688, 718, 742, 747, 750,
2286, 2287, 2305, 2314, 2382, 2404, 2437, 2439, 2462, 2488,
2526, 2540, 2576, 2582, 2586, 2593, 2623, 2647, 2652, 2655,
2667, 2668, 2686, 2695, 2763, 2785, 2818, 2820, 2843, 2869,
2907, 2921, 2957, 2963, 2967, 2974, 3004, 3028, 3033, 3036,
3429, 3430, 3448, 3457, 3525, 3547, 3580, 3582, 3605, 3631,
3669, 3683, 3719, 3725, 3729, 3736, 3766, 3790, 3795, 3798,
7239, 7240, 7258, 7267, 7335, 7357, 7390, 7392, 7415, 7441,
7479, 7493, 7529, 7535, 7539, 7546, 7576, 7600, 7605, 7608,
14478, 14479, 14497, 14506, 14574, 14596, 14629, 14631, 14654, 14680,
14718, 14732, 14768, 14774, 14778, 14785, 14815, 14839, 14844, 14847,
16002, 16003, 16021, 16030, 16098, 16120, 16153, 16155, 16178, 16204,
16242, 16256, 16292, 16298, 16302, 16309, 16339, 16363, 16368, 16371,
18669, 18670, 18688, 18697, 18765, 18787, 18820, 18822, 18845, 18871,
18909, 18923, 18959, 18965, 18969, 18976, 19006, 19030, 19035, 19038};
	uint32_t TotalSlots =21717;
	#define ActiveSlots  160
/*
(57,8,1) + (74,9,1) + (7,3,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==1072))
#define v  29127
#define k  216
#define lamda 1
uint32_t B[216]={
518, 519, 521, 525, 526, 528, 539, 540, 542, 567,
568, 570, 623, 624, 626, 735, 736, 738, 770, 771,
773, 896, 897, 899, 959, 960, 962, 3073, 3074, 3076,
3080, 3081, 3083, 3094, 3095, 3097, 3122, 3123, 3125, 3178,
3179, 3181, 3290, 3291, 3293, 3325, 3326, 3328, 3451, 3452,
3454, 3514, 3515, 3517, 3584, 3585, 3587, 3591, 3592, 3594,
3605, 3606, 3608, 3633, 3634, 3636, 3689, 3690, 3692, 3801,
3802, 3804, 3836, 3837, 3839, 3962, 3963, 3965, 4025, 4026,
4028, 4606, 4607, 4609, 4613, 4614, 4616, 4627, 4628, 4630,
4655, 4656, 4658, 4711, 4712, 4714, 4823, 4824, 4826, 4858,
4859, 4861, 4984, 4985, 4987, 5047, 5048, 5050, 9716, 9717,
9719, 9723, 9724, 9726, 9737, 9738, 9740, 9765, 9766, 9768,
9821, 9822, 9824, 9933, 9934, 9936, 9968, 9969, 9971, 10094,
10095, 10097, 10157, 10158, 10160, 19425, 19426, 19428, 19432, 19433,
19435, 19446, 19447, 19449, 19474, 19475, 19477, 19530, 19531, 19533,
19642, 19643, 19645, 19677, 19678, 19680, 19803, 19804, 19806, 19866,
19867, 19869, 21469, 21470, 21472, 21476, 21477, 21479, 21490, 21491,
21493, 21518, 21519, 21521, 21574, 21575, 21577, 21686, 21687, 21689,
21721, 21722, 21724, 21847, 21848, 21850, 21910, 21911, 21913, 25046,
25047, 25049, 25053, 25054, 25056, 25067, 25068, 25070, 25095, 25096,
25098, 25151, 25152, 25154, 25263, 25264, 25266, 25298, 25299, 25301,
25424, 25425, 25427, 25487, 25488, 25490};
	uint32_t TotalSlots =29127;
	#define ActiveSlots  216
/*
(73) + (381)
*/
#elif ((algorithmNum==1) && (algorithmDC==106))
#define v  27813
#define k  180
#define lamda 1
uint32_t B[180]={
381, 382, 400, 409, 477, 499, 532, 534, 557, 583,
621, 635, 671, 677, 681, 688, 718, 742, 747, 750,
762, 763, 781, 790, 858, 880, 913, 915, 938, 964,
1002, 1016, 1052, 1058, 1062, 1069, 1099, 1123, 1128, 1131,
1524, 1525, 1543, 1552, 1620, 1642, 1675, 1677, 1700, 1726,
1764, 1778, 1814, 1820, 1824, 1831, 1861, 1885, 1890, 1893,
3048, 3049, 3067, 3076, 3144, 3166, 3199, 3201, 3224, 3250,
3288, 3302, 3338, 3344, 3348, 3355, 3385, 3409, 3414, 3417,
6096, 6097, 6115, 6124, 6192, 6214, 6247, 6249, 6272, 6298,
6336, 6350, 6386, 6392, 6396, 6403, 6433, 6457, 6462, 6465,
12192, 12193, 12211, 12220, 12288, 12310, 12343, 12345, 12368, 12394,
12432, 12446, 12482, 12488, 12492, 12499, 12529, 12553, 12558, 12561,
14097, 14098, 14116, 14125, 14193, 14215, 14248, 14250, 14273, 14299,
14337, 14351, 14387, 14393, 14397, 14404, 14434, 14458, 14463, 14466,
20955, 20956, 20974, 20983, 21051, 21073, 21106, 21108, 21131, 21157,
21195, 21209, 21245, 21251, 21255, 21262, 21292, 21316, 21321, 21324,
24384, 24385, 24403, 24412, 24480, 24502, 24535, 24537, 24560, 24586,
24624, 24638, 24674, 24680, 24684, 24691, 24721, 24745, 24750, 24753};
	uint32_t TotalSlots =27813;
	#define ActiveSlots  180

/*
(21) + (273) + (7)
*/
#elif ((algorithmNum==1) && (algorithmDC==1062))
#define v  40131
#define k  255
#define lamda 1
uint32_t B[255]={
5740, 5741, 5743, 5747, 5748, 5750, 5761, 5762, 5764, 5789,
5790, 5792, 5845, 5846, 5848, 5957, 5958, 5960, 6181, 6182,
6184, 6370, 6371, 6373, 6552, 6553, 6555, 6629, 6630, 6632,
6692, 6693, 6695, 7007, 7008, 7010, 7098, 7099, 7101, 7168,
7169, 7171, 7371, 7372, 7374, 7406, 7407, 7409, 7525, 7526,
7528, 11473, 11474, 11476, 11480, 11481, 11483, 11494, 11495, 11497,
11522, 11523, 11525, 11578, 11579, 11581, 11690, 11691, 11693, 11914,
11915, 11917, 12103, 12104, 12106, 12285, 12286, 12288, 12362, 12363,
12365, 12425, 12426, 12428, 12740, 12741, 12743, 12831, 12832, 12834,
12901, 12902, 12904, 13104, 13105, 13107, 13139, 13140, 13142, 13258,
13259, 13261, 13384, 13385, 13387, 13391, 13392, 13394, 13405, 13406,
13408, 13433, 13434, 13436, 13489, 13490, 13492, 13601, 13602, 13604,
13825, 13826, 13828, 14014, 14015, 14017, 14196, 14197, 14199, 14273,
14274, 14276, 14336, 14337, 14339, 14651, 14652, 14654, 14742, 14743,
14745, 14812, 14813, 14815, 15015, 15016, 15018, 15050, 15051, 15053,
15169, 15170, 15172, 22939, 22940, 22942, 22946, 22947, 22949, 22960,
22961, 22963, 22988, 22989, 22991, 23044, 23045, 23047, 23156, 23157,
23159, 23380, 23381, 23383, 23569, 23570, 23572, 23751, 23752, 23754,
23828, 23829, 23831, 23891, 23892, 23894, 24206, 24207, 24209, 24297,
24298, 24300, 24367, 24368, 24370, 24570, 24571, 24573, 24605, 24606,
24608, 24724, 24725, 24727, 26761, 26762, 26764, 26768, 26769, 26771,
26782, 26783, 26785, 26810, 26811, 26813, 26866, 26867, 26869, 26978,
26979, 26981, 27202, 27203, 27205, 27391, 27392, 27394, 27573, 27574,
27576, 27650, 27651, 27653, 27713, 27714, 27716, 28028, 28029, 28031,
28119, 28120, 28122, 28189, 28190, 28192, 28392, 28393, 28395, 28427,
28428, 28430, 28546, 28547, 28549};
	uint32_t TotalSlots =40131;
	#define ActiveSlots  255
/*
(183) + (381)
*/
#elif ((algorithmNum==1) && (algorithmDC==124))
#define v  69723
#define k  280
#define lamda 1
uint32_t B[280]={
0, 1, 19, 28, 96, 118, 151, 153, 176, 202,
240, 254, 290, 296, 300, 307, 337, 361, 366, 369,
762, 763, 781, 790, 858, 880, 913, 915, 938, 964,
1002, 1016, 1052, 1058, 1062, 1069, 1099, 1123, 1128, 1131,
1143, 1144, 1162, 1171, 1239, 1261, 1294, 1296, 1319, 1345,
1383, 1397, 1433, 1439, 1443, 1450, 1480, 1504, 1509, 1512,
3810, 3811, 3829, 3838, 3906, 3928, 3961, 3963, 3986, 4012,
4050, 4064, 4100, 4106, 4110, 4117, 4147, 4171, 4176, 4179,
9906, 9907, 9925, 9934, 10002, 10024, 10057, 10059, 10082, 10108,
10146, 10160, 10196, 10202, 10206, 10213, 10243, 10267, 10272, 10275,
14859, 14860, 14878, 14887, 14955, 14977, 15010, 15012, 15035, 15061,
15099, 15113, 15149, 15155, 15159, 15166, 15196, 15220, 15225, 15228,
16383, 16384, 16402, 16411, 16479, 16501, 16534, 16536, 16559, 16585,
16623, 16637, 16673, 16679, 16683, 16690, 16720, 16744, 16749, 16752,
23241, 23242, 23260, 23269, 23337, 23359, 23392, 23394, 23417, 23443,
23481, 23495, 23531, 23537, 23541, 23548, 23578, 23602, 23607, 23610,
41529, 41530, 41548, 41557, 41625, 41647, 41680, 41682, 41705, 41731,
41769, 41783, 41819, 41825, 41829, 41836, 41866, 41890, 41895, 41898,
46101, 46102, 46120, 46129, 46197, 46219, 46252, 46254, 46277, 46303,
46341, 46355, 46391, 46397, 46401, 46408, 46438, 46462, 46467, 46470,
49530, 49531, 49549, 49558, 49626, 49648, 49681, 49683, 49706, 49732,
49770, 49784, 49820, 49826, 49830, 49837, 49867, 49891, 49896, 49899,
51816, 51817, 51835, 51844, 51912, 51934, 51967, 51969, 51992, 52018,
52056, 52070, 52106, 52112, 52116, 52123, 52153, 52177, 52182, 52185,
53721, 53722, 53740, 53749, 53817, 53839, 53872, 53874, 53897, 53923,
53961, 53975, 54011, 54017, 54021, 54028, 54058, 54082, 54087, 54090,
59055, 59056, 59074, 59083, 59151, 59173, 59206, 59208, 59231, 59257,
59295, 59309, 59345, 59351, 59355, 59362, 59392, 59416, 59421, 59424};
	uint32_t TotalSlots =69723;
	#define ActiveSlots  280

/*
(21) + (651) + (7)
*/
#elif ((algorithmNum==1) && (algorithmDC==1242))
#define v  95697
#define k  390
#define lamda 1
uint32_t B[390]={
13671, 13672, 13674, 13699, 13700, 13702, 13839, 13840, 13842, 13958,
13959, 13961, 14161, 14162, 14164, 14413, 14414, 14416, 14539, 14540,
14542, 15071, 15072, 15074, 15134, 15135, 15137, 15183, 15184, 15186,
16142, 16143, 16145, 16149, 16150, 16152, 16163, 16164, 16166, 16373,
16374, 16376, 16457, 16458, 16460, 16548, 16549, 16551, 16702, 16703,
16705, 16898, 16899, 16901, 16940, 16941, 16943, 16975, 16976, 16978,
17045, 17046, 17048, 17311, 17312, 17314, 17409, 17410, 17412, 17591,
17592, 17594, 18039, 18040, 18042, 18095, 18096, 18098, 27342, 27343,
27345, 27370, 27371, 27373, 27510, 27511, 27513, 27629, 27630, 27632,
27832, 27833, 27835, 28084, 28085, 28087, 28210, 28211, 28213, 28742,
28743, 28745, 28805, 28806, 28808, 28854, 28855, 28857, 29813, 29814,
29816, 29820, 29821, 29823, 29834, 29835, 29837, 30044, 30045, 30047,
30128, 30129, 30131, 30219, 30220, 30222, 30373, 30374, 30376, 30569,
30570, 30572, 30611, 30612, 30614, 30646, 30647, 30649, 30716, 30717,
30719, 30982, 30983, 30985, 31080, 31081, 31083, 31262, 31263, 31265,
31710, 31711, 31713, 31766, 31767, 31769, 31899, 31900, 31902, 31927,
31928, 31930, 32067, 32068, 32070, 32186, 32187, 32189, 32389, 32390,
32392, 32641, 32642, 32644, 32767, 32768, 32770, 33299, 33300, 33302,
33362, 33363, 33365, 33411, 33412, 33414, 34370, 34371, 34373, 34377,
34378, 34380, 34391, 34392, 34394, 34601, 34602, 34604, 34685, 34686,
34688, 34776, 34777, 34779, 34930, 34931, 34933, 35126, 35127, 35129,
35168, 35169, 35171, 35203, 35204, 35206, 35273, 35274, 35276, 35539,
35540, 35542, 35637, 35638, 35640, 35819, 35820, 35822, 36267, 36268,
36270, 36323, 36324, 36326, 54684, 54685, 54687, 54712, 54713, 54715,
54852, 54853, 54855, 54971, 54972, 54974, 55174, 55175, 55177, 55426,
55427, 55429, 55552, 55553, 55555, 56084, 56085, 56087, 56147, 56148,
56150, 56196, 56197, 56199, 57155, 57156, 57158, 57162, 57163, 57165,
57176, 57177, 57179, 57386, 57387, 57389, 57470, 57471, 57473, 57561,
57562, 57564, 57715, 57716, 57718, 57911, 57912, 57914, 57953, 57954,
57956, 57988, 57989, 57991, 58058, 58059, 58061, 58324, 58325, 58327,
58422, 58423, 58425, 58604, 58605, 58607, 59052, 59053, 59055, 59108,
59109, 59111, 63798, 63799, 63801, 63826, 63827, 63829, 63966, 63967,
63969, 64085, 64086, 64088, 64288, 64289, 64291, 64540, 64541, 64543,
64666, 64667, 64669, 65198, 65199, 65201, 65261, 65262, 65264, 65310,
65311, 65313, 66269, 66270, 66272, 66276, 66277, 66279, 66290, 66291,
66293, 66500, 66501, 66503, 66584, 66585, 66587, 66675, 66676, 66678,
66829, 66830, 66832, 67025, 67026, 67028, 67067, 67068, 67070, 67102,
67103, 67105, 67172, 67173, 67175, 67438, 67439, 67441, 67536, 67537,
67539, 67718, 67719, 67721, 68166, 68167, 68169, 68222, 68223, 68225};
	uint32_t TotalSlots =95697;
	#define ActiveSlots  390
/*
(183,14,1) + (307,18,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==104))
#define v  56181
#define k  252
#define lamda 1
uint32_t B[252]={
0, 1, 3, 30, 37, 50, 55, 76, 98, 117,
129, 133, 157, 189, 199, 222, 293, 299, 614, 615,
617, 644, 651, 664, 669, 690, 712, 731, 743, 747,
771, 803, 813, 836, 907, 913, 921, 922, 924, 951,
958, 971, 976, 997, 1019, 1038, 1050, 1054, 1078, 1110,
1120, 1143, 1214, 1220, 3070, 3071, 3073, 3100, 3107, 3120,
3125, 3146, 3168, 3187, 3199, 3203, 3227, 3259, 3269, 3292,
3363, 3369, 7982, 7983, 7985, 8012, 8019, 8032, 8037, 8058,
8080, 8099, 8111, 8115, 8139, 8171, 8181, 8204, 8275, 8281,
11973, 11974, 11976, 12003, 12010, 12023, 12028, 12049, 12071, 12090,
12102, 12106, 12130, 12162, 12172, 12195, 12266, 12272, 13201, 13202,
13204, 13231, 13238, 13251, 13256, 13277, 13299, 13318, 13330, 13334,
13358, 13390, 13400, 13423, 13494, 13500, 18727, 18728, 18730, 18757,
18764, 18777, 18782, 18803, 18825, 18844, 18856, 18860, 18884, 18916,
18926, 18949, 19020, 19026, 33463, 33464, 33466, 33493, 33500, 33513,
33518, 33539, 33561, 33580, 33592, 33596, 33620, 33652, 33662, 33685,
33756, 33762, 37147, 37148, 37150, 37177, 37184, 37197, 37202, 37223,
37245, 37264, 37276, 37280, 37304, 37336, 37346, 37369, 37440, 37446,
39910, 39911, 39913, 39940, 39947, 39960, 39965, 39986, 40008, 40027,
40039, 40043, 40067, 40099, 40109, 40132, 40203, 40209, 41752, 41753,
41755, 41782, 41789, 41802, 41807, 41828, 41850, 41869, 41881, 41885,
41909, 41941, 41951, 41974, 42045, 42051, 43287, 43288, 43290, 43317,
43324, 43337, 43342, 43363, 43385, 43404, 43416, 43420, 43444, 43476,
43486, 43509, 43580, 43586, 47585, 47586, 47588, 47615, 47622, 47635,
47640, 47661, 47683, 47702, 47714, 47718, 47742, 47774, 47784, 47807,
47878, 47884};
	uint32_t TotalSlots =56181;
	#define ActiveSlots  252
/*
(21,5,1) + (553,24,1) + (7,3,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==1042))
#define v  81291
#define k  360
#define lamda 1
uint32_t B[360]={
11620, 11621, 11623, 11774, 11775, 11777, 11977, 11978, 11980, 12243,
12244, 12246, 12369, 12370, 12372, 12453, 12454, 12456, 12677, 12678,
12680, 12754, 12755, 12757, 12824, 12825, 12827, 12859, 12860, 12862,
12915, 12916, 12918, 13174, 13175, 13177, 13237, 13238, 13240, 13517,
13518, 13520, 14126, 14127, 14129, 14462, 14463, 14465, 14490, 14491,
14493, 14630, 14631, 14633, 14679, 14680, 14682, 15197, 15198, 15200,
15204, 15205, 15207, 15218, 15219, 15221, 15316, 15317, 15319, 15449,
15450, 15452, 23233, 23234, 23236, 23387, 23388, 23390, 23590, 23591,
23593, 23856, 23857, 23859, 23982, 23983, 23985, 24066, 24067, 24069,
24290, 24291, 24293, 24367, 24368, 24370, 24437, 24438, 24440, 24472,
24473, 24475, 24528, 24529, 24531, 24787, 24788, 24790, 24850, 24851,
24853, 25130, 25131, 25133, 25739, 25740, 25742, 26075, 26076, 26078,
26103, 26104, 26106, 26243, 26244, 26246, 26292, 26293, 26295, 26810,
26811, 26813, 26817, 26818, 26820, 26831, 26832, 26834, 26929, 26930,
26932, 27062, 27063, 27065, 27104, 27105, 27107, 27258, 27259, 27261,
27461, 27462, 27464, 27727, 27728, 27730, 27853, 27854, 27856, 27937,
27938, 27940, 28161, 28162, 28164, 28238, 28239, 28241, 28308, 28309,
28311, 28343, 28344, 28346, 28399, 28400, 28402, 28658, 28659, 28661,
28721, 28722, 28724, 29001, 29002, 29004, 29610, 29611, 29613, 29946,
29947, 29949, 29974, 29975, 29977, 30114, 30115, 30117, 30163, 30164,
30166, 30681, 30682, 30684, 30688, 30689, 30691, 30702, 30703, 30705,
30800, 30801, 30803, 30933, 30934, 30936, 46459, 46460, 46462, 46613,
46614, 46616, 46816, 46817, 46819, 47082, 47083, 47085, 47208, 47209,
47211, 47292, 47293, 47295, 47516, 47517, 47519, 47593, 47594, 47596,
47663, 47664, 47666, 47698, 47699, 47701, 47754, 47755, 47757, 48013,
48014, 48016, 48076, 48077, 48079, 48356, 48357, 48359, 48965, 48966,
48968, 49301, 49302, 49304, 49329, 49330, 49332, 49469, 49470, 49472,
49518, 49519, 49521, 50036, 50037, 50039, 50043, 50044, 50046, 50057,
50058, 50060, 50155, 50156, 50158, 50288, 50289, 50291, 54201, 54202,
54204, 54355, 54356, 54358, 54558, 54559, 54561, 54824, 54825, 54827,
54950, 54951, 54953, 55034, 55035, 55037, 55258, 55259, 55261, 55335,
55336, 55338, 55405, 55406, 55408, 55440, 55441, 55443, 55496, 55497,
55499, 55755, 55756, 55758, 55818, 55819, 55821, 56098, 56099, 56101,
56707, 56708, 56710, 57043, 57044, 57046, 57071, 57072, 57074, 57211,
57212, 57214, 57260, 57261, 57263, 57778, 57779, 57781, 57785, 57786,
57788, 57799, 57800, 57802, 57897, 57898, 57900, 58030, 58031, 58033};
	uint32_t TotalSlots =81291;
	#define ActiveSlots  360
/*
(133,12,1) + (757,28,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==103))
#define v  100681
#define k  336
#define lamda 1
uint32_t B[336]={
757, 758, 760, 766, 784, 800, 838, 886, 930, 977,
1000, 1067, 1144, 1161, 1166, 1202, 1212, 1223, 1227, 1262,
1276, 1335, 1365, 1398, 1410, 1417, 1430, 1486, 8327, 8328,
8330, 8336, 8354, 8370, 8408, 8456, 8500, 8547, 8570, 8637,
8714, 8731, 8736, 8772, 8782, 8793, 8797, 8832, 8846, 8905,
8935, 8968, 8980, 8987, 9000, 9056, 12112, 12113, 12115, 12121,
12139, 12155, 12193, 12241, 12285, 12332, 12355, 12422, 12499, 12516,
12521, 12557, 12567, 12578, 12582, 12617, 12631, 12690, 12720, 12753,
12765, 12772, 12785, 12841, 30280, 30281, 30283, 30289, 30307, 30323,
30361, 30409, 30453, 30500, 30523, 30590, 30667, 30684, 30689, 30725,
30735, 30746, 30750, 30785, 30799, 30858, 30888, 30921, 30933, 30940,
30953, 31009, 31037, 31038, 31040, 31046, 31064, 31080, 31118, 31166,
31210, 31257, 31280, 31347, 31424, 31441, 31446, 31482, 31492, 31503,
31507, 31542, 31556, 31615, 31645, 31678, 31690, 31697, 31710, 31766,
32551, 32552, 32554, 32560, 32578, 32594, 32632, 32680, 32724, 32771,
32794, 32861, 32938, 32955, 32960, 32996, 33006, 33017, 33021, 33056,
33070, 33129, 33159, 33192, 33204, 33211, 33224, 33280, 39364, 39365,
39367, 39373, 39391, 39407, 39445, 39493, 39537, 39584, 39607, 39674,
39751, 39768, 39773, 39809, 39819, 39830, 39834, 39869, 39883, 39942,
39972, 40005, 40017, 40024, 40037, 40093, 45420, 45421, 45423, 45429,
45447, 45463, 45501, 45549, 45593, 45640, 45663, 45730, 45807, 45824,
45829, 45865, 45875, 45886, 45890, 45925, 45939, 45998, 46028, 46061,
46073, 46080, 46093, 46149, 56018, 56019, 56021, 56027, 56045, 56061,
56099, 56147, 56191, 56238, 56261, 56328, 56405, 56422, 56427, 56463,
56473, 56484, 56488, 56523, 56537, 56596, 56626, 56659, 56671, 56678,
56691, 56747, 59046, 59047, 59049, 59055, 59073, 59089, 59127, 59175,
59219, 59266, 59289, 59356, 59433, 59450, 59455, 59491, 59501, 59512,
59516, 59551, 59565, 59624, 59654, 59687, 59699, 59706, 59719, 59775,
91597, 91598, 91600, 91606, 91624, 91640, 91678, 91726, 91770, 91817,
91840, 91907, 91984, 92001, 92006, 92042, 92052, 92063, 92067, 92102,
92116, 92175, 92205, 92238, 92250, 92257, 92270, 92326, 96896, 96897,
96899, 96905, 96923, 96939, 96977, 97025, 97069, 97116, 97139, 97206,
97283, 97300, 97305, 97341, 97351, 97362, 97366, 97401, 97415, 97474,
97504, 97537, 97549, 97556, 97569, 97625};
	uint32_t TotalSlots =100681;
	#define ActiveSlots  336
/*
(31,6,1) + (651,26,1) + (7,3,1)
*/
#elif ((algorithmNum==1) && (algorithmDC==1032))
#define v  141267
#define k  468
#define lamda 1
uint32_t B[468]={
4557, 4558, 4560, 4585, 4586, 4588, 4725, 4726, 4728, 4844,
4845, 4847, 5047, 5048, 5050, 5299, 5300, 5302, 5425, 5426,
5428, 5957, 5958, 5960, 6020, 6021, 6023, 6069, 6070, 6072,
7028, 7029, 7031, 7035, 7036, 7038, 7049, 7050, 7052, 7259,
7260, 7262, 7343, 7344, 7346, 7434, 7435, 7437, 7588, 7589,
7591, 7784, 7785, 7787, 7826, 7827, 7829, 7861, 7862, 7864,
7931, 7932, 7934, 8197, 8198, 8200, 8295, 8296, 8298, 8477,
8478, 8480, 8925, 8926, 8928, 8981, 8982, 8984, 22785, 22786,
22788, 22813, 22814, 22816, 22953, 22954, 22956, 23072, 23073, 23075,
23275, 23276, 23278, 23527, 23528, 23530, 23653, 23654, 23656, 24185,
24186, 24188, 24248, 24249, 24251, 24297, 24298, 24300, 25256, 25257,
25259, 25263, 25264, 25266, 25277, 25278, 25280, 25487, 25488, 25490,
25571, 25572, 25574, 25662, 25663, 25665, 25816, 25817, 25819, 26012,
26013, 26015, 26054, 26055, 26057, 26089, 26090, 26092, 26159, 26160,
26162, 26425, 26426, 26428, 26523, 26524, 26526, 26705, 26706, 26708,
27153, 27154, 27156, 27209, 27210, 27212, 50127, 50128, 50130, 50155,
50156, 50158, 50295, 50296, 50298, 50414, 50415, 50417, 50617, 50618,
50620, 50869, 50870, 50872, 50995, 50996, 50998, 51527, 51528, 51530,
51590, 51591, 51593, 51639, 51640, 51642, 52598, 52599, 52601, 52605,
52606, 52608, 52619, 52620, 52622, 52829, 52830, 52832, 52913, 52914,
52916, 53004, 53005, 53007, 53158, 53159, 53161, 53354, 53355, 53357,
53396, 53397, 53399, 53431, 53432, 53434, 53501, 53502, 53504, 53767,
53768, 53770, 53865, 53866, 53868, 54047, 54048, 54050, 54495, 54496,
54498, 54551, 54552, 54554, 109368, 109369, 109371, 109396, 109397, 109399,
109536, 109537, 109539, 109655, 109656, 109658, 109858, 109859, 109861, 110110,
110111, 110113, 110236, 110237, 110239, 110768, 110769, 110771, 110831, 110832,
110834, 110880, 110881, 110883, 111839, 111840, 111842, 111846, 111847, 111849,
111860, 111861, 111863, 112070, 112071, 112073, 112154, 112155, 112157, 112245,
112246, 112248, 112399, 112400, 112402, 112595, 112596, 112598, 112637, 112638,
112640, 112672, 112673, 112675, 112742, 112743, 112745, 113008, 113009, 113011,
113106, 113107, 113109, 113288, 113289, 113291, 113736, 113737, 113739, 113792,
113793, 113795, 113925, 113926, 113928, 113953, 113954, 113956, 114093, 114094,
114096, 114212, 114213, 114215, 114415, 114416, 114418, 114667, 114668, 114670,
114793, 114794, 114796, 115325, 115326, 115328, 115388, 115389, 115391, 115437,
115438, 115440, 116396, 116397, 116399, 116403, 116404, 116406, 116417, 116418,
116420, 116627, 116628, 116630, 116711, 116712, 116714, 116802, 116803, 116805,
116956, 116957, 116959, 117152, 117153, 117155, 117194, 117195, 117197, 117229,
117230, 117232, 117299, 117300, 117302, 117565, 117566, 117568, 117663, 117664,
117666, 117845, 117846, 117848, 118293, 118294, 118296, 118349, 118350, 118352,
123039, 123040, 123042, 123067, 123068, 123070, 123207, 123208, 123210, 123326,
123327, 123329, 123529, 123530, 123532, 123781, 123782, 123784, 123907, 123908,
123910, 124439, 124440, 124442, 124502, 124503, 124505, 124551, 124552, 124554,
125510, 125511, 125513, 125517, 125518, 125520, 125531, 125532, 125534, 125741,
125742, 125744, 125825, 125826, 125828, 125916, 125917, 125919, 126070, 126071,
126073, 126266, 126267, 126269, 126308, 126309, 126311, 126343, 126344, 126346,
126413, 126414, 126416, 126679, 126680, 126682, 126777, 126778, 126780, 126959,
126960, 126962, 127407, 127408, 127410, 127463, 127464, 127466};
	uint32_t TotalSlots =141267;
	#define ActiveSlots  468
#endif
#if ((algorithmNum != 1) && (algorithmNum != 2))
	#define v 1
	#define k 1
	#define lamda 1
	uint16_t B[3]={0,1,3};
#endif
/********************************** DISCO Algorithm **********************/
/*** pi , pj ***/
// 5% of duty cycle
//#define pi 37
//#define pj 43

// 10% of duty cycle
#if ((algorithmNum==3) && (algorithmDC==10))
#define pi 17
#define pj 23
#define pi2 29
#define pj2 67
	uint16_t TotalSlots = 391;
	#define ActiveSlots 39
	uint16_t BDISCO[39] ={17,23,34,46,51,68,69,85,92,102,115,119,136,138,153,161,170,184,187,204,207,221,230,238,253,255,276,272,289,299,306,322,323,340,345,357,368,374,391};

// 5% of duty cycle
#elif ((algorithmNum==3) && (algorithmDC==5))
#define pi 37
#define pj 43
#define pi2 29
#define pj2 67
	uint16_t TotalSlots = 1591;
	#define ActiveSlots 79
	uint16_t BDISCO[1] = {0};
// 2% of duty cycle
#elif ((algorithmNum==3) && (algorithmDC==2))
#define pi 97
#define pj 103
#define pi2 29
#define pj2 67
	uint16_t TotalSlots = 9991;
	#define ActiveSlots 201
	uint16_t BDISCO[1] = {0};

// 1% of duty cycle
#elif ((algorithmNum==3) && (algorithmDC==1))
#define pi 197
#define pj 199
#define pi2 29
#define pj2 67
	uint16_t TotalSlots = 39203;
	#define ActiveSlots 395
	uint16_t BDISCO[1] = {0};
#endif
#if ((algorithmNum!=3) && (algorithmNum!=9))
#define pi 1
#define pj 1
#define pi2 1
#define pj2 1
	uint16_t BDISCO[39] ={17,23,34,46,51,68,69,85,92,102,115,119,136,138,153,161,170,184,187,204,207,221,230,238,253,255,276,272,289,299,306,322,323,340,345,357,368,374,391};
#endif

/********************************** UCONNECT Algorithm **********************/
// 10% duty cycle
#if ((algorithmNum==4) && (algorithmDC==10))
#define u_prime 13
	uint16_t TotalSlots = 169;
	#define ActiveSlots 19
	uint16_t BUCONNECT[19]={1,2,3,4,5,6,13,26,39,52,65,78,91,104,117,130,143,156,169};

// 5% duty cycle
#elif ((algorithmNum==4) && (algorithmDC==5))
#define u_prime 29
	uint16_t TotalSlots = 841;
	#define ActiveSlots 43
	uint16_t BUCONNECT[1] = {0};

// 2% duty cycle
#elif ((algorithmNum==4) && (algorithmDC==2))
#define u_prime 73
	uint16_t TotalSlots = 5329;
	#define ActiveSlots 109
	uint16_t BUCONNECT[1] = {0};

// 1% duty cycle
#elif ((algorithmNum==4) && (algorithmDC==1))
	#define u_prime 149
	uint16_t TotalSlots = 22201;
	#define ActiveSlots 223
	uint16_t BUCONNECT[1] = {0};

// 0.5% duty cycle
#elif ((algorithmNum==4) && (algorithmDC==105))
	#define u_prime 293
	uint32_t TotalSlots = 85849;
	#define ActiveSlots 439
	uint16_t BUCONNECT[1] = {0};

// 0.2% duty cycle
#elif ((algorithmNum==4) && (algorithmDC==102))
	#define u_prime 743
	uint32_t TotalSlots = 552049;
	#define ActiveSlots 1114
	uint16_t BUCONNECT[1] = {0};

// 0.1% duty cycle
#elif ((algorithmNum==4) && (algorithmDC==101))
	#define u_prime 1499
	uint32_t TotalSlots = 2247001;
	#define ActiveSlots 2248
	uint16_t BUCONNECT[1] = {0};

#else
#define u_prime 1
	uint16_t BUCONNECT[19]={1,2,3,4,5,6,13,26,39,52,65,78,91,104,117,130,143,156,169};
#endif
// 1% 
//#define u_prime 149

// 5% of duty cycle
//#define u_prime 29

// 10% of duty cycle
//#define u_prime 13

// 2% of duty cycle
//#define u_prime 73
/********************************** QUORUM Algorithm **********************/
// 10% of duty cycle
#if ((algorithmNum==5) && (algorithmDC==10))
#define q_m 19
	uint16_t TotalSlots = 361;
	#define ActiveSlots 37

// 5% of duty cycle
#elif ((algorithmNum==5) && (algorithmDC==5))
#define q_m 39
	uint16_t TotalSlots = 1521;
	#define ActiveSlots 77

// 2% of duty cycle
#elif ((algorithmNum==5) && (algorithmDC==2))
#define q_m 99
	uint16_t TotalSlots = 9801;
	#define ActiveSlots 197

// 1% of duty cycle
#elif ((algorithmNum==5) && (algorithmDC==1))
#define q_m 199
	uint16_t TotalSlots = 39601;
	#define ActiveSlots 397

#else
#define q_m 1
#endif
// 5% of duty cycle
//#define q_m 39

// 10% of duty cycle
//#define q_m 19

// not available
#define q_i 19
#define q_j 19

/********************************** Asymmetric QUORUM Algorithm **********************/
// 10% and 2% of duty cycle
#if ((algorithmNum==13) && (algorithmDC==10))
#define q_mA 19
	uint16_t TotalSlotsA = 361;
	#define ActiveSlotsA 37
#define q_mB 99
	uint16_t TotalSlotsB = 9801;
	#define ActiveSlotsB 197

	uint16_t TotalSlots = 361;
	#define ActiveSlots 37
// 10% and 1% of duty cycle
#elif ((algorithmNum==13) && (algorithmDC==5))
#define q_mA 19
	uint16_t TotalSlotsA = 361;
	#define ActiveSlotsA 37
#define q_mB 199
	uint16_t TotalSlotsB = 39601;
	#define ActiveSlotsB 397

	uint16_t TotalSlots = 361;
	#define ActiveSlots 37
// 10% and 5 of duty cycle
#elif ((algorithmNum==13) && (algorithmDC==2))
#define q_mA 19
	uint16_t TotalSlotsA = 361;
	#define ActiveSlotsA 37
#define q_mB 39
	uint16_t TotalSlotsB = 1521;
	#define ActiveSlotsB 77

	uint16_t TotalSlots = 361;
	#define ActiveSlots 37
// 10% and 10% of duty cycle
#elif ((algorithmNum==13) && (algorithmDC==1))
#define q_mA 19
	uint16_t TotalSlotsA = 361;
	#define ActiveSlotsA 37
#define q_mB 19
	uint16_t TotalSlotsB = 361;
	#define ActiveSlotsB 37

	uint16_t TotalSlots = 361;
	#define ActiveSlots 37
#else
#define q_m 1
#define q_mA 1
#define q_mB 1
#endif
// 5% of duty cycle
//#define q_m 39

// 10% of duty cycle
//#define q_m 19


/********************************** Search Light **********************/
// num =14
// 10% and 2% of duty cycle
#if ((algorithmNum==14) && (algorithmDC==10))
	#define AsearchN 20
	uint16_t TotalSlotsA = 200;
	#define ActiveSlotsA 2

	#define BsearchN 100
	uint16_t TotalSlotsB = 5000;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2


	// 10% and 1% of duty cycle
#elif ((algorithmNum==14) && (algorithmDC==5))
	#define AsearchN 20
	uint16_t TotalSlotsA = 200;
	#define ActiveSlotsA 2

	#define BsearchN 200
	uint16_t TotalSlotsB = 20000;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2


// 10% and 5% of duty cycle
#elif ((algorithmNum==14) && (algorithmDC==2))
	#define AsearchN 20
	uint16_t TotalSlotsA = 200;
	#define ActiveSlotsA 2

	#define BsearchN 40
	uint16_t TotalSlotsB = 800;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2


// 10% and 10% of duty cycle
#elif ((algorithmNum==14) && (algorithmDC==1))
	#define AsearchN 20
	uint16_t TotalSlotsA = 200;
	#define ActiveSlotsA 10

	#define BsearchN 20
	uint16_t TotalSlotsB = 200;
	#define ActiveSlotsB 10

	uint16_t TotalSlots = 20;
	#define ActiveSlots 10

// Symmetric Duty Cycles (11+duty cycle)
#elif ((algorithmNum==14) && (algorithmDC==1110))
	#define AsearchN 20
	uint16_t TotalSlotsA = 200;
	#define ActiveSlotsA 10

	#define BsearchN 20
	uint16_t TotalSlotsB = 200;
	#define ActiveSlotsB 10

	uint16_t TotalSlots = 20;
	#define ActiveSlots 10

#elif ((algorithmNum==14) && (algorithmDC==115))
	#define AsearchN 40
	uint16_t TotalSlotsA = 800;
	#define ActiveSlotsA 10

	#define BsearchN 40
	uint16_t TotalSlotsB = 800;
	#define ActiveSlotsB 10

	uint16_t TotalSlots = 20;
	#define ActiveSlots 10

#elif ((algorithmNum==14) && (algorithmDC==112))
	#define AsearchN 100
	uint16_t TotalSlotsA = 5000;
	#define ActiveSlotsA 2

	#define BsearchN 100
	uint16_t TotalSlotsB = 5000;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2

#elif ((algorithmNum==14) && (algorithmDC==111))
	#define AsearchN 200
	uint16_t TotalSlotsA = 20000;
	#define ActiveSlotsA 2

	#define BsearchN 200
	uint16_t TotalSlotsB = 20000;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2


#endif
/********************************** Hedis  **********************/
// num =15
// 10% and 2% of duty cycle
#if ((algorithmNum==15) && (algorithmDC==10))
	#define AsearchN 20
	uint16_t TotalSlotsA = 380;
	#define ActiveSlotsA 2

	#define BsearchN 100
	uint16_t TotalSlotsB = 9900;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2

	// 10% and 1% of duty cycle
#elif ((algorithmNum==15)&& (algorithmDC==5))
	#define AsearchN 20
	uint16_t TotalSlotsA = 380;
	#define ActiveSlotsA 2

	#define BsearchN 200
	uint16_t TotalSlotsB = 39800;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2



// 10% and 5% of duty cycle
#elif ((algorithmNum==15) && (algorithmDC==2))
	#define AsearchN 20
	uint16_t TotalSlotsA = 380;
	#define ActiveSlotsA 2

	#define BsearchN 40
	uint16_t TotalSlotsB = 1560;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2



// 10% and 10% of duty cycle
#elif ((algorithmNum==15) && (algorithmDC==1))
	#define AsearchN 20
	uint16_t TotalSlotsA = 380;
	#define ActiveSlotsA 10

	#define BsearchN 20
	uint16_t TotalSlotsB = 380;
	#define ActiveSlotsB 10

	uint16_t TotalSlots = 20;
	#define ActiveSlots 10

// Symmetric Duty Cycles 
#elif ((algorithmNum==15) && (algorithmDC==1110))
	#define AsearchN 20
	uint16_t TotalSlotsA = 380;
	#define ActiveSlotsA 10

	#define BsearchN 20
	uint16_t TotalSlotsB = 380;
	#define ActiveSlotsB 10

	uint16_t TotalSlots = 20;
	#define ActiveSlots 10

#elif ((algorithmNum==15) && (algorithmDC==115))
	#define AsearchN 40
	uint16_t TotalSlotsA = 1560;
	#define ActiveSlotsA 2

	#define BsearchN 40
	uint16_t TotalSlotsB = 1560;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2

#elif ((algorithmNum==15) && (algorithmDC==112))
	#define AsearchN 100
	uint16_t TotalSlotsA = 9900;
	#define ActiveSlotsA 2

	#define BsearchN 100
	uint16_t TotalSlotsB = 9900;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2

#elif ((algorithmNum==15)&& (algorithmDC==111))
	#define AsearchN 200
	uint16_t TotalSlotsA = 39800;
	#define ActiveSlotsA 2

	#define BsearchN 200
	uint16_t TotalSlotsB = 39800;
	#define ActiveSlotsB 2 

	uint16_t TotalSlots = 20;
	#define ActiveSlots 2

#endif

/********************************** Todis **********************/
// num =16
// 10% and 2% of duty cycle
#if ((algorithmNum==16) && (algorithmDC==10))
	#define AsearchN 29
	uint32_t TotalSlotsA = 24273;
	#define ActiveSlotsA 10

	#define BsearchN 149
	uint32_t TotalSlotsB = 3307353;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10


	// 10% and 1% of duty cycle
#elif ((algorithmNum==16)&& (algorithmDC==5))
	#define AsearchN 29
	uint32_t TotalSlotsA = 24273;
	#define ActiveSlotsA 10

	#define BsearchN 299
	uint32_t TotalSlotsB = 26729703;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10


// 10% and 5% of duty cycle
#elif ((algorithmNum==16) && (algorithmDC==2))
	#define AsearchN 29
	uint32_t TotalSlotsA = 24273;
	#define ActiveSlotsA 10

	#define BsearchN 59
	uint32_t TotalSlotsB = 205143;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10

// 10% and 10% of duty cycle
#elif ((algorithmNum==16) && (algorithmDC==1))
	#define AsearchN 29
	uint32_t TotalSlotsA = 24273;
	#define ActiveSlotsA 10

	#define BsearchN 29
	uint32_t TotalSlotsB = 24273;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10

// Symmetric Duty Cycles 

#elif ((algorithmNum==16) && (algorithmDC==1110))
	#define AsearchN 29
	uint32_t TotalSlotsA = 24273;
	#define ActiveSlotsA 10

	#define BsearchN 29
	uint32_t TotalSlotsB = 24273;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10

#elif ((algorithmNum==16) && (algorithmDC==115))
	#define AsearchN 59
	uint32_t TotalSlotsA = 205143;
	#define ActiveSlotsA 10

	#define BsearchN 59
	uint32_t TotalSlotsB = 205143;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10

#elif ((algorithmNum==16) && (algorithmDC==112))
	#define AsearchN 149
	uint32_t TotalSlotsA = 3307353;
	#define ActiveSlotsA 10

	#define BsearchN 149
	uint32_t TotalSlotsB = 3307353;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10

#elif ((algorithmNum==16)&& (algorithmDC==111))
	#define AsearchN 299
	uint32_t TotalSlotsA = 26729703;
	#define ActiveSlotsA 10

	#define BsearchN 299
	uint32_t TotalSlotsB = 26729703;
	#define ActiveSlotsB 10

	uint32_t TotalSlots = 20;
	#define ActiveSlots 10


#elif ((algorithmNum != 14) && (algorithmNum != 15))
	#define AsearchN 29
	#define BsearchN 29
#endif


/********************************** Diff Code **********************/
// num =17
// 10% and 2% of duty cycle
#if ((algorithmNum==17) && (algorithmDC==10))
#define va  31
#define ka  6
#define vb  651
#define kb  26
#define lamda 1
uint32_t BA[6]={
0, 1, 6, 18, 22, 29};
uint32_t BB[26]={
0,1,34,58,77,129,193,220,281,295,
327,377,387,389,400,417,426,442,498,
527,565,568,572,616,631};
	uint32_t TotalSlotsA =62;
	#define ActiveSlotsA  6
	uint32_t TotalSlotsB =1302;
	#define ActiveSlotsB  26
#define ActiveSlots 1
uint32_t TotalSlots =1;
int16_t bibd_primeA =89;
int16_t bibd_primeB =89;

	// 10% and 1% of duty cycle
#elif ((algorithmNum==17)&& (algorithmDC==5))
#define va  31
#define ka  6
#define vb  2451
#define kb  56
#define lamda 1
uint32_t BA[6]={
0, 1, 6, 18, 22, 29};
uint32_t BB[56]={
17, 78, 155, 174, 210, 220, 234, 245, 260, 261,
267, 309, 430, 483, 527, 603, 608, 642, 751, 768,
948, 1010, 1088, 1146, 1154, 1237, 1246, 1249, 1365, 1383,
1405, 1412, 1417, 1433, 1437, 1447, 1448, 1450, 1560, 1564,
1616, 1821, 1894, 1976, 2005, 2007, 2035, 2109, 2129, 2152,
2197, 2260, 2281, 2361, 2399, 2431};
	               };
	uint32_t TotalSlotsA =62;
	#define ActiveSlotsA  6
	uint32_t TotalSlotsB =4902;
	#define ActiveSlotsB  56
#define ActiveSlots 1
uint32_t TotalSlots =1;
int16_t bibd_primeA =89;
int16_t bibd_primeB =89;


// 10% and 5% of duty cycle
#elif ((algorithmNum==17) && (algorithmDC==2))
#define va  31
#define ka  6
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[6]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[98]={1,13,68,97,137,360,568,611,657,670,696,717,833,889,963,1070,1071,1073,1107,1122,
                  1261,1378,1402,1503,1984,1989,2054,2163,2225,2301,2308,2670,2748,2793,2802,2825,
                  2843,2896,3000,3008,3169,3186,3211,3527,3782,3929,4128,4257,4536,4594,4725,4745,
	                4818,5209,5215,5253,5367,5371,5588,5598,5670,5790,5847,6034,6113,6124,6246,6338,
	                6399,6426,6566,6596,6671,6687,6921,7221,7243,7561,7609,7829,7848,7862,7948,8091,
		              8233,8296,8360,8560,8720,8817,8930,9011,9098,9126,9224,9374,9409,9440
		               };
	uint32_t TotalSlotsA =62;
	#define ActiveSlotsA  6
	uint32_t TotalSlotsB =182;
	#define ActiveSlotsB  10
#define ActiveSlots 1
uint32_t TotalSlots =1;
int16_t bibd_primeA =89;
int16_t bibd_primeB =89;


// 10% and 10% of duty cycle
#elif ((algorithmNum==17) && (algorithmDC==1))
#define va  31
#define ka  6
#define vb  31
#define kb  6
#define lamda 1
uint32_t BA[6]={
0, 1, 6, 18, 22, 29};
uint32_t BB[6]={
0, 1, 6, 18, 22, 29};
	uint32_t TotalSlotsA =62;
	#define ActiveSlotsA  6
	uint32_t TotalSlotsB =62;
	#define ActiveSlotsB  6

#define ActiveSlots 1
uint32_t TotalSlots =1;
int16_t bibd_primeA =89;
int16_t bibd_primeB =89;



#endif


/********************************** Rotation-based NDP **********************/
// num = 18

// 10% and 2% of duty cycle of proposed
///*
#if ((algorithmNum==18) && (algorithmDC==10))
// 2%
#define va 2451
#define ka 50
// 10%
#define vb  91
#define kb  10
#define lamda 1
uint32_t BA[50]={0,1,7,49,170,223,267,343,348,382,491,508,688,750,828,886,
							894,977,986,989,1105,1123,1177,1190,1300,1304,1356,1561,1634,
							1716,1745,1747,1775,1849,1869,1892,1937,2000,2021,2101,2139,
							2171,2208,2269,2346,2365,2401,2411,2425,2436};
uint32_t BB[10]={0,1,3,9,27,49,56,61,77,81};
uint32_t TotalSlotsA =2451;
#define ActiveSlotsA 50
int16_t bibd_primeA = 2447;
uint32_t TotalSlotsB = 91;
#define ActiveSlotsB 10
int16_t bibd_primeB = 89;
#define ActiveSlots 1
uint32_t TotalSlots =1;
//*/
// 10% and 1% of duty cycle of proposed
#elif ((algorithmNum==18) && (algorithmDC==5) )
// 1%
#define va 9507
#define ka 98
// 10%
#define vb  91
#define kb  10
#define lamda 1
uint16_t BA[98]={1,13,68,97,137,360,568,611,657,670,696,717,833,889,963,1070,1071,1073,1107,1122,
                  1261,1378,1402,1503,1984,1989,2054,2163,2225,2301,2308,2670,2748,2793,2802,2825,
                  2843,2896,3000,3008,3169,3186,3211,3527,3782,3929,4128,4257,4536,4594,4725,4745,
	                4818,5209,5215,5253,5367,5371,5588,5598,5670,5790,5847,6034,6113,6124,6246,6338,
	                6399,6426,6566,6596,6671,6687,6921,7221,7243,7561,7609,7829,7848,7862,7948,8091,
		              8233,8296,8360,8560,8720,8817,8930,9011,9098,9126,9224,9374,9409,9440
		               };
uint32_t BB[10]={0,1,3,9,27,49,56,61,77,81};
uint32_t TotalSlotsA =9507;
#define ActiveSlotsA 98
int16_t bibd_primeA = 9497;
uint32_t TotalSlotsB = 91;
#define ActiveSlotsB 10
int16_t bibd_primeB = 89;
#define ActiveSlots 1
uint32_t TotalSlots =1;

// 10% and 5%
#elif ((algorithmNum==18) && (algorithmDC==2))
#define va 381
#define ka 20
#define vb 91
#define kb 10
#define lamda 1
uint32_t BA[20]={
0, 1, 19, 28, 96, 118, 151, 153, 176, 202,
240, 254, 290, 296, 300, 307, 337, 361, 366, 369};
uint32_t BB[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
	uint32_t TotalSlotsA =381;
	#define ActiveSlotsA  20
	int16_t bibd_primeA =379;
	uint32_t TotalSlotsB =91;
	#define ActiveSlotsB  10
	int16_t bibd_primeB =89;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1

// 10% 10% of duty cycle of proposed
#elif ((algorithmNum==18) && (algorithmDC==1))
#define va 91
#define ka 10
#define vb 91
#define kb 10
#define lamda 1
uint32_t BA[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
uint32_t BB[10]={
0, 1, 3, 9, 27, 49, 56, 61, 77, 81};
	uint32_t TotalSlotsA =91;
	#define ActiveSlotsA 10
	int16_t bibd_primeA =89;
	uint32_t TotalSlotsB =91;
	#define ActiveSlotsB 10
	int16_t bibd_primeB =89;
	uint32_t TotalSlots =1;
	#define ActiveSlots 1
#endif
